{"version":3,"sources":["webpack:///./src/Layout.tsx","webpack:///./src/pages/index.tsx"],"names":["Content","Layout","Sider","Header","RootLayout","children","query","render","data","menuSection","window","location","pathname","replace","process","split","title","site","siteMetadata","meta","name","content","lang","className","to","theme","mode","defaultSelectedKeys","Item","key","style","padding","IndexPage"],"mappings":"mRASeA,GAAoBC,IAA3BC,MAA2BD,IAApBD,SAASG,EAAWF,IAAXE,OAGjB,SAASC,EAAT,GAA+D,IAAzCC,EAAyC,EAAzCA,SAC3B,OACE,kBAAC,cAAD,CACEC,MAAK,aASLC,OAAQ,SAACC,GACP,IAIMC,GAHc,oBAAXC,OACHA,OAAOC,SAASC,SAASC,QAjBpBC,yBAiBwC,IAC7C,KAC0BC,MAAM,KAAK,GAE3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOR,EAAKS,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/B,0BAAMC,KAAK,QAGb,kBAACnB,EAAD,CAAQoB,UAAU,UAChB,yBAAKA,UAAU,QACb,kBAAC,OAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,QAIJ,yBAAKD,UAAU,iBACb,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEE,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAClB,IAEtB,kBAAC,IAAKmB,KAAN,CAAWC,IAAI,QACb,kBAAC,OAAD,CAAML,GAAG,SACP,uCAGJ,kBAAC,IAAKI,KAAN,CAAWC,IAAI,WACb,kBAAC,OAAD,CAAML,GAAG,oBACP,0CAGJ,kBAAC,IAAKI,KAAN,CAAWC,IAAI,QACb,kBAAC,OAAD,CAAML,GAAG,SACP,yCAMR,kBAAC,IAAD,CAAQD,UAAU,mBAChB,kBAAC,IAAD,CAAQO,MAAO,CAAEC,QAAS,gBACxB,kBAAC/B,EAAD,CACE8B,MAAO,CACLC,QAAS,KAMV1B,OAxEf,SAmFWD,O,oJCjGf,4CASe4B,UANG,WAChB,OACE,kBAAC,IAAD","file":"component---src-pages-index-tsx-a2abc3181985c6a465ab.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql, Link } from 'gatsby';\nimport { AutoComplete, Input, Layout, Menu } from 'antd';\nimport { Logo } from './Logo';\nimport './Layout.css';\nimport { Sidebar } from './sidebar';\nimport { Search } from './Search';\n\nconst { Sider, Content, Header } = Layout;\nconst pathPrefix = process.env.GATSBY_PATH_PREFIX || '';\n\nexport function RootLayout({ children }: React.PropsWithChildren<{}>) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={(data) => {\n        const currentPath =\n          typeof window !== 'undefined'\n            ? window.location.pathname.replace(pathPrefix, '')\n            : '/';\n        const menuSection = currentPath.split('/')[1];\n\n        return (\n          <Layout>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                { name: 'description', content: 'Sample' },\n                { name: 'keywords', content: 'sample, something' },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n\n            <Header className=\"header\">\n              <div className=\"logo\">\n                <Link to=\"/\">\n                  <Logo />\n                </Link>\n              </div>\n\n              <div className=\"header-search\">\n                <Search />\n              </div>\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[menuSection]}\n              >\n                <Menu.Item key=\"wiki\">\n                  <Link to=\"/wiki\">\n                    <div>Wiki</div>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"modules\">\n                  <Link to=\"/modules/explore\">\n                    <div>Modules</div>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"help\">\n                  <Link to=\"/help\">\n                    <div>Help</div>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Header>\n\n            <Layout className=\"content-wrapper\">\n              <Layout style={{ padding: '0 24px 24px' }}>\n                <Content\n                  style={{\n                    padding: 24,\n                    // margin: '24px 0',\n                    // minHeight: 'inherit',\n                    // backgroundColor: '#fff',\n                  }}\n                >\n                  {children}\n                </Content>\n              </Layout>\n            </Layout>\n          </Layout>\n        );\n      }}\n    />\n  );\n}\n\nexport default RootLayout;\n","import React from 'react';\nimport { RootLayout as Layout } from '../Layout';\n\nconst IndexPage = () => {\n  return (\n    <Layout>Homepage placeholder. Click the navigation to get started</Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}