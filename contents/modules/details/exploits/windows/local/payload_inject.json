{
  "name": "Windows Manage Memory Payload Injection",
  "fullname": "exploit/windows/local/payload_inject",
  "aliases": [
    "post/windows/manage/payload_inject"
  ],
  "rank": 600,
  "disclosure_date": "2011-10-12",
  "type": "exploit",
  "author": [
    "Carlos Perez <carlos_perez@darkoperator.com>",
    "sinn3r <sinn3r@metasploit.com>"
  ],
  "description": "This module will inject a payload into memory of a process.  If a payload\n        isn't selected, then it'll default to a reverse x86 TCP meterpreter.  If the PID\n        datastore option isn't specified, then it'll inject into notepad.exe instead.",
  "references": [

  ],
  "platform": "Windows",
  "arch": "x86, x64",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows"
  ],
  "path": "/modules/exploits/windows/local/payload_inject.rb",
  "ref_name": "windows/local/payload_inject",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "integer",
      "name": "PID",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Process Identifier to inject of process to inject payload. 0=New Process"
    },
    {
      "type": "integer",
      "name": "PPID",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Process Identifier for PPID spoofing when creating a new process. (0 = no PPID spoofing)"
    },
    {
      "type": "bool",
      "name": "AUTOUNHOOK",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Auto remove EDRs hooks"
    },
    {
      "type": "integer",
      "name": "WAIT_UNHOOK",
      "required": true,
      "default": 5,
      "aliases": [

      ],
      "advanced": false,
      "description": "Seconds to wait for unhook to be executed"
    }
  ]
}