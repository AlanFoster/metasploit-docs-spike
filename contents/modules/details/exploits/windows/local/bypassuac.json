{
  "name": "Windows Escalate UAC Protection Bypass",
  "fullname": "exploit/windows/local/bypassuac",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2010-12-31",
  "type": "exploit",
  "author": [
    "David Kennedy \"ReL1K\" <kennedyd013@gmail.com>",
    "mitnick",
    "mubix <mubix@hak5.org>"
  ],
  "description": "This module will bypass Windows UAC by utilizing the trusted publisher\n        certificate through process injection. It will spawn a second shell that\n        has the UAC flag turned off.",
  "references": [
    "http://www.trustedsec.com/december-2010/bypass-windows-uac/"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows x86",
    "Windows x64"
  ],
  "path": "/modules/exploits/windows/local/bypassuac.rb",
  "ref_name": "windows/local/bypassuac",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "bool",
      "name": "Powershell::persist",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Run the payload in a loop"
    },
    {
      "type": "integer",
      "name": "Powershell::prepend_sleep",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend seconds of sleep"
    },
    {
      "type": "bool",
      "name": "Powershell::prepend_protections_bypass",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend AMSI/SBL bypass"
    },
    {
      "type": "bool",
      "name": "Powershell::strip_comments",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Strip comments"
    },
    {
      "type": "bool",
      "name": "Powershell::strip_whitespace",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Strip whitespace"
    },
    {
      "type": "bool",
      "name": "Powershell::sub_vars",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Substitute variable names"
    },
    {
      "type": "bool",
      "name": "Powershell::sub_funcs",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Substitute function names"
    },
    {
      "type": "bool",
      "name": "Powershell::exec_in_place",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Produce PSH without executable wrapper"
    },
    {
      "type": "bool",
      "name": "Powershell::exec_rc4",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Encrypt PSH with RC4"
    },
    {
      "type": "bool",
      "name": "Powershell::remove_comspec",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Produce script calling powershell directly"
    },
    {
      "type": "bool",
      "name": "Powershell::noninteractive",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Execute powershell without interaction"
    },
    {
      "type": "bool",
      "name": "Powershell::encode_final_payload",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Encode final payload for -EncodedCommand"
    },
    {
      "type": "bool",
      "name": "Powershell::encode_inner_payload",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Encode inner payload for -EncodedCommand"
    },
    {
      "type": "bool",
      "name": "Powershell::wrap_double_quotes",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Wraps the -Command argument in single quotes"
    },
    {
      "type": "bool",
      "name": "Powershell::no_equals",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Pad base64 until no \"=\" remains"
    },
    {
      "type": "enum",
      "name": "Powershell::method",
      "required": true,
      "default": "reflection",
      "aliases": [

      ],
      "advanced": true,
      "description": "Payload delivery method (Accepted: net, reflection, old, msil)"
    },
    {
      "type": "enum",
      "name": "TECHNIQUE",
      "required": true,
      "default": "EXE",
      "aliases": [

      ],
      "advanced": false,
      "description": "Technique to use if UAC is turned off (Accepted: PSH, EXE)"
    }
  ]
}