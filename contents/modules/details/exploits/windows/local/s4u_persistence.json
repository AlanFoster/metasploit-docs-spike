{
  "name": "Windows Manage User Level Persistent Payload Installer",
  "fullname": "exploit/windows/local/s4u_persistence",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2013-01-02",
  "type": "exploit",
  "author": [
    "Thomas McCarthy \"smilingraccoon\" <smilingraccoon@gmail.com>",
    "Brandon McCann \"zeknox\" <bmccann@accuvant.com>"
  ],
  "description": "Creates a scheduled task that will run using service-for-user (S4U).\n        This allows the scheduled task to run even as an unprivileged user\n        that is not logged into the device. This will result in lower security\n        context, allowing access to local resources only. The module\n        requires 'Logon as a batch job' permissions (SeBatchLogonRight).",
  "references": [
    "http://www.pentestgeek.com/2013/02/11/scheduled-tasks-with-s4u-and-on-demand-persistence/",
    "http://www.scriptjunkie.us/2013/01/running-code-from-a-non-elevated-account-at-any-time/"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows"
  ],
  "path": "/modules/exploits/windows/local/s4u_persistence.rb",
  "ref_name": "windows/local/s4u_persistence",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FREQUENCY",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Schedule trigger: Frequency in minutes to execute"
    },
    {
      "type": "integer",
      "name": "EXPIRE_TIME",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Number of minutes until trigger expires"
    },
    {
      "type": "enum",
      "name": "TRIGGER",
      "required": true,
      "default": "schedule",
      "aliases": [

      ],
      "advanced": false,
      "description": "Payload trigger method (Accepted: event, lock, logon, schedule, unlock)"
    },
    {
      "type": "string",
      "name": "REXENAME",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Name of exe on remote system"
    },
    {
      "type": "string",
      "name": "RTASKNAME",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Name of task on remote system"
    },
    {
      "type": "string",
      "name": "PATH",
      "required": false,
      "default": "%TEMP%",
      "aliases": [

      ],
      "advanced": false,
      "description": "PATH to write payload"
    },
    {
      "type": "string",
      "name": "EVENT_LOG",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Event trigger: The event log to check for event"
    },
    {
      "type": "integer",
      "name": "EVENT_ID",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Event trigger: Event ID to trigger on."
    },
    {
      "type": "string",
      "name": "XPATH",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "XPath query"
    }
  ]
}