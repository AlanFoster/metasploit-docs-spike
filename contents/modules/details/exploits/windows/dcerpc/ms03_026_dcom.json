{
  "name": "MS03-026 Microsoft RPC DCOM Interface Overflow",
  "fullname": "exploit/windows/dcerpc/ms03_026_dcom",
  "aliases": [

  ],
  "rank": 500,
  "disclosure_date": "2003-07-16",
  "type": "exploit",
  "author": [
    "hdm <x@hdm.io>",
    "spoonm <spoonm@no$email.com>",
    "cazz <bmc@shmoo.com>"
  ],
  "description": "This module exploits a stack buffer overflow in the RPCSS service, this vulnerability\n        was originally found by the Last Stage of Delirium research group and has been\n        widely exploited ever since. This module can exploit the English versions of\n        Windows NT 4.0 SP3-6a, Windows 2000, Windows XP, and Windows 2003 all in one request :)",
  "references": [
    "https://cvedetails.com/cve/CVE-2003-0352/",
    "OSVDB (2100)",
    "https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2003/MS03-026",
    "http://www.securityfocus.com/bid/8205"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows NT SP3-6a/2000/XP/2003 Universal"
  ],
  "path": "/modules/exploits/windows/dcerpc/ms03_026_dcom.rb",
  "ref_name": "windows/dcerpc/ms03_026_dcom",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 135,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "DCERPC::max_frag_size",
      "required": true,
      "default": 4096,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the DCERPC packet fragmentation size"
    },
    {
      "type": "bool",
      "name": "DCERPC::fake_bind_multi",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use multi-context bind calls"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_prepend",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to prepend before the target"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_append",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to append the target"
    },
    {
      "type": "enum",
      "name": "DCERPC::smb_pipeio",
      "required": false,
      "default": "rw",
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a different delivery method for accessing named pipes (Accepted: rw, trans)"
    },
    {
      "type": "integer",
      "name": "DCERPC::ReadTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds to wait for DCERPC responses"
    }
  ]
}