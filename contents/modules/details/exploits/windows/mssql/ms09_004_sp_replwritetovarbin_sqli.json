{
  "name": "MS09-004 Microsoft SQL Server sp_replwritetovarbin Memory Corruption via SQL Injection",
  "fullname": "exploit/windows/mssql/ms09_004_sp_replwritetovarbin_sqli",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2008-12-09",
  "type": "exploit",
  "author": [
    "jduck <jduck@metasploit.com>",
    "Rodrigo Marcos"
  ],
  "description": "A heap-based buffer overflow can occur when calling the undocumented\n        \"sp_replwritetovarbin\" extended stored procedure. This vulnerability affects\n        all versions of Microsoft SQL Server 2000 and 2005, Windows Internal Database,\n        and Microsoft Desktop Engine (MSDE) without the updates supplied in MS09-004.\n        Microsoft patched this vulnerability in SP3 for 2005 without any public\n        mention.\n\n        This exploit smashes several pointers, as shown below.\n\n        1. pointer to a 32-bit value that is set to 0\n        2. pointer to a 32-bit value that is set to a length influenced by the buffer\n          length.\n        3. pointer to a 32-bit value that is used as a vtable pointer. In MSSQL 2000,\n          this value is referenced with a displacement of 0x38. For MSSQL 2005, the\n          displacement is 0x10. The address of our buffer is conveniently stored in\n          ecx when this instruction is executed.\n        4. On MSSQL 2005, an additional vtable ptr is smashed, which is referenced with\n          a displacement of 4. This pointer is not used by this exploit.\n\n        This particular exploit replaces the previous dual-method exploit. It uses\n        a technique where the value contained in ecx becomes the stack. From there,\n        return oriented programming is used to normalize the execution state and\n        finally execute the payload via a \"jmp esp\". All addresses used were found\n        within the sqlservr.exe memory space, yielding very reliable code execution\n        using only a single query.\n\n        NOTE: The MSSQL server service does not automatically restart by default. That\n        said, some exceptions are caught and will not result in terminating the process.\n        If the exploit crashes the service prior to hijacking the stack, it won't die.\n        Otherwise, it's a goner.",
  "references": [
    "OSVDB (50589)",
    "https://cvedetails.com/cve/CVE-2008-5416/",
    "http://www.securityfocus.com/bid/32710",
    "https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2009/MS09-004",
    "https://www.exploit-db.com/exploits/7501",
    "http://www.secforce.co.uk/blog/2011/01/exploiting-ms09-004-via-sql-injection/"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [
    80,
    8080,
    443,
    8000,
    8888,
    8880,
    8008,
    3000,
    8443
  ],
  "autofilter_services": [
    "http",
    "https"
  ],
  "targets": [
    "Automatic",
    "MSSQL 2000 / MSDE SP0 (8.00.194)",
    "MSSQL 2000 / MSDE SP1 (8.00.384)",
    "MSSQL 2000 / MSDE SP2 (8.00.534)",
    "MSSQL 2000 / MSDE SP3 (8.00.760)",
    "MSSQL 2000 / MSDE SP4 (8.00.2039)",
    "MSSQL 2005 SP0 (9.00.1399.06)",
    "MSSQL 2005 SP1 (9.00.2047.00)",
    "MSSQL 2005 SP2 (9.00.3042.00)",
    "CRASHER"
  ],
  "path": "/modules/exploits/windows/mssql/ms09_004_sp_replwritetovarbin_sqli.rb",
  "ref_name": "windows/mssql/ms09_004_sp_replwritetovarbin_sqli",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 80,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "string",
      "name": "VHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "HTTP server virtual host"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "string",
      "name": "UserAgent",
      "required": false,
      "default": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
      "aliases": [

      ],
      "advanced": true,
      "description": "The User-Agent header to use for all requests"
    },
    {
      "type": "string",
      "name": "HttpUsername",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "The HTTP username to specify for authentication"
    },
    {
      "type": "string",
      "name": "HttpPassword",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "The HTTP password to specify for authentication"
    },
    {
      "type": "path",
      "name": "HttpRawHeaders",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Path to ERB-templatized raw headers to append to existing headers"
    },
    {
      "type": "bool",
      "name": "DigestAuthIIS",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Conform to IIS, should work for most servers. Only set to false for non-IIS servers"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "bool",
      "name": "FingerprintCheck",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Conduct a pre-exploit fingerprint verification"
    },
    {
      "type": "string",
      "name": "DOMAIN",
      "required": true,
      "default": "WORKSTATION",
      "aliases": [

      ],
      "advanced": true,
      "description": "The domain to use for Windows authentication"
    },
    {
      "type": "float",
      "name": "HttpClientTimeout",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "HTTP connection and receive timeout"
    },
    {
      "type": "bool",
      "name": "HttpPartialResponses",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return partial HTTP responses despite timeouts"
    },
    {
      "type": "bool",
      "name": "HttpTrace",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Show the raw HTTP requests and responses"
    },
    {
      "type": "bool",
      "name": "HttpTraceHeadersOnly",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Show HTTP headers only in HttpTrace"
    },
    {
      "type": "string",
      "name": "HttpTraceColors",
      "required": false,
      "default": "red/blu",
      "aliases": [

      ],
      "advanced": true,
      "description": "HTTP request and response colors for HttpTrace (unset to disable)"
    },
    {
      "type": "enum",
      "name": "HTTP::uri_encode_mode",
      "required": false,
      "default": "hex-normal",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable URI encoding (Accepted: none, hex-normal, hex-noslashes, hex-random, hex-all, u-normal, u-all, u-random)"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_full_url",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use the full URL for all HTTP requests"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_method_uri_count",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many whitespace characters to use between the method and uri"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_uri_version_count",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many whitespace characters to use between the uri and version"
    },
    {
      "type": "enum",
      "name": "HTTP::pad_method_uri_type",
      "required": false,
      "default": "space",
      "aliases": [

      ],
      "advanced": false,
      "description": "What type of whitespace to use between the method and uri (Accepted: space, tab, apache)"
    },
    {
      "type": "enum",
      "name": "HTTP::pad_uri_version_type",
      "required": false,
      "default": "space",
      "aliases": [

      ],
      "advanced": false,
      "description": "What type of whitespace to use between the uri and version (Accepted: space, tab, apache)"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_valid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random, but valid, HTTP method for request"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_invalid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random invalid, HTTP method for request"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_case",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use random casing for the HTTP method"
    },
    {
      "type": "bool",
      "name": "HTTP::version_random_valid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random, but valid, HTTP version for request"
    },
    {
      "type": "bool",
      "name": "HTTP::version_random_invalid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random invalid, HTTP version for request"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_dir_self_reference",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert self-referential directories into the uri"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_dir_fake_relative",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert fake relative directories into the uri"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_use_backslashes",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use back slashes instead of forward slashes in the uri "
    },
    {
      "type": "bool",
      "name": "HTTP::pad_fake_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake headers into the HTTP request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_fake_headers_count",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake headers to insert into the HTTP request"
    },
    {
      "type": "bool",
      "name": "HTTP::pad_get_params",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake query string variables into the request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_get_params_count",
      "required": false,
      "default": 16,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake query string variables to insert into the request"
    },
    {
      "type": "bool",
      "name": "HTTP::pad_post_params",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake post variables into the request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_post_params_count",
      "required": false,
      "default": 16,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake post variables to insert into the request"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_fake_end",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Add a fake end of URI (eg: /%20HTTP/1.0/../../)"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_fake_params_start",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Add a fake start of params to the URI (eg: /%3fa=b/../)"
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "string",
      "name": "METHOD",
      "required": true,
      "default": "GET",
      "aliases": [

      ],
      "advanced": false,
      "description": "GET or POST"
    },
    {
      "type": "string",
      "name": "GET_PATH",
      "required": true,
      "default": "/",
      "aliases": [

      ],
      "advanced": false,
      "description": "The complete path with [SQLi] indicating the injection"
    },
    {
      "type": "string",
      "name": "DATA",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "POST data, if necessary, with [SQLi] indicating the injection"
    },
    {
      "type": "string",
      "name": "COOKIE",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "Cookie value"
    },
    {
      "type": "path",
      "name": "HEX2BINARY",
      "required": false,
      "default": "/Users/alan/Documents/code/metasploit-framework/data/exploits/mssql/h2b",
      "aliases": [

      ],
      "advanced": true,
      "description": "The path to the hex2binary script on the disk"
    }
  ]
}