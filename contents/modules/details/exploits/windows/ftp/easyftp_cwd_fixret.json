{
  "name": "EasyFTP Server CWD Command Stack Buffer Overflow",
  "fullname": "exploit/windows/ftp/easyftp_cwd_fixret",
  "aliases": [

  ],
  "rank": 500,
  "disclosure_date": "2010-02-16",
  "type": "exploit",
  "author": [
    "Paul Makowski <my.hndl@gmail.com>",
    "jduck <jduck@metasploit.com>"
  ],
  "description": "This module exploits a stack-based buffer overflow in EasyFTP Server 1.7.0.11\n        and earlier. EasyFTP fails to check input size when parsing 'CWD' commands, which\n        leads to a stack based buffer overflow.  EasyFTP allows anonymous access by\n        default; valid credentials are typically unnecessary to exploit this vulnerability.\n\n        After version 1.7.0.12, this package was renamed \"UplusFtp\".\n\n        This exploit utilizes a small piece of code that I\\'ve referred to as 'fixRet'.\n        This code allows us to inject of payload of ~500 bytes into a 264 byte buffer by\n        'fixing' the return address post-exploitation.  See references for more information.",
  "references": [
    "OSVDB (62134)",
    "http://www.securityfocus.com/bid/38262",
    "http://paulmakowski.wordpress.com/2010/02/28/increasing-payload-size-w-return-address-overwrite/",
    "http://paulmakowski.wordpress.com/2010/04/19/metasploit-plugin-for-easyftp-server-exploit",
    "https://seclists.org/bugtraq/2010/Feb/202"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [
    21,
    2121
  ],
  "autofilter_services": [
    "ftp"
  ],
  "targets": [
    "Windows Universal - v1.7.0.2",
    "Windows Universal - v1.7.0.3",
    "Windows Universal - v1.7.0.4",
    "Windows Universal - v1.7.0.5",
    "Windows Universal - v1.7.0.6",
    "Windows Universal - v1.7.0.7",
    "Windows Universal - v1.7.0.8",
    "Windows Universal - v1.7.0.9",
    "Windows Universal - v1.7.0.10",
    "Windows Universal - v1.7.0.11"
  ],
  "path": "/modules/exploits/windows/ftp/easyftp_cwd_fixret.rb",
  "ref_name": "windows/ftp/easyftp_cwd_fixret",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 21,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "FTPUSER",
      "required": false,
      "default": "anonymous",
      "aliases": [

      ],
      "advanced": false,
      "description": "The username to authenticate as"
    },
    {
      "type": "string",
      "name": "FTPPASS",
      "required": false,
      "default": "mozilla@example.com",
      "aliases": [

      ],
      "advanced": false,
      "description": "The password for the specified username"
    },
    {
      "type": "integer",
      "name": "FTPTimeout",
      "required": true,
      "default": 16,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds to wait for a reply from an FTP command"
    },
    {
      "type": "bool",
      "name": "FTPDEBUG",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Whether or not to print verbose debug statements"
    },
    {
      "type": "bool",
      "name": "PassiveMode",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set true for extended passive (EPSV) ftp mode."
    }
  ]
}