{
  "name": "GetGo Download Manager HTTP Response Buffer Overflow",
  "fullname": "exploit/windows/browser/getgodm_http_response_bof",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": "2014-03-09",
  "type": "exploit",
  "author": [
    "Julien Ahrens",
    "Gabor Seljan",
    "bzyo",
    "sinn3r <sinn3r@metasploit.com>"
  ],
  "description": "This module exploits a stack-based buffer overflow vulnerability in\n        GetGo Download Manager version 5.3.0.2712 earlier, caused by an\n        overly long HTTP response header.\n\n        By persuading the victim to download a file from a malicious server, a\n        remote attacker could execute arbitrary code on the system or cause\n        the application to crash. This module has been tested successfully on\n        Windows XP SP3.",
  "references": [
    "https://www.exploit-db.com/exploits/32132",
    "OSVDB (103910)",
    "https://cvedetails.com/cve/CVE-2014-2206/"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Automatic",
    "4.9.0.1982 on Windows XP SP3",
    "5.3.0.2712 on Windows XP SP3"
  ],
  "path": "/modules/exploits/windows/browser/getgodm_http_response_bof.rb",
  "ref_name": "windows/browser/getgodm_http_response_bof",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "bool",
      "name": "DynamicSehRecord",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate a dynamic SEH record (more stealthy)"
    },
    {
      "type": "address",
      "name": "SRVHOST",
      "required": true,
      "default": "0.0.0.0",
      "aliases": [

      ],
      "advanced": false,
      "description": "The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."
    },
    {
      "type": "port",
      "name": "SRVPORT",
      "required": true,
      "default": 8080,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local port to listen on."
    },
    {
      "type": "string",
      "name": "ListenerComm",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The specific communication channel to use for this service"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL for incoming connections"
    },
    {
      "type": "path",
      "name": "SSLCert",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to a custom SSL certificate (default is randomly generated)"
    },
    {
      "type": "bool",
      "name": "SSLCompression",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable SSL/TLS-level compression"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maximum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "URIPATH",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The URI to use for this exploit (default is random)"
    },
    {
      "type": "bool",
      "name": "HTTP::no_cache",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Disallow the browser to cache HTTP content"
    },
    {
      "type": "bool",
      "name": "HTTP::chunked",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "bool",
      "name": "HTTP::junk_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable insertion of random junk HTTP headers"
    },
    {
      "type": "enum",
      "name": "HTTP::compression",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"
    },
    {
      "type": "string",
      "name": "HTTP::server_name",
      "required": true,
      "default": "Apache",
      "aliases": [

      ],
      "advanced": false,
      "description": "Configures the Server header of all outgoing replies"
    },
    {
      "type": "address",
      "name": "URIHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Host to use in URI (useful for tunnels)"
    },
    {
      "type": "port",
      "name": "URIPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Port to use in URI (useful for tunnels)"
    },
    {
      "type": "bool",
      "name": "SendRobots",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return a robots.txt file if asked for one"
    }
  ]
}