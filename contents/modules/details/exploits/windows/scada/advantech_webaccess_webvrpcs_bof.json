{
  "name": "Advantech WebAccess Webvrpcs Service Opcode 80061 Stack Buffer Overflow",
  "fullname": "exploit/windows/scada/advantech_webaccess_webvrpcs_bof",
  "aliases": [

  ],
  "rank": 400,
  "disclosure_date": "2017-11-02",
  "type": "exploit",
  "author": [
    "mr_me <mr_me@offensive-security.com>"
  ],
  "description": "This module exploits a stack buffer overflow in Advantech WebAccess 8.2.\n          By sending a specially crafted DCERPC request, an attacker could overflow\n          the buffer and execute arbitrary code.",
  "references": [
    "http://www.zerodayinitiative.com/advisories/ZDI-17-938",
    "https://cvedetails.com/cve/CVE-2017-14016/",
    "https://ics-cert.us-cert.gov/advisories/ICSA-17-306-02"
  ],
  "platform": "Windows",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows 7 x86 - Advantech WebAccess 8.2-2017.03.31"
  ],
  "path": "/modules/exploits/windows/scada/advantech_webaccess_webvrpcs_bof.rb",
  "ref_name": "windows/scada/advantech_webaccess_webvrpcs_bof",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 4592,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "DCERPC::max_frag_size",
      "required": true,
      "default": 4096,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the DCERPC packet fragmentation size"
    },
    {
      "type": "bool",
      "name": "DCERPC::fake_bind_multi",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use multi-context bind calls"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_prepend",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to prepend before the target"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_append",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to append the target"
    },
    {
      "type": "enum",
      "name": "DCERPC::smb_pipeio",
      "required": false,
      "default": "rw",
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a different delivery method for accessing named pipes (Accepted: rw, trans)"
    },
    {
      "type": "integer",
      "name": "DCERPC::ReadTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds to wait for DCERPC responses"
    }
  ]
}