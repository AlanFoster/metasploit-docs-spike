{
  "name": "Netcore Router Udp 53413 Backdoor",
  "fullname": "exploit/linux/misc/netcore_udp_53413_backdoor",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": "2014-08-25",
  "type": "exploit",
  "author": [
    "Nixawk",
    "h00die <mike@shorebreaksecurity.com>"
  ],
  "description": "Routers manufactured by Netcore, a popular brand for networking\n        equipment in China, have a wide-open backdoor that can be fairly\n        easily exploited by attackers. These products are also sold under\n        the Netis brand name outside of China. This backdoor allows\n        cyber criminals to easily run arbitrary code on these routers,\n        rendering it vulnerable as a security device.\n        Some models include a non-standard echo command which doesn't\n        honor -e, and are therefore not currently exploitable with\n        Metasploit.  See URLs or module markdown for additional options.",
  "references": [
    "https://www.seebug.org/vuldb/ssvid-90227",
    "http://blog.trendmicro.com/trendlabs-security-intelligence/netis-routers-leave-wide-open-backdoor/",
    "https://github.com/h00die/MSF-Testing-Scripts/blob/master/netis_backdoor.py"
  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "MIPS Little Endian",
    "MIPS Big Endian"
  ],
  "path": "/modules/exploits/linux/misc/netcore_udp_53413_backdoor.rb",
  "ref_name": "linux/misc/netcore_udp_53413_backdoor",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 53413,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "address",
      "name": "SRVHOST",
      "required": true,
      "default": "0.0.0.0",
      "aliases": [

      ],
      "advanced": false,
      "description": "The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."
    },
    {
      "type": "port",
      "name": "SRVPORT",
      "required": true,
      "default": 8080,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local port to listen on."
    },
    {
      "type": "string",
      "name": "ListenerComm",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The specific communication channel to use for this service"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL for incoming connections"
    },
    {
      "type": "path",
      "name": "SSLCert",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to a custom SSL certificate (default is randomly generated)"
    },
    {
      "type": "bool",
      "name": "SSLCompression",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable SSL/TLS-level compression"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maximum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "URIPATH",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The URI to use for this exploit (default is random)"
    },
    {
      "type": "bool",
      "name": "HTTP::no_cache",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Disallow the browser to cache HTTP content"
    },
    {
      "type": "bool",
      "name": "HTTP::chunked",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "bool",
      "name": "HTTP::junk_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable insertion of random junk HTTP headers"
    },
    {
      "type": "enum",
      "name": "HTTP::compression",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"
    },
    {
      "type": "string",
      "name": "HTTP::server_name",
      "required": true,
      "default": "Apache",
      "aliases": [

      ],
      "advanced": false,
      "description": "Configures the Server header of all outgoing replies"
    },
    {
      "type": "address",
      "name": "URIHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Host to use in URI (useful for tunnels)"
    },
    {
      "type": "port",
      "name": "URIPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Port to use in URI (useful for tunnels)"
    },
    {
      "type": "bool",
      "name": "SendRobots",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return a robots.txt file if asked for one"
    },
    {
      "type": "enum",
      "name": "CMDSTAGER::FLAVOR",
      "required": false,
      "default": "auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "The CMD Stager to use. (Accepted: auto, bourne, debug_asm, debug_write, echo, printf, vbs, vbs_adodb, certutil, tftp, wget, curl, fetch, lwprequest, psh_invokewebrequest)"
    },
    {
      "type": "string",
      "name": "CMDSTAGER::DECODER",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The decoder stub to use."
    },
    {
      "type": "string",
      "name": "CMDSTAGER::TEMP",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Writable directory for staged files"
    },
    {
      "type": "bool",
      "name": "CMDSTAGER::SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use SSL/TLS for supported stagers"
    },
    {
      "type": "integer",
      "name": "TIMEOUT",
      "required": true,
      "default": 1000,
      "aliases": [

      ],
      "advanced": false,
      "description": "The socket response timeout in milliseconds"
    }
  ]
}