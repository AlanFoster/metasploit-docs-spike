{
  "name": "Apport / ABRT chroot Privilege Escalation",
  "fullname": "exploit/linux/local/apport_abrt_chroot_priv_esc",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2015-03-31",
  "type": "exploit",
  "author": [
    "St√©phane Graber",
    "Tavis Ormandy",
    "Ricardo F. Teixeira",
    "bcoles <bcoles@gmail.com>"
  ],
  "description": "This module attempts to gain root privileges on Linux systems by\n        invoking the default coredump handler inside a namespace (\"container\").\n\n        Apport versions 2.13 through 2.17.x before 2.17.1 on Ubuntu are\n        vulnerable, due to a feature which allows forwarding reports to\n        a container's Apport by changing the root directory before loading\n        the crash report, causing `usr/share/apport/apport` within the crashed\n        task's directory to be executed.\n\n        Similarly, Fedora is vulnerable when the kernel crash handler is\n        configured to change root directory before executing ABRT, causing\n        `usr/libexec/abrt-hook-ccpp` within the crashed task's directory to be\n        executed.\n\n        In both instances, the crash handler does not drop privileges,\n        resulting in code execution as root.\n\n        This module has been tested successfully on Apport 2.14.1 on\n        Ubuntu 14.04.1 LTS x86 and x86_64 and ABRT on Fedora 19 and 20 x86_64.",
  "references": [
    "https://cvedetails.com/cve/CVE-2015-1318/",
    "http://www.openwall.com/lists/oss-security/2015/04/14/4",
    "https://www.exploit-db.com/exploits/36782",
    "https://www.exploit-db.com/exploits/36746",
    "https://gist.github.com/taviso/0f02c255c13c5c113406",
    "https://bugzilla.redhat.com/show_bug.cgi?id=1211223",
    "https://bugzilla.redhat.com/show_bug.cgi?id=1211835",
    "https://usn.ubuntu.com/usn/USN-2569-1/",
    "https://code.launchpad.net/~stgraber/apport/pidns-support/+merge/200893",
    "https://bugs.launchpad.net/ubuntu/+source/apport/+bug/1438758",
    "http://bazaar.launchpad.net/~apport-hackers/apport/trunk/revision/2943"
  ],
  "platform": "Linux",
  "arch": "x86, x64",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Auto"
  ],
  "path": "/modules/exploits/linux/local/apport_abrt_chroot_priv_esc.rb",
  "ref_name": "linux/local/apport_abrt_chroot_priv_esc",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files"
    }
  ]
}