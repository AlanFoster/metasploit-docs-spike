{
  "name": "Linux Kernel 4.6.3 Netfilter Privilege Escalation",
  "fullname": "exploit/linux/local/netfilter_priv_esc_ipv4",
  "aliases": [

  ],
  "rank": 400,
  "disclosure_date": "2016-06-03",
  "type": "exploit",
  "author": [
    "h00die <mike@stcyrsecurity.com>",
    "vnik",
    "Jesse Hertz",
    "Tim Newsham"
  ],
  "description": "This module attempts to exploit a netfilter bug on Linux Kernels before 4.6.3, and currently\n          only works against Ubuntu 16.04 (not 16.04.1) with kernel 4.4.0-21-generic.\n\n          Several conditions have to be met for successful exploitation:\n          Ubuntu:\n          1. ip_tables.ko (ubuntu), iptable_raw (fedora) has to be loaded (root running iptables -L will do such)\n          2. libc6-dev-i386 (ubuntu), glibc-devel.i686 & libgcc.i686 (fedora) needs to be installed to compile\n          Kernel 4.4.0-31-generic and newer are not vulnerable. This exploit does not bypass SMEP/SMAP.\n\n          We write the ascii files and compile on target instead of locally since metasm bombs for not\n          having cdefs.h (even if locally installed)",
  "references": [
    "https://www.exploit-db.com/exploits/40049",
    "https://cvedetails.com/cve/CVE-2016-4997/",
    "https://cvedetails.com/cve/CVE-2016-4998/",
    "https://www.openwall.com/lists/oss-security/2016/06/24/5",
    "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=ce683e5f9d045e5d67d1312a42b359cb2ab2a13c",
    "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91"
  ],
  "platform": "Linux",
  "arch": "x86, x64",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Ubuntu"
  ],
  "path": "/modules/exploits/linux/local/netfilter_priv_esc_ipv4.rb",
  "ref_name": "linux/local/netfilter_priv_esc_ipv4",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
    "Reliability": [
      "unreliable-session"
    ],
    "Stability": [
      "crash-os-down"
    ]
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "integer",
      "name": "MAXWAIT",
      "required": true,
      "default": 180,
      "aliases": [

      ],
      "advanced": false,
      "description": "Max seconds to wait for decrementation in seconds"
    },
    {
      "type": "bool",
      "name": "REEXPLOIT",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "desc already ran, no need to re-run, skip to running pwn"
    },
    {
      "type": "enum",
      "name": "COMPILE",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": false,
      "description": "Compile on target (Accepted: Auto, True, False)"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files (must not be mounted noexec)"
    }
  ]
}