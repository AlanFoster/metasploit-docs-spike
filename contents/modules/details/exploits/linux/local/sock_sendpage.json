{
  "name": "Linux Kernel Sendpage Local Privilege Escalation",
  "fullname": "exploit/linux/local/sock_sendpage",
  "aliases": [

  ],
  "rank": 500,
  "disclosure_date": "2009-08-13",
  "type": "exploit",
  "author": [
    "Tavis Ormandy",
    "Julien Tinnes <julien at cr0.org>",
    "spender",
    "rcvalle",
    "egypt <egypt@metasploit.com>"
  ],
  "description": "The Linux kernel failed to properly initialize some entries in the\n        proto_ops struct for several protocols, leading to NULL being\n        dereferenced and used as a function pointer. By using mmap(2) to map\n        page 0, an attacker can execute arbitrary code in the context of the\n        kernel.\n\n        Several public exploits exist for this vulnerability, including\n        spender's wunderbar_emporium and rcvalle's ppc port, sock_sendpage.c.\n\n        All Linux 2.4/2.6 versions since May 2001 are believed to be affected:\n        2.4.4 up to and including 2.4.37.4; 2.6.0 up to and including 2.6.30.4\n\n        This module has been tested successfully on CentOS 5.0 (i386) with\n        kernel version 2.6.18-8.1.1.tl5; and Debian 3.1r8 Sarge (i686) with\n        kernel version 2.4.27-3-386.",
  "references": [
    "https://cvedetails.com/cve/CVE-2009-2692/",
    "https://www.exploit-db.com/exploits/9545",
    "https://www.exploit-db.com/exploits/9641",
    "http://www.securityfocus.com/bid/36038",
    "https://www.securityfocus.com/archive/1/505751",
    "http://blog.cr0.org/2009/08/linux-null-pointer-dereference-due-to.html"
  ],
  "platform": "Linux",
  "arch": "x86",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Linux x86"
  ],
  "path": "/modules/exploits/linux/local/sock_sendpage.rb",
  "ref_name": "linux/local/sock_sendpage",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
    "Reliability": [
      "repeatable-session"
    ],
    "Stability": [
      "crash-os-down"
    ]
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "bool",
      "name": "DEBUG_EXPLOIT",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Make the exploit executable be verbose about what it's doing"
    },
    {
      "type": "bool",
      "name": "ForceExploit",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Override check result"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files (must not be mounted noexec)"
    }
  ]
}