{
  "name": "ABRT raceabrt Privilege Escalation",
  "fullname": "exploit/linux/local/abrt_raceabrt_priv_esc",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2015-04-14",
  "type": "exploit",
  "author": [
    "Tavis Ormandy",
    "bcoles <bcoles@gmail.com>"
  ],
  "description": "This module attempts to gain root privileges on Linux systems with\n        a vulnerable version of Automatic Bug Reporting Tool (ABRT) configured\n        as the crash handler.\n\n        A race condition allows local users to change ownership of arbitrary\n        files (CVE-2015-3315). This module uses a symlink attack on\n        `/var/tmp/abrt/*/maps` to change the ownership of `/etc/passwd`,\n        then adds a new user with UID=0 GID=0 to gain root privileges.\n        Winning the race could take a few minutes.\n\n        This module has been tested successfully on:\n\n        abrt 2.1.11-12.el7 on RHEL 7.0 x86_64;\n        abrt 2.1.5-1.fc19 on Fedora Desktop 19 x86_64;\n        abrt 2.2.1-1.fc19 on Fedora Desktop 19 x86_64;\n        abrt 2.2.2-2.fc20 on Fedora Desktop 20 x86_64;\n        abrt 2.3.0-3.fc21 on Fedora Desktop 21 x86_64.",
  "references": [
    "https://cvedetails.com/cve/CVE-2015-3315/",
    "https://www.exploit-db.com/exploits/36747",
    "http://www.securityfocus.com/bid/75117",
    "https://gist.github.com/taviso/fe359006836d6cd1091e",
    "http://www.openwall.com/lists/oss-security/2015/04/14/4",
    "http://www.openwall.com/lists/oss-security/2015/04/16/12",
    "https://github.com/abrt/abrt/commit/80408e9e24a1c10f85fd969e1853e0f192157f92",
    "https://access.redhat.com/security/cve/cve-2015-1862",
    "https://access.redhat.com/security/cve/cve-2015-3315",
    "https://access.redhat.com/articles/1415483",
    "https://bugzilla.redhat.com/show_bug.cgi?id=1211223",
    "https://bugzilla.redhat.com/show_bug.cgi?id=1211835",
    "https://bugzilla.redhat.com/show_bug.cgi?id=1218239"
  ],
  "platform": "Linux",
  "arch": "x86, x64",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Auto"
  ],
  "path": "/modules/exploits/linux/local/abrt_raceabrt_priv_esc.rb",
  "ref_name": "linux/local/abrt_raceabrt_priv_esc",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "integer",
      "name": "TIMEOUT",
      "required": true,
      "default": "900",
      "aliases": [

      ],
      "advanced": false,
      "description": "Race timeout (seconds)"
    },
    {
      "type": "string",
      "name": "USERNAME",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "Username of new UID=0 user (default: random)"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files"
    }
  ]
}