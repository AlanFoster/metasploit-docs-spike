{
  "name": "Sun Solaris sadmind adm_build_path() Buffer Overflow",
  "fullname": "exploit/solaris/sunrpc/sadmind_adm_build_path",
  "aliases": [

  ],
  "rank": 500,
  "disclosure_date": "2008-10-14",
  "type": "exploit",
  "author": [
    "Ramon de C Valle <rcvalle@metasploit.com>",
    "Adriano Lima <adriano@risesecurity.org>"
  ],
  "description": "This module exploits a buffer overflow vulnerability in adm_build_path()\n        function of sadmind daemon.\n\n        The distributed system administration daemon (sadmind) is the daemon used by\n        Solstice AdminSuite applications to perform distributed system administration\n        operations.\n\n        The sadmind daemon is started automatically by the inetd daemon whenever a\n        request to invoke an operation is received. The sadmind daemon process\n        continues to run for 15 minutes after the last request is completed, unless a\n        different idle-time is specified with the -i command line option. The sadmind\n        daemon may be started independently from the command line, for example, at\n        system boot time. In this case, the -i option has no effect; sadmind continues\n        to run, even if there are no active requests.",
  "references": [
    "https://cvedetails.com/cve/CVE-2008-4556/",
    "OSVDB (49111)",
    "http://risesecurity.org/advisories/RISE-2008001.txt"
  ],
  "platform": "Solaris",
  "arch": "x86",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Sun Solaris 9 x86 Brute Force",
    "Sun Solaris 9 x86",
    "Debug"
  ],
  "path": "/modules/exploits/solaris/sunrpc/sadmind_adm_build_path.rb",
  "ref_name": "solaris/sunrpc/sadmind_adm_build_path",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 111,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "bool",
      "name": "ONCRPC::tcp_request_fragmentation",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable fragmentation of TCP ONC/RPC requests"
    },
    {
      "type": "integer",
      "name": "TIMEOUT",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Number of seconds to wait for responses to RPC calls"
    },
    {
      "type": "integer",
      "name": "BruteWait",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay between brute force attempts"
    },
    {
      "type": "integer",
      "name": "BruteStep",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Step size between brute force attempts"
    }
  ]
}