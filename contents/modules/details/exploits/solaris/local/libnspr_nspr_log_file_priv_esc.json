{
  "name": "Solaris libnspr NSPR_LOG_FILE Privilege Escalation",
  "fullname": "exploit/solaris/local/libnspr_nspr_log_file_priv_esc",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2006-10-11",
  "type": "exploit",
  "author": [
    "iDefense",
    "Marco Ivaldi",
    "bcoles <bcoles@gmail.com>"
  ],
  "description": "This module exploits an arbitrary file write vulnerability in the\n        Netscape Portable Runtime library (libnspr) on unpatched Solaris systems\n        prior to Solaris 10u3 which allows users to gain root privileges.\n\n        libnspr versions prior to 4.6.3 allow users to specify a log file with\n        the `NSPR_LOG_FILE` environment variable. The log file is created with\n        the privileges of the running process, resulting in privilege escalation\n        when used in combination with a SUID executable.\n\n        This module writes a shared object to the trusted library directory\n        `/usr/lib/secure` and runs the specified SUID binary with the shared\n        object loaded using the `LD_LIBRARY_PATH` environment variable.\n\n        This module has been tested successfully with libnspr version 4.5.1\n        on Solaris 10u1 (01/06) (x86) and Solaris 10u2 (06/06) (x86).",
  "references": [
    "http://www.securityfocus.com/bid/20471",
    "https://cvedetails.com/cve/CVE-2006-4842/",
    "https://www.exploit-db.com/exploits/2543",
    "https://www.exploit-db.com/exploits/2569",
    "https://www.exploit-db.com/exploits/2641",
    "https://securitytracker.com/id/1017050",
    "https://securitytracker.com/id/1017051",
    "https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR",
    "http://web.archive.org/web/20061118024339/http://labs.idefense.com:80/intelligence/vulnerabilities/display.php?id=418",
    "http://web.archive.org/web/20061110164829/http://sunsolve.sun.com/search/document.do?assetkey=1-26-102658-1"
  ],
  "platform": "Solaris",
  "arch": "x86, x64, sparc",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Auto"
  ],
  "path": "/modules/exploits/solaris/local/libnspr_nspr_log_file_priv_esc.rb",
  "ref_name": "solaris/local/libnspr_nspr_log_file_priv_esc",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "string",
      "name": "SUID_PATH",
      "required": true,
      "default": "/usr/bin/cancel",
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to suid executable (must be linked to a vulnerable version of libnspr4.so)"
    },
    {
      "type": "bool",
      "name": "ForceExploit",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Override check result"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files"
    }
  ]
}