{
  "name": "Solaris 'EXTREMEPARR' dtappgather Privilege Escalation",
  "fullname": "exploit/solaris/local/extremeparr_dtappgather_priv_esc",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2017-04-24",
  "type": "exploit",
  "author": [
    "Shadow Brokers",
    "Hacker Fantastic",
    "bcoles <bcoles@gmail.com>"
  ],
  "description": "This module exploits a directory traversal vulnerability in the\n        `dtappgather` executable included with Common Desktop Environment (CDE)\n        on unpatched Solaris systems prior to Solaris 10u11 which allows users\n        to gain root privileges.\n\n        dtappgather allows users to create a user-owned directory at any\n        location on the filesystem using the `DTUSERSESSION` environment\n        variable.\n\n        This module creates a directory in `/usr/lib/locale`, writes a shared\n        object to the directory, and runs the specified SUID binary with the\n        shared object loaded using the `LC_TIME` environment variable.\n\n        This module has been tested successfully on:\n\n        Solaris 9u7 (09/04) (x86);\n        Solaris 10u1 (01/06) (x86);\n        Solaris 10u2 (06/06) (x86);\n        Solaris 10u4 (08/07) (x86);\n        Solaris 10u8 (10/09) (x86);\n        Solaris 10u9 (09/10) (x86).",
  "references": [
    "http://www.securityfocus.com/bid/97774",
    "https://cvedetails.com/cve/CVE-2017-3622/",
    "https://www.exploit-db.com/exploits/41871",
    "https://github.com/HackerFantastic/Public/blob/master/exploits/dtappgather-poc.sh",
    "http://www.oracle.com/technetwork/security-advisory/cpuapr2017-3236618.html"
  ],
  "platform": "Solaris, Unix",
  "arch": "x86, x64, sparc",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Auto"
  ],
  "path": "/modules/exploits/solaris/local/extremeparr_dtappgather_priv_esc.rb",
  "ref_name": "solaris/local/extremeparr_dtappgather_priv_esc",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
    "AKA": [
      "EXTREMEPARR"
    ]
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "integer",
      "name": "SESSION",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The session to run this module on."
    },
    {
      "type": "bool",
      "name": "EXE::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom exe instead of automatically generating a payload exe"
    },
    {
      "type": "path",
      "name": "EXE::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the executable template"
    },
    {
      "type": "path",
      "name": "EXE::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The executable template file name."
    },
    {
      "type": "bool",
      "name": "EXE::Inject",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to preserve the original EXE function"
    },
    {
      "type": "bool",
      "name": "EXE::OldMethod",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set to use the substitution EXE generation method."
    },
    {
      "type": "bool",
      "name": "EXE::FallBack",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use the default template in case the specified one is missing"
    },
    {
      "type": "bool",
      "name": "MSI::EICAR",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Generate an EICAR file instead of regular payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Custom",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use custom msi instead of automatically generating a payload msi"
    },
    {
      "type": "path",
      "name": "MSI::Path",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The directory in which to look for the msi template"
    },
    {
      "type": "path",
      "name": "MSI::Template",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The msi template file name"
    },
    {
      "type": "bool",
      "name": "MSI::UAC",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"
    },
    {
      "type": "integer",
      "name": "FileDropperDelay",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay in seconds before attempting cleanup"
    },
    {
      "type": "string",
      "name": "SUID_PATH",
      "required": true,
      "default": "/usr/bin/at",
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to suid executable"
    },
    {
      "type": "string",
      "name": "DTAPPGATHER_PATH",
      "required": true,
      "default": "/usr/dt/bin/dtappgather",
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to dtappgather executable"
    },
    {
      "type": "bool",
      "name": "ForceExploit",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Override check result"
    },
    {
      "type": "string",
      "name": "WritableDir",
      "required": true,
      "default": "/tmp",
      "aliases": [

      ],
      "advanced": true,
      "description": "A directory where we can write files"
    }
  ]
}