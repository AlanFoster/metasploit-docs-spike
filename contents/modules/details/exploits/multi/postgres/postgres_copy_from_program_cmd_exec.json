{
  "name": "PostgreSQL COPY FROM PROGRAM Command Execution",
  "fullname": "exploit/multi/postgres/postgres_copy_from_program_cmd_exec",
  "aliases": [

  ],
  "rank": 600,
  "disclosure_date": "2019-03-20",
  "type": "exploit",
  "author": [
    "Jacob Wilkin"
  ],
  "description": "Installations running Postgres 9.3 and above have functionality which allows for the superuser\n        and users with 'pg_execute_server_program' to pipe to and from an external program using COPY.\n        This allows arbitrary command execution as though you have console access.\n\n        This module attempts to create a new table, then execute system commands in the context of\n        copying the command output into the table.\n\n        This module should work on all Postgres systems running version 9.3 and above.\n\n        For Linux & OSX systems, target 1 is used with cmd payloads such as: cmd/unix/reverse_perl\n\n        For Windows Systems, target 2 is used with powershell payloads such as: cmd/windows/powershell_reverse_tcp\n        Alternativly target 3 can be used to execute generic commands, such as a web_delivery meterpreter powershell payload\n        or other customised command.",
  "references": [
    "https://cvedetails.com/cve/CVE-2019-9193/",
    "https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5",
    "https://www.postgresql.org/docs/9.3/release-9-3.html"
  ],
  "platform": "Linux, Unix, Windows, OSX",
  "arch": "cmd",
  "autofilter_ports": [
    5432
  ],
  "autofilter_services": [
    "postgres"
  ],
  "targets": [
    "Automatic",
    "Unix/OSX/Linux",
    "Windows - PowerShell (In-Memory)",
    "Windows (CMD)"
  ],
  "path": "/modules/exploits/multi/postgres/postgres_copy_from_program_cmd_exec.rb",
  "ref_name": "multi/postgres/postgres_copy_from_program_cmd_exec",
  "check": true,
  "post_auth": true,
  "default_credential": true,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 5432,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "string",
      "name": "DATABASE",
      "required": true,
      "default": "template1",
      "aliases": [

      ],
      "advanced": false,
      "description": "The database to authenticate against"
    },
    {
      "type": "string",
      "name": "USERNAME",
      "required": true,
      "default": "postgres",
      "aliases": [

      ],
      "advanced": false,
      "description": "The username to authenticate as"
    },
    {
      "type": "string",
      "name": "PASSWORD",
      "required": false,
      "default": "postgres",
      "aliases": [

      ],
      "advanced": false,
      "description": "The password for the specified username. Leave blank for a random password."
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "TABLENAME",
      "required": true,
      "default": "rCvxok3M",
      "aliases": [

      ],
      "advanced": false,
      "description": "A table name that does not exist (To avoid deletion)"
    },
    {
      "type": "bool",
      "name": "DUMP_TABLE_OUTPUT",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "select payload command output from table (For Debugging)"
    }
  ]
}