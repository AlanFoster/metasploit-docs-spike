{
  "name": "Adobe Flash Player ByteArray Use After Free",
  "fullname": "exploit/multi/browser/adobe_flash_hacking_team_uaf",
  "aliases": [

  ],
  "rank": 500,
  "disclosure_date": "2015-07-06",
  "type": "exploit",
  "author": [
    "Unknown",
    "juan vazquez <juan.vazquez@metasploit.com>",
    "sinn3r <sinn3r@metasploit.com>"
  ],
  "description": "This module exploits an use after free on Adobe Flash Player. The vulnerability,\n        discovered by Hacking Team and made public as part of the July 2015 data leak, was\n        described as an Use After Free while handling ByteArray objects. This module has\n        been tested successfully on:\n\n        Windows 7 SP1 (32-bit), IE11 and Adobe Flash 18.0.0.194,\n        Windows 7 SP1 (32-bit), Firefox 38.0.5 and Adobe Flash 18.0.0.194,\n        Windows 8.1 (32-bit), IE11 and Adobe Flash 18.0.0.194,\n        Windows 8.1 (32-bit), Firefox and Adobe Flash 18.0.0.194, and\n        Linux Mint \"Rebecca\" (32 bits), Firefox 33.0 and Adobe Flash 11.2.202.468.",
  "references": [
    "https://cvedetails.com/cve/CVE-2015-5119/",
    "https://helpx.adobe.com/security/products/flash-player/apsa15-03.html",
    "http://blog.trendmicro.com/trendlabs-security-intelligence/unpatched-flash-player-flaws-more-pocs-found-in-hacking-team-leak/",
    "https://twitter.com/w3bd3vil/status/618168863708962816"
  ],
  "platform": "Windows, Linux",
  "arch": "x86",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": [
    "Windows",
    "Linux"
  ],
  "path": "/modules/exploits/multi/browser/adobe_flash_hacking_team_uaf.rb",
  "ref_name": "multi/browser/adobe_flash_hacking_team_uaf",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
    "AKA": [
      "0DayFlush"
    ]
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "address",
      "name": "SRVHOST",
      "required": true,
      "default": "0.0.0.0",
      "aliases": [

      ],
      "advanced": false,
      "description": "The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."
    },
    {
      "type": "port",
      "name": "SRVPORT",
      "required": true,
      "default": 8080,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local port to listen on."
    },
    {
      "type": "string",
      "name": "ListenerComm",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The specific communication channel to use for this service"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL for incoming connections"
    },
    {
      "type": "path",
      "name": "SSLCert",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to a custom SSL certificate (default is randomly generated)"
    },
    {
      "type": "bool",
      "name": "SSLCompression",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable SSL/TLS-level compression"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maximum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "URIPATH",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The URI to use for this exploit (default is random)"
    },
    {
      "type": "bool",
      "name": "HTTP::no_cache",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Disallow the browser to cache HTTP content"
    },
    {
      "type": "bool",
      "name": "HTTP::chunked",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "bool",
      "name": "HTTP::junk_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable insertion of random junk HTTP headers"
    },
    {
      "type": "enum",
      "name": "HTTP::compression",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"
    },
    {
      "type": "string",
      "name": "HTTP::server_name",
      "required": true,
      "default": "Apache",
      "aliases": [

      ],
      "advanced": false,
      "description": "Configures the Server header of all outgoing replies"
    },
    {
      "type": "address",
      "name": "URIHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Host to use in URI (useful for tunnels)"
    },
    {
      "type": "port",
      "name": "URIPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Port to use in URI (useful for tunnels)"
    },
    {
      "type": "bool",
      "name": "SendRobots",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return a robots.txt file if asked for one"
    },
    {
      "type": "enum",
      "name": "HTML::unicode",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTTP obfuscation via unicode (Accepted: none, utf-16le, utf-16be, utf-16be-marker, utf-32le, utf-32be)"
    },
    {
      "type": "enum",
      "name": "HTML::base64",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTML obfuscation via an embeded base64 html object (IE not supported) (Accepted: none, plain, single_pad, double_pad, random_space_injection)"
    },
    {
      "type": "integer",
      "name": "HTML::javascript::escape",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTML obfuscation via HTML escaping (number of iterations)"
    },
    {
      "type": "integer",
      "name": "JsObfuscate",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Number of times to obfuscate JavaScript"
    },
    {
      "type": "string",
      "name": "JsIdentifiers",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Identifiers to preserve for JsObfu"
    },
    {
      "type": "bool",
      "name": "Retries",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": false,
      "description": "Allow the browser to retry the module"
    },
    {
      "type": "string",
      "name": "CookieName",
      "required": false,
      "default": "__ua",
      "aliases": [

      ],
      "advanced": true,
      "description": "The name of the tracking cookie"
    },
    {
      "type": "string",
      "name": "CookieExpiration",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Cookie expiration in years (blank=expire on exit)"
    },
    {
      "type": "string",
      "name": "Custom404",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "An external custom 404 URL (Example: http://example.com/404.html)"
    }
  ]
}