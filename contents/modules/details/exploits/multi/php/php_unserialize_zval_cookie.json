{
  "name": "PHP 4 unserialize() ZVAL Reference Counter Overflow (Cookie)",
  "fullname": "exploit/multi/php/php_unserialize_zval_cookie",
  "aliases": [

  ],
  "rank": 200,
  "disclosure_date": "2007-03-04",
  "type": "exploit",
  "author": [
    "hdm <x@hdm.io>",
    "GML <grandmasterlogic@gmail.com>",
    "Stefan Esser <sesser@hardened-php.net>"
  ],
  "description": "This module exploits an integer overflow vulnerability in the unserialize()\n        function of the PHP web server extension. This vulnerability was patched by\n        Stefan in version 4.5.0 and applies all previous versions supporting this function.\n        This particular module targets numerous web applications and is based on the proof\n        of concept provided by Stefan Esser. This vulnerability requires approximately 900k\n        of data to trigger due the multiple Cookie headers requirement. Since we\n        are already assuming a fast network connection, we use a 2Mb block of shellcode for\n        the brute force, allowing quick exploitation for those with fast networks.\n\n        One of the neat things about this vulnerability is that on x86 systems, the EDI register points\n        into the beginning of the hashtable string. This can be used with an egghunter to\n        quickly exploit systems where the location of a valid \"jmp EDI\" or \"call EDI\" instruction\n        is known. The EDI method is faster, but the bandwidth-intensive brute force used by this\n        module is more reliable across a wider range of systems.",
  "references": [
    "https://cvedetails.com/cve/CVE-2007-1286/",
    "OSVDB (32771)",
    "http://www.php-security.org/MOPB/MOPB-04-2007.html"
  ],
  "platform": "Linux",
  "arch": "",
  "autofilter_ports": [
    80,
    8080,
    443,
    8000,
    8888,
    8880,
    8008,
    3000,
    8443
  ],
  "autofilter_services": [
    "http",
    "https"
  ],
  "targets": [
    "Automatic",
    "Linux x86 Generic",
    "Linux x86 phpBB2",
    "Linux x86 punBB",
    "Linux x86 WWWThreads",
    "Linux x86 Deadman Redirect",
    "Linux x86 PhpWebGallery",
    "Linux x86 Ariadne-CMS",
    "Linux x86 ProMA",
    "Linux x86 eGroupware"
  ],
  "path": "/modules/exploits/multi/php/php_unserialize_zval_cookie.rb",
  "ref_name": "multi/php/php_unserialize_zval_cookie",
  "check": true,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "integer",
      "name": "WfsDelay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional delay when waiting for a session"
    },
    {
      "type": "bool",
      "name": "EnableContextEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Use transient context when encoding payloads"
    },
    {
      "type": "path",
      "name": "ContextInformationFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The information file that contains context information"
    },
    {
      "type": "bool",
      "name": "DisablePayloadHandler",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Disable the handler code for the selected payload"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 80,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "VHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "HTTP server virtual host"
    },
    {
      "type": "string",
      "name": "UserAgent",
      "required": false,
      "default": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
      "aliases": [

      ],
      "advanced": true,
      "description": "The User-Agent header to use for all requests"
    },
    {
      "type": "string",
      "name": "HttpUsername",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "The HTTP username to specify for authentication"
    },
    {
      "type": "string",
      "name": "HttpPassword",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "The HTTP password to specify for authentication"
    },
    {
      "type": "path",
      "name": "HttpRawHeaders",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Path to ERB-templatized raw headers to append to existing headers"
    },
    {
      "type": "bool",
      "name": "DigestAuthIIS",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Conform to IIS, should work for most servers. Only set to false for non-IIS servers"
    },
    {
      "type": "bool",
      "name": "FingerprintCheck",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Conduct a pre-exploit fingerprint verification"
    },
    {
      "type": "string",
      "name": "DOMAIN",
      "required": true,
      "default": "WORKSTATION",
      "aliases": [

      ],
      "advanced": true,
      "description": "The domain to use for Windows authentication"
    },
    {
      "type": "float",
      "name": "HttpClientTimeout",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "HTTP connection and receive timeout"
    },
    {
      "type": "bool",
      "name": "HttpPartialResponses",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return partial HTTP responses despite timeouts"
    },
    {
      "type": "bool",
      "name": "HttpTrace",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Show the raw HTTP requests and responses"
    },
    {
      "type": "bool",
      "name": "HttpTraceHeadersOnly",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Show HTTP headers only in HttpTrace"
    },
    {
      "type": "string",
      "name": "HttpTraceColors",
      "required": false,
      "default": "red/blu",
      "aliases": [

      ],
      "advanced": true,
      "description": "HTTP request and response colors for HttpTrace (unset to disable)"
    },
    {
      "type": "enum",
      "name": "HTTP::uri_encode_mode",
      "required": false,
      "default": "hex-normal",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable URI encoding (Accepted: none, hex-normal, hex-noslashes, hex-random, hex-all, u-normal, u-all, u-random)"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_full_url",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use the full URL for all HTTP requests"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_method_uri_count",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many whitespace characters to use between the method and uri"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_uri_version_count",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many whitespace characters to use between the uri and version"
    },
    {
      "type": "enum",
      "name": "HTTP::pad_method_uri_type",
      "required": false,
      "default": "space",
      "aliases": [

      ],
      "advanced": false,
      "description": "What type of whitespace to use between the method and uri (Accepted: space, tab, apache)"
    },
    {
      "type": "enum",
      "name": "HTTP::pad_uri_version_type",
      "required": false,
      "default": "space",
      "aliases": [

      ],
      "advanced": false,
      "description": "What type of whitespace to use between the uri and version (Accepted: space, tab, apache)"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_valid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random, but valid, HTTP method for request"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_invalid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random invalid, HTTP method for request"
    },
    {
      "type": "bool",
      "name": "HTTP::method_random_case",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use random casing for the HTTP method"
    },
    {
      "type": "bool",
      "name": "HTTP::version_random_valid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random, but valid, HTTP version for request"
    },
    {
      "type": "bool",
      "name": "HTTP::version_random_invalid",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a random invalid, HTTP version for request"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_dir_self_reference",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert self-referential directories into the uri"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_dir_fake_relative",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert fake relative directories into the uri"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_use_backslashes",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use back slashes instead of forward slashes in the uri "
    },
    {
      "type": "bool",
      "name": "HTTP::pad_fake_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake headers into the HTTP request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_fake_headers_count",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake headers to insert into the HTTP request"
    },
    {
      "type": "bool",
      "name": "HTTP::pad_get_params",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake query string variables into the request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_get_params_count",
      "required": false,
      "default": 16,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake query string variables to insert into the request"
    },
    {
      "type": "bool",
      "name": "HTTP::pad_post_params",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Insert random, fake post variables into the request"
    },
    {
      "type": "integer",
      "name": "HTTP::pad_post_params_count",
      "required": false,
      "default": 16,
      "aliases": [

      ],
      "advanced": false,
      "description": "How many fake post variables to insert into the request"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_fake_end",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Add a fake end of URI (eg: /%20HTTP/1.0/../../)"
    },
    {
      "type": "bool",
      "name": "HTTP::uri_fake_params_start",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Add a fake start of params to the URI (eg: /%3fa=b/../)"
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "integer",
      "name": "BruteWait",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Delay between brute force attempts"
    },
    {
      "type": "integer",
      "name": "BruteStep",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Step size between brute force attempts"
    },
    {
      "type": "string",
      "name": "URI",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The path to vulnerable PHP script"
    },
    {
      "type": "string",
      "name": "COOKIENAME",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The name of the cookie passed to unserialize()"
    }
  ]
}