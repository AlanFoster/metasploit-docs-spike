{
  "name": "DCOM Exec",
  "fullname": "auxiliary/scanner/smb/impacket/secretsdump",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "auxiliary",
  "author": [
    "Alberto Solino",
    "Spencer McIntyre"
  ],
  "description": "Performs various techniques to dump hashes from the remote machine\n        without executing any agent there. For SAM and LSA Secrets (including\n        cached creds) we try to read as much as we can from the registry and\n        then we save the hives in the target system (%SYSTEMROOT%\\Temp dir) and\n        read the rest of the data from there.",
  "references": [
    "https://github.com/gentilkiwi/kekeo/tree/master/dcsync",
    "http://moyix.blogspot.com.ar/2008/02/syskey-and-sam.html",
    "http://moyix.blogspot.com.ar/2008/02/decrypting-lsa-secrets.html",
    "http://moyix.blogspot.com.ar/2008/02/cached-domain-credentials.html",
    "http://www.quarkslab.com/en-blog+read+13",
    "https://code.google.com/p/creddump/",
    "http://lab.mediaservice.net/code/cachedump.rb",
    "http://insecurety.net/?p=768",
    "http://www.beginningtoseethelight.org/ntsecurity/index.htm",
    "http://www.ntdsxtract.com/downloads/ActiveDirectoryOfflineHashDumpAndForensics.pdf",
    "http://www.passcape.com/index.php?section=blog&cmd=details&id=15",
    "https://github.com/CoreSecurity/impacket/blob/master/examples/secretsdump.py"
  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": null,
  "path": "/modules/auxiliary/scanner/smb/impacket/secretsdump.py",
  "ref_name": "scanner/smb/impacket/secretsdump",
  "check": false,
  "post_auth": true,
  "default_credential": false,
  "notes": {
    "AKA": [
      "secretsdump.py"
    ]
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "integer",
      "name": "THREADS",
      "required": true,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "The number of concurrent threads (max one per host)"
    },
    {
      "type": "bool",
      "name": "ShowProgress",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Display progress messages during a scan"
    },
    {
      "type": "integer",
      "name": "ShowProgressPercent",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The interval in percent that progress should be shown"
    },
    {
      "type": "string",
      "name": "SMBDomain",
      "required": false,
      "default": ".",
      "aliases": [

      ],
      "advanced": false,
      "description": "The Windows domain to use for authentication"
    },
    {
      "type": "string",
      "name": "SMBUser",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The username to authenticate as"
    },
    {
      "type": "string",
      "name": "OutputFile",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Write the results to a file"
    },
    {
      "type": "string",
      "name": "SMBPass",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The password for the specified username"
    },
    {
      "type": "enum",
      "name": "ExecMethod",
      "required": true,
      "default": "smbexec",
      "aliases": [

      ],
      "advanced": false,
      "description": "The method to use for execution (Accepted: smbexec, wmiexec, mmcexec)"
    }
  ]
}