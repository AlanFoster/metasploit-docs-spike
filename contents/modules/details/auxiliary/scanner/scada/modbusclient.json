{
  "name": "Modbus Client Utility",
  "fullname": "auxiliary/scanner/scada/modbusclient",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "auxiliary",
  "author": [
    "EsMnemon <esm@mnemonic.no>",
    "Arnaud SOULLIE <arnaud.soullie@solucom.fr>",
    "Alexandrine TORRENTS <alexandrine.torrents@eurecom.fr>",
    "Mathieu CHEVALIER <mathieu.chevalier@eurecom.fr>",
    "AZSG <AstroZombieSG@gmail.com>"
  ],
  "description": "This module allows reading and writing data to a PLC using the Modbus protocol.\n        This module is based on the 'modiconstop.rb' Basecamp module from DigitalBond,\n        as well as the mbtget perl script.",
  "references": [

  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": null,
  "path": "/modules/auxiliary/scanner/scada/modbusclient.rb",
  "ref_name": "scanner/scada/modbusclient",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [
        "RHOST"
      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 502,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Negotiate SSL/TLS for outgoing connections"
    },
    {
      "type": "enum",
      "name": "SSLVersion",
      "required": true,
      "default": "Auto",
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "DATA_ADDRESS",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Modbus data address"
    },
    {
      "type": "integer",
      "name": "NUMBER",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "Number of coils/registers to read (READ_COILS, READ_DISCRETE_INPUTS, READ_HOLDING_REGISTERS, READ_INPUT_REGISTERS modes only)"
    },
    {
      "type": "integer",
      "name": "DATA",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Data to write (WRITE_COIL and WRITE_REGISTER modes only)"
    },
    {
      "type": "string",
      "name": "DATA_COILS",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Data in binary to write (WRITE_COILS mode only) e.g. 0110"
    },
    {
      "type": "string",
      "name": "DATA_REGISTERS",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Words to write to each register separated with a comma (WRITE_REGISTERS mode only) e.g. 1,2,3,4"
    },
    {
      "type": "integer",
      "name": "UNIT_NUMBER",
      "required": false,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "Modbus unit number"
    }
  ]
}