{
  "name": "Moxa UDP Device Discovery",
  "fullname": "auxiliary/scanner/scada/moxa_discover",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "auxiliary",
  "author": [
    "Patrick DeSantis <p@t-r10t.com>"
  ],
  "description": "The Moxa protocol listens on 4800/UDP and will respond to broadcast\n          or direct traffic.  The service is known to be used on Moxa devices\n          in the NPort, OnCell, and MGate product lines.\n\n          A discovery packet compels a Moxa device to respond to the sender\n          with some basic device information that is needed for more advanced\n          functions.  The discovery data is 8 bytes in length and is the most\n          basic example of the Moxa protocol.  It may be sent out as a\n          broadcast (destination 255.255.255.255) or to an individual device.\n\n          Devices that respond to this query may be vulnerable to serious\n          information disclosure vulnerabilities, such as CVE-2016-9361.\n\n          The module is the work of Patrick DeSantis of Cisco Talos and is\n          derived from original work by K. Reid Wightman. Tested and validated\n          on a Moxa NPort 6250 with firmware versions 1.13 and 1.15.",
  "references": [
    "https://cvedetails.com/cve/CVE-2016-9361/",
    "https://www.digitalbond.com/blog/2016/10/25/serial-killers/",
    "http://www.moxa.com/support/faq/faq_detail.aspx?id=646"
  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": null,
  "path": "/modules/auxiliary/scanner/scada/moxa_discover.rb",
  "ref_name": "scanner/scada/moxa_discover",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "integer",
      "name": "THREADS",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": false,
      "description": "The number of concurrent threads"
    },
    {
      "type": "bool",
      "name": "ShowProgress",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Display progress messages during a scan"
    },
    {
      "type": "integer",
      "name": "ShowProgressPercent",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The interval in percent that progress should be shown"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 4800,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "integer",
      "name": "BATCHSIZE",
      "required": true,
      "default": 256,
      "aliases": [

      ],
      "advanced": false,
      "description": "The number of hosts to probe in each set"
    },
    {
      "type": "address",
      "name": "CHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client address"
    },
    {
      "type": "port",
      "name": "CPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The local client port"
    },
    {
      "type": "integer",
      "name": "ScannerRecvInterval",
      "required": true,
      "default": 30,
      "aliases": [

      ],
      "advanced": true,
      "description": "The maximum numbers of sends before entering the processing loop"
    },
    {
      "type": "integer",
      "name": "ScannerMaxResends",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The maximum times to resend a packet when out of buffers"
    },
    {
      "type": "integer",
      "name": "ScannerRecvQueueLimit",
      "required": true,
      "default": 100,
      "aliases": [

      ],
      "advanced": true,
      "description": "The maximum queue size before breaking out of the processing loop"
    },
    {
      "type": "integer",
      "name": "ScannerRecvWindow",
      "required": true,
      "default": 15,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds to wait post-scan to catch leftover replies"
    }
  ]
}