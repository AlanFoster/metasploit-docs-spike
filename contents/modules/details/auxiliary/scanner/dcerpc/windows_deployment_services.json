{
  "name": "Microsoft Windows Deployment Services Unattend Retrieval",
  "fullname": "auxiliary/scanner/dcerpc/windows_deployment_services",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "auxiliary",
  "author": [
    "Ben Campbell <eat_meatballs@hotmail.co.uk>"
  ],
  "description": "This module retrieves the client unattend file from Windows\n        Deployment Services RPC service and parses out the stored credentials.\n        Tested against Windows 2008 R2 x64 and Windows 2003 x86.",
  "references": [
    "MSDN (http://msdn.microsoft.com/en-us/library/dd891255(prot.20).aspx)",
    "http://rewtdance.blogspot.co.uk/2012/11/windows-deployment-services-clear-text.html"
  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": null,
  "path": "/modules/auxiliary/scanner/dcerpc/windows_deployment_services.rb",
  "ref_name": "scanner/dcerpc/windows_deployment_services",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "addressrange",
      "name": "RHOSTS",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"
    },
    {
      "type": "port",
      "name": "RPORT",
      "required": true,
      "default": 5040,
      "aliases": [

      ],
      "advanced": false,
      "description": "The target port"
    },
    {
      "type": "enum",
      "name": "SSLVerifyMode",
      "required": false,
      "default": "PEER",
      "aliases": [

      ],
      "advanced": true,
      "description": "SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "string",
      "name": "Proxies",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A proxy chain of format type:host:port[,type:host:port][...]"
    },
    {
      "type": "integer",
      "name": "ConnectTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Maximum number of seconds to establish a TCP connection"
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maxiumum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "DCERPC::max_frag_size",
      "required": true,
      "default": 4096,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the DCERPC packet fragmentation size"
    },
    {
      "type": "bool",
      "name": "DCERPC::fake_bind_multi",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": false,
      "description": "Use multi-context bind calls"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_prepend",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to prepend before the target"
    },
    {
      "type": "integer",
      "name": "DCERPC::fake_bind_multi_append",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Set the number of UUIDs to append the target"
    },
    {
      "type": "enum",
      "name": "DCERPC::smb_pipeio",
      "required": false,
      "default": "rw",
      "aliases": [

      ],
      "advanced": false,
      "description": "Use a different delivery method for accessing named pipes (Accepted: rw, trans)"
    },
    {
      "type": "integer",
      "name": "DCERPC::ReadTimeout",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds to wait for DCERPC responses"
    },
    {
      "type": "integer",
      "name": "THREADS",
      "required": true,
      "default": 1,
      "aliases": [

      ],
      "advanced": false,
      "description": "The number of concurrent threads (max one per host)"
    },
    {
      "type": "bool",
      "name": "ShowProgress",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Display progress messages during a scan"
    },
    {
      "type": "integer",
      "name": "ShowProgressPercent",
      "required": true,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "The interval in percent that progress should be shown"
    },
    {
      "type": "bool",
      "name": "ENUM_ARM",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enumerate Unattend for ARM architectures (not currently supported by Windows and will cause an error in System Event Log)"
    }
  ]
}