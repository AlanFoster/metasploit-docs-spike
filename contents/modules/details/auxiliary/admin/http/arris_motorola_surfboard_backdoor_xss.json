{
  "name": "Arris / Motorola Surfboard SBG6580 Web Interface Takeover",
  "fullname": "auxiliary/admin/http/arris_motorola_surfboard_backdoor_xss",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": "2015-04-08",
  "type": "auxiliary",
  "author": [
    "joev <joev@metasploit.com>"
  ],
  "description": "The web interface for the Arris / Motorola Surfboard SBG6580 has\n        several vulnerabilities that, when combined, allow an arbitrary website to take\n        control of the modem, even if the user is not currently logged in. The attacker\n        must successfully know, or guess, the target's internal gateway IP address.\n        This is usually a default value of 192.168.0.1.\n\n        First, a hardcoded backdoor account was discovered in the source code\n        of one device with the credentials \"technician/yZgO8Bvj\". Due to lack of CSRF\n        in the device's login form, these credentials - along with the default\n        \"admin/motorola\" - can be sent to the device by an arbitrary website, thus\n        inadvertently logging the user into the router.\n\n        Once successfully logged in, a persistent XSS vulnerability is\n        exploited in the firewall configuration page. This allows injection of\n        Javascript that can perform any available action in the router interface.\n\n        The following firmware versions have been tested as vulnerable:\n\n        SBG6580-6.5.2.0-GA-06-077-NOSH, and\n        SBG6580-8.6.1.0-GA-04-098-NOSH",
  "references": [
    "https://cvedetails.com/cve/CVE-2015-0964/",
    "https://cvedetails.com/cve/CVE-2015-0965/",
    "https://cvedetails.com/cve/CVE-2015-0966/",
    "https://blog.rapid7.com/2015/06/05/r7-2015-01-csrf-backdoor-and-persistent-xss-on-arris-motorola-cable-modems"
  ],
  "platform": "",
  "arch": "",
  "autofilter_ports": [

  ],
  "autofilter_services": [

  ],
  "targets": null,
  "path": "/modules/auxiliary/admin/http/arris_motorola_surfboard_backdoor_xss.rb",
  "ref_name": "admin/http/arris_motorola_surfboard_backdoor_xss",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "address",
      "name": "SRVHOST",
      "required": true,
      "default": "0.0.0.0",
      "aliases": [

      ],
      "advanced": false,
      "description": "The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."
    },
    {
      "type": "port",
      "name": "SRVPORT",
      "required": true,
      "default": 8080,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local port to listen on."
    },
    {
      "type": "string",
      "name": "ListenerComm",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The specific communication channel to use for this service"
    },
    {
      "type": "bool",
      "name": "SSL",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Negotiate SSL for incoming connections"
    },
    {
      "type": "path",
      "name": "SSLCert",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Path to a custom SSL certificate (default is randomly generated)"
    },
    {
      "type": "bool",
      "name": "SSLCompression",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable SSL/TLS-level compression"
    },
    {
      "type": "string",
      "name": "SSLCipher",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""
    },
    {
      "type": "integer",
      "name": "TCP::max_send_size",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Maximum tcp segment size.  (0 = disable)"
    },
    {
      "type": "integer",
      "name": "TCP::send_delay",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Delays inserted before every send.  (0 = disable)"
    },
    {
      "type": "string",
      "name": "URIPATH",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The URI to use for this exploit (default is random)"
    },
    {
      "type": "bool",
      "name": "HTTP::no_cache",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Disallow the browser to cache HTTP content"
    },
    {
      "type": "bool",
      "name": "HTTP::chunked",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""
    },
    {
      "type": "bool",
      "name": "HTTP::header_folding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable folding of HTTP headers"
    },
    {
      "type": "bool",
      "name": "HTTP::junk_headers",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable insertion of random junk HTTP headers"
    },
    {
      "type": "enum",
      "name": "HTTP::compression",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"
    },
    {
      "type": "string",
      "name": "HTTP::server_name",
      "required": true,
      "default": "Apache",
      "aliases": [

      ],
      "advanced": false,
      "description": "Configures the Server header of all outgoing replies"
    },
    {
      "type": "address",
      "name": "URIHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Host to use in URI (useful for tunnels)"
    },
    {
      "type": "port",
      "name": "URIPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Port to use in URI (useful for tunnels)"
    },
    {
      "type": "bool",
      "name": "SendRobots",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Return a robots.txt file if asked for one"
    },
    {
      "type": "enum",
      "name": "HTML::unicode",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTTP obfuscation via unicode (Accepted: none, utf-16le, utf-16be, utf-16be-marker, utf-32le, utf-32be)"
    },
    {
      "type": "enum",
      "name": "HTML::base64",
      "required": false,
      "default": "none",
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTML obfuscation via an embeded base64 html object (IE not supported) (Accepted: none, plain, single_pad, double_pad, random_space_injection)"
    },
    {
      "type": "integer",
      "name": "HTML::javascript::escape",
      "required": false,
      "default": 0,
      "aliases": [

      ],
      "advanced": false,
      "description": "Enable HTML obfuscation via HTML escaping (number of iterations)"
    },
    {
      "type": "string",
      "name": "DEVICE_IP",
      "required": false,
      "default": "192.168.0.1",
      "aliases": [

      ],
      "advanced": false,
      "description": "Internal IP address of the vulnerable device."
    },
    {
      "type": "string",
      "name": "LOGINS",
      "required": false,
      "default": "technician/yZgO8Bvj,admin/motorola",
      "aliases": [

      ],
      "advanced": false,
      "description": "Comma-separated list of user/pass combinations to attempt."
    },
    {
      "type": "bool",
      "name": "DUMP_DHCP_LIST",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": false,
      "description": "Dump the MAC, IP, and hostnames of all registered DHCP clients."
    },
    {
      "type": "integer",
      "name": "SET_DMZ_HOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The final octet of the IP address to set in the DMZ (1-255)."
    },
    {
      "type": "string",
      "name": "BLOCK_INTERNET_ACCESS",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "Comma-separated list of IP addresses to block internet access for."
    },
    {
      "type": "string",
      "name": "CUSTOM_JS",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "A string of javascript to execute in the context of the device web interface."
    },
    {
      "type": "string",
      "name": "REMOTE_JS",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "A URL to inject into a script tag in the context of the device web interface."
    }
  ]
}