{
  "name": "Linux Command Shell, Bind TCP Inline (IPv6)",
  "fullname": "payload/linux/x86/shell_bind_ipv6_tcp",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "payload",
  "author": [
    "kris katterjohn <katterjohn@gmail.com>"
  ],
  "description": "Listen for a connection over IPv6 and spawn a command shell",
  "references": [

  ],
  "platform": "Linux",
  "arch": "x86",
  "autofilter_ports": null,
  "autofilter_services": null,
  "targets": null,
  "path": "/modules/payloads/singles/linux/x86/shell_bind_ipv6_tcp.rb",
  "ref_name": "linux/x86/shell_bind_ipv6_tcp",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "port",
      "name": "LPORT",
      "required": true,
      "default": 4444,
      "aliases": [

      ],
      "advanced": false,
      "description": "The listen port"
    },
    {
      "type": "address",
      "name": "RHOST",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "The target address"
    },
    {
      "type": "bool",
      "name": "PrependFork",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes: if (fork()) { exit(0); }"
    },
    {
      "type": "bool",
      "name": "PrependSetresuid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setresuid(0, 0, 0) system call"
    },
    {
      "type": "bool",
      "name": "PrependSetreuid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setreuid(0, 0) system call"
    },
    {
      "type": "bool",
      "name": "PrependSetuid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setuid(0) system call"
    },
    {
      "type": "bool",
      "name": "PrependSetresgid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setresgid(0, 0, 0) system call"
    },
    {
      "type": "bool",
      "name": "PrependSetregid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setregid(0, 0) system call"
    },
    {
      "type": "bool",
      "name": "PrependSetgid",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that executes the setgid(0) system call"
    },
    {
      "type": "bool",
      "name": "PrependChrootBreak",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Prepend a stub that will break out of a chroot (includes setreuid to root)"
    },
    {
      "type": "bool",
      "name": "AppendExit",
      "required": false,
      "default": "false",
      "aliases": [

      ],
      "advanced": true,
      "description": "Append a stub that executes the exit(0) system call"
    },
    {
      "type": "integer",
      "name": "MeterpreterDebugLevel",
      "required": true,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "Set debug level for meterpreter 0-3 (Default output is strerr)"
    },
    {
      "type": "string",
      "name": "RemoteMeterpreterDebugFile",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "Redirect Debug Info to a Log File"
    },
    {
      "type": "bool",
      "name": "CreateSession",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Create a new session for every successful login"
    },
    {
      "type": "string",
      "name": "InitialAutoRunScript",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "An initial script to run on session creation (before AutoRunScript)"
    },
    {
      "type": "string",
      "name": "AutoRunScript",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A script to run automatically on session creation."
    },
    {
      "type": "string",
      "name": "CommandShellCleanupCommand",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A command to run before the session is closed"
    }
  ]
}