{
  "name": "Python Meterpreter, Python Reverse HTTPS Stager",
  "fullname": "payload/python/meterpreter/reverse_https",
  "aliases": [

  ],
  "rank": 300,
  "disclosure_date": null,
  "type": "payload",
  "author": [
    "Spencer McIntyre"
  ],
  "description": "Run a meterpreter server in Python (2.5-2.7 & 3.1-3.6). Tunnel communication over HTTP using SSL",
  "references": [

  ],
  "platform": "Python",
  "arch": "python",
  "autofilter_ports": null,
  "autofilter_services": null,
  "targets": null,
  "path": "/modules/payloads/stagers/python/reverse_https.rb",
  "ref_name": "python/meterpreter/reverse_https",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "path",
      "name": "HandlerSSLCert",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Path to a SSL certificate in unified PEM format, ignored for HTTP transports"
    },
    {
      "type": "address",
      "name": "LHOST",
      "required": true,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local listener hostname"
    },
    {
      "type": "port",
      "name": "LPORT",
      "required": true,
      "default": 8443,
      "aliases": [

      ],
      "advanced": false,
      "description": "The local listener port"
    },
    {
      "type": "port",
      "name": "ReverseListenerBindPort",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The port to bind to on the local system if different from LPORT"
    },
    {
      "type": "bool",
      "name": "ReverseAllowProxy",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST"
    },
    {
      "type": "integer",
      "name": "PingbackRetries",
      "required": true,
      "default": 0,
      "aliases": [

      ],
      "advanced": true,
      "description": "How many additional successful pingbacks"
    },
    {
      "type": "integer",
      "name": "PingbackSleep",
      "required": true,
      "default": 30,
      "aliases": [

      ],
      "advanced": true,
      "description": "Time (in seconds) to sleep between pingbacks"
    },
    {
      "type": "string",
      "name": "LURI",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": false,
      "description": "The HTTP Path"
    },
    {
      "type": "address",
      "name": "ReverseListenerBindAddress",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "The specific IP address to bind to on the local system"
    },
    {
      "type": "bool",
      "name": "OverrideRequestHost",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Forces a specific host and port instead of using what the client requests, defaults to LHOST:LPORT"
    },
    {
      "type": "string",
      "name": "OverrideLHOST",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "When OverrideRequestHost is set, use this value as the host name for secondary requests"
    },
    {
      "type": "port",
      "name": "OverrideLPORT",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "When OverrideRequestHost is set, use this value as the port number for secondary requests"
    },
    {
      "type": "string",
      "name": "OverrideScheme",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "When OverrideRequestHost is set, use this value as the scheme for secondary requests, e.g http or https"
    },
    {
      "type": "string",
      "name": "HttpUserAgent",
      "required": false,
      "default": "Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko",
      "aliases": [
        "MeterpreterUserAgent"
      ],
      "advanced": true,
      "description": "The user-agent that the payload should use for communication Max parameter length: 255 characters"
    },
    {
      "type": "string",
      "name": "HttpServerName",
      "required": false,
      "default": "Apache",
      "aliases": [
        "MeterpreterServerName"
      ],
      "advanced": true,
      "description": "The server header that the handler will send in response to requests"
    },
    {
      "type": "string",
      "name": "HttpUnknownRequestResponse",
      "required": false,
      "default": "<html><body><h1>It works!</h1></body></html>",
      "aliases": [

      ],
      "advanced": true,
      "description": "The returned HTML response body when the handler receives a request that is not from a payload"
    },
    {
      "type": "bool",
      "name": "IgnoreUnknownPayloads",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Whether to drop connections from payloads using unknown UUIDs"
    },
    {
      "type": "bool",
      "name": "StagerVerifySSLCert",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Whether to verify the SSL certificate in Meterpreter"
    },
    {
      "type": "string",
      "name": "PayloadUUIDSeed",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A string to use when generating the payload UUID (deterministic)"
    },
    {
      "type": "string",
      "name": "PayloadUUIDRaw",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A hex string representing the raw 8-byte PUID value for the UUID"
    },
    {
      "type": "string",
      "name": "PayloadUUIDName",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "A human-friendly name to reference this unique payload (requires tracking)"
    },
    {
      "type": "bool",
      "name": "PayloadUUIDTracking",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Whether or not to automatically register generated UUIDs"
    },
    {
      "type": "bool",
      "name": "EnableStageEncoding",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Encode the second stage payload"
    },
    {
      "type": "string",
      "name": "StageEncoder",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Encoder to use if EnableStageEncoding is set"
    },
    {
      "type": "string",
      "name": "StageEncoderSaveRegisters",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "Additional registers to preserve in the staged payload if EnableStageEncoding is set"
    },
    {
      "type": "bool",
      "name": "StageEncodingFallback",
      "required": false,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Fallback to no encoding if the selected StageEncoder is not compatible"
    },
    {
      "type": "string",
      "name": "HttpHostHeader",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "An optional value to use for the Host HTTP header"
    },
    {
      "type": "string",
      "name": "HttpCookie",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "An optional value to use for the Cookie HTTP header"
    },
    {
      "type": "string",
      "name": "HttpReferer",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "An optional value to use for the Referer HTTP header"
    },
    {
      "type": "string",
      "name": "HttpProxyHost",
      "required": false,
      "default": null,
      "aliases": [
        "PayloadProxyHost"
      ],
      "advanced": true,
      "description": "An optional proxy server IP address or hostname"
    },
    {
      "type": "port",
      "name": "HttpProxyPort",
      "required": false,
      "default": null,
      "aliases": [
        "PayloadProxyPort"
      ],
      "advanced": true,
      "description": "An optional proxy server port"
    },
    {
      "type": "string",
      "name": "HttpProxyUser",
      "required": false,
      "default": null,
      "aliases": [
        "PayloadProxyUser"
      ],
      "advanced": true,
      "description": "An optional proxy server username Max parameter length: 63 characters"
    },
    {
      "type": "string",
      "name": "HttpProxyPass",
      "required": false,
      "default": null,
      "aliases": [
        "PayloadProxyPass"
      ],
      "advanced": true,
      "description": "An optional proxy server password Max parameter length: 63 characters"
    },
    {
      "type": "enum",
      "name": "HttpProxyType",
      "required": true,
      "default": "HTTP",
      "aliases": [
        "PayloadProxyType"
      ],
      "advanced": true,
      "description": "The type of HTTP proxy (Accepted: HTTP, SOCKS)"
    },
    {
      "type": "bool",
      "name": "AutoLoadStdapi",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Automatically load the Stdapi extension"
    },
    {
      "type": "bool",
      "name": "AutoVerifySession",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Automatically verify and drop invalid sessions"
    },
    {
      "type": "integer",
      "name": "AutoVerifySessionTimeout",
      "required": false,
      "default": 30,
      "aliases": [

      ],
      "advanced": true,
      "description": "Timeout period to wait for session validation to occur, in seconds"
    },
    {
      "type": "string",
      "name": "InitialAutoRunScript",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "An initial script to run on session creation (before AutoRunScript)"
    },
    {
      "type": "string",
      "name": "AutoRunScript",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "A script to run automatically on session creation."
    },
    {
      "type": "bool",
      "name": "AutoSystemInfo",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Automatically capture system information on initialization."
    },
    {
      "type": "bool",
      "name": "EnableUnicodeEncoding",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Automatically encode UTF-8 strings as hexadecimal"
    },
    {
      "type": "integer",
      "name": "SessionRetryTotal",
      "required": false,
      "default": 3600,
      "aliases": [

      ],
      "advanced": true,
      "description": "Number of seconds try reconnecting for on network failure"
    },
    {
      "type": "integer",
      "name": "SessionRetryWait",
      "required": false,
      "default": 10,
      "aliases": [

      ],
      "advanced": true,
      "description": "Number of seconds to wait between reconnect attempts"
    },
    {
      "type": "integer",
      "name": "SessionExpirationTimeout",
      "required": false,
      "default": 604800,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds before this session should be forcibly shut down"
    },
    {
      "type": "integer",
      "name": "SessionCommunicationTimeout",
      "required": false,
      "default": 300,
      "aliases": [

      ],
      "advanced": true,
      "description": "The number of seconds of no activity before this session should be killed"
    },
    {
      "type": "string",
      "name": "PayloadProcessCommandLine",
      "required": false,
      "default": "",
      "aliases": [

      ],
      "advanced": true,
      "description": "The displayed command line that will be used by the payload"
    },
    {
      "type": "bool",
      "name": "AutoUnhookProcess",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Automatically load the unhook extension and unhook the process"
    },
    {
      "type": "bool",
      "name": "MeterpreterTryToFork",
      "required": true,
      "default": true,
      "aliases": [

      ],
      "advanced": true,
      "description": "Fork a new process if the functionality is available"
    },
    {
      "type": "bool",
      "name": "PythonMeterpreterDebug",
      "required": true,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable debugging for the Python meterpreter"
    }
  ]
}