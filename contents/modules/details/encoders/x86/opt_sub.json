{
  "name": "Sub Encoder (optimised)",
  "fullname": "encoder/x86/opt_sub",
  "aliases": [

  ],
  "rank": 0,
  "disclosure_date": null,
  "type": "encoder",
  "author": [
    "OJ Reeves <oj@buffered.io>"
  ],
  "description": "Encodes a payload using a series of SUB instructions and writing the\n        encoded value to ESP. This concept is based on the known SUB encoding\n        approach that is widely used to manually encode payloads with very\n        restricted allowed character sets. It will not reset EAX to zero unless\n        absolutely necessary, which helps reduce the payload by 10 bytes for\n        every 4-byte chunk. ADD support hasn't been included as the SUB\n        instruction is more likely to avoid bad characters anyway.\n\n        The payload requires a base register to work off which gives the start\n        location of the encoder payload in memory. If not specified, it defaults\n        to ESP. If the given register doesn't point exactly to the start of the\n        payload then an offset value is also required.\n\n        Note: Due to the fact that many payloads use the FSTENV approach to\n        get the current location in memory there is an option to protect the\n        start of the payload by setting the 'OverwriteProtect' flag to true.\n        This adds 3-bytes to the start of the payload to bump ESP by 32 bytes\n        so that it's clear of the top of the payload.",
  "references": [

  ],
  "platform": "All",
  "arch": "x86",
  "autofilter_ports": null,
  "autofilter_services": null,
  "targets": null,
  "path": "/modules/encoders/x86/opt_sub.rb",
  "ref_name": "x86/opt_sub",
  "check": false,
  "post_auth": false,
  "default_credential": false,
  "notes": {
  },
  "needs_cleanup": null,
  "options": [
    {
      "type": "string",
      "name": "WORKSPACE",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": true,
      "description": "Specify the workspace for this module"
    },
    {
      "type": "bool",
      "name": "VERBOSE",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": true,
      "description": "Enable detailed status messages"
    },
    {
      "type": "string",
      "name": "ValidCharSet",
      "required": false,
      "default": null,
      "aliases": [

      ],
      "advanced": false,
      "description": "Specify a known set of valid chars (ALPHA, ALPHANUM, FILEPATH)"
    },
    {
      "type": "bool",
      "name": "OverwriteProtect",
      "required": false,
      "default": false,
      "aliases": [

      ],
      "advanced": false,
      "description": "Indicate if the encoded payload requires protection against being overwritten"
    }
  ]
}