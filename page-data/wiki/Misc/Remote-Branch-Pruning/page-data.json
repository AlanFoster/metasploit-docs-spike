{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Misc/Remote-Branch-Pruning","result":{"data":{"markdownRemark":{"id":"9556f13d-88c5-581a-9422-8b3f4ebf25ac","frontmatter":{"title":"Remote Branch Pruning","root":null},"html":"<p>Since we have a lot of people creating and merging branches on the Metasploit GitHub repository, we need to periodically get rid of old and abandoned branches. Here's my technique:</p>\n<h1 id=\"back-up-the-repo\" style=\"position:relative;\"><a href=\"#back-up-the-repo\" aria-label=\"back up the repo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back up the repo</h1>\n<p>Clone a new metasploit-framework.git repository:</p>\n<p><code class=\"language-text\">todb@presto:~/github/todb-r7$ git clone github_r7:rapid7/metasploit-framework.git msf-backup.git</code></p>\n<p>Go there and check out every remote branch we've got. That way, if you screw up and delete something important, you can add it back in later from this backup clone.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">todb@presto:~/github/todb-r7$ cd msf-backup.git\n`todb@presto:~/github/todb-r7/metasploit-framework$ for b in `git branch -r | grep -v &quot;HEAD -&gt; origin&quot; | sed &#39;s/^  origin\\///&#39;`; do git checkout -b $b --track origin/$b; done</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Tarball it out of the way.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">todb@presto:~/github/todb-r7$ cd ..\ntodb@presto:~/github$ tar zxvf msf-backup.git.tar.gz\ntodb@presto:~/github$ rm -rf msf-backup.git</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"make-a-new-clone\" style=\"position:relative;\"><a href=\"#make-a-new-clone\" aria-label=\"make a new clone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Make a new clone</h1>\n<p>Now, clone metasploit again. I do this because I have like 20 remotes to deal with on my \"real\" clone and I don't want to have to grep through all my origin vs non-origin stuff.</p>\n<p><code class=\"language-text\">mazikeen:./rapid7$ git clone github_r7:rapid7/metasploit-framework.git msf-prune</code></p>\n<p>Now start figuring out what branches to delete.</p>\n<p>First, wipe out anything that responds to prune. Usually that's not a lot.</p>\n<p><code class=\"language-text\">mazikeen:./msf-prune$ git prune remote origin</code></p>\n<p>Next, take a look at what's already merged and what's not. We can drop most of the merged stuff right away.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">mazikeen:./msf-prune$ git branch -r --merged \nmazikeen:./msf-prune$ git branch -r --no-merged </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>That gives a pretty good idea of how many branches we're talking about.</p>\n<h1 id=\"start-deleting-old-merged-branches\" style=\"position:relative;\"><a href=\"#start-deleting-old-merged-branches\" aria-label=\"start deleting old merged branches permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Start deleting old, merged branches</h1>\n<p>Here's a one-liner, lightly modified from <a href=\"http://stackoverflow.com/questions/2514172/listing-each-branch-and-its-last-revisions-date-in-git#2514279\">http://stackoverflow.com/questions/2514172/listing-each-branch-and-its-last-revisions-date-in-git#2514279</a> which lists all remote <strong>merged</strong> branches in date order.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">mazikeen:./msf-prune$ for k in `git branch -r --merged |grep -v &quot;HEAD -&gt;&quot; | sed s/^..//`; do echo -e `git log -1 --pretty=format:&quot;%Cgreen%ci %Cblue%cr%Creset&quot; $k --`\\\\t&quot;$k&quot;;done | sort</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Count off how many you want to keep at the end, do the arithmetic, and tack on another couple pipes to catch everything that's more than two weeks old. These are the merged branches that nobody's likely to miss.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">mazikeen:./msf-prune$ for k in `git branch -r --merged |grep -v &quot;HEAD -&gt;&quot; | sed s/^..//`; do echo -e `git log -1 --pretty=format:&quot;%Cgreen%ci %Cblue%cr%Creset&quot; $k --`\\\\t&quot;$k&quot;;done | sort | head -45 | sed &quot;s/^.*origin\\///&quot; &gt; /tmp/merged_to_delete.txt\n````\n\nPull the trigger:\n\n````\nmazikeen:./msf-prune$ for b in `cat /tmp/merged_to_delete.txt`; do echo Deleting $b &amp;&amp; git push origin :$b; done\n````\n\nNote that we still have our tarball, so if we need to reinstate any of these branches, just need to re-push.\n\n# Repeat for the unmerged branches\n\nPretty much the same as above, but use `--no-merged` instead of `--merged` and allow for older unmerged branches (say, 2 months).\n\n# Tell people about it.\n\nSometimes, some people may run into sync problems with these missing branches and need to `git remote prune origin` themselves. Alternatively, they want to look into these branches again -- especially the unmerged ones. So, let people know that you just did this on the metasploit-hackers list and the Freenode IRC channel. If someone wants an old branch back, just go to your backup clone and push it back up as you would any branch: `git checkout branchname &amp;&amp; git push origin branchname`. No problem.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"id":"9556f13d-88c5-581a-9422-8b3f4ebf25ac"}}}