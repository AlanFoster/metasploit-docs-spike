{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Misc/How-to-Use-the-FILEFORMAT-mixin-to-create-a-file-format-exploit","result":{"data":{"markdownRemark":{"id":"c03afdaf-5dff-5ba8-b149-d6c5393c99f3","frontmatter":{"title":"How to Use the FILEFORMAT mixin to create a file format exploit","root":null},"html":"<p><code class=\"language-text\">Msf::Exploit::FILEFORMAT</code> is the mixin to use to create a file format exploit. There actually isn't much in the mixin, but the most important method is this: <code class=\"language-text\">file_create</code>:</p>\n<h3 id=\"usage-for-file_create\" style=\"position:relative;\"><a href=\"#usage-for-file_create\" aria-label=\"usage for file_create permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage for file_create</h3>\n<p>As the name implies, the <code class=\"language-text\">file_create</code> method allows you to create a file. You should be using this method because it does more than just writing data to disk. One of the important things it does is it will report the file creation to the database in the format of <code class=\"language-text\">#{ltype}.localpath</code>, and the file will always be written to Metasploit's local directory defined in <code class=\"language-text\">Msf::Config.local_directory</code> (by default this path is <code class=\"language-text\">~/.msf4/local</code>), which keep files nice and organized.</p>\n<p>To use the mixin, first include <code class=\"language-text\">Msf::Exploit::FILEFORMAT</code> under the scope of your <code class=\"language-text\">Metasploit3</code> class:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token keyword\">include</span> <span class=\"token constant\">Msf</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Exploit</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">FILEFORMAT</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>And here's an example of using <code class=\"language-text\">file_create</code> to build an imaginary exploit:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># This is my imaginary exploit</span>\nbuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nbuf <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span>\nbuf <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x40201f01</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">\"V\"</span><span class=\"token punctuation\">)</span>\nbuf <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token string\">\"\\x90\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\nbuf <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> payload<span class=\"token punctuation\">.</span>encoded\n\nfile_create<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"custom-filename\" style=\"position:relative;\"><a href=\"#custom-filename\" aria-label=\"custom filename permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom filename</h3>\n<p>The <code class=\"language-text\">Msf::Exploit::FILENAME</code> mixin by default has a registered <code class=\"language-text\">FILENAME</code> datastore option, and it is actually optional. If there's no filename provided, the mixin will set the name in this format: <code class=\"language-text\">&quot;exploit.fileformat.#{self.shortname}&quot;</code>, where <code class=\"language-text\">self.shortname</code> means the shorter version of the module name.</p>\n<p>If you wish to set a default one (but still changeable by the user), then you simply register it again in the module, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">register_options<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token constant\">OptString</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FILENAME'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'The malicious file name'</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">'msf.jpg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"fixed-filename\" style=\"position:relative;\"><a href=\"#fixed-filename\" aria-label=\"fixed filename permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixed filename</h3>\n<p>Occasionally, you might not want your user to change the filename at all. A lazy trick to do that is by modifying the <code class=\"language-text\">FILENAME</code> datastore option at runtime, but this is very much not recommended. In fact, if you do this, you will not pass <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Guidelines-for-Accepting-Modules-and-Enhancements#module-additions\">msftidy</a>. Instead, here's how it's done properly:</p>\n<p>1 - Deregister the <code class=\"language-text\">FILENAME</code> option</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">deregister_options<span class=\"token punctuation\">(</span><span class=\"token string\">'FILENAME'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>2 - Next, override the <code class=\"language-text\">file_format_filename</code> method, and make it return the filename you want:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">file_format_filename</span></span>\n  <span class=\"token string\">'something.jpg'</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>3 - Finally, please leave a note about this in the module description.</p>\n<h3 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/exploit/fileformat.rb\">https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/exploit/fileformat.rb</a></p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/windows/local\">https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/windows/local</a></p>"}},"pageContext":{"id":"c03afdaf-5dff-5ba8-b149-d6c5393c99f3"}}}