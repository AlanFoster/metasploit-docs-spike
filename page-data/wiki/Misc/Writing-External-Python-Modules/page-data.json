{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Misc/Writing-External-Python-Modules","result":{"data":{"markdownRemark":{"id":"878d082f-729a-50e2-85a4-82b09f2ecc3d","frontmatter":{"title":"Writing External Python Modules","root":null},"html":"<h1 id=\"writing-python-modules-for-metasploit\" style=\"position:relative;\"><a href=\"#writing-python-modules-for-metasploit\" aria-label=\"writing python modules for metasploit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing Python Modules for Metasploit</h1>\n<p>This is an example of how to write a Python module for Metasploit Framework that uses a Python metasploit library to communicate with framework via JSON-RPC over stdin/stdout.</p>\n<h2 id=\"python-library\" style=\"position:relative;\"><a href=\"#python-library\" aria-label=\"python library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python Library</h2>\n<p>The library currently supports a few function calls that can be used to report information to Metasploit Framework. The <code class=\"language-text\">metasploit</code> library can be loaded into your Python module by including the following line:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> metasploit <span class=\"token keyword\">import</span> module</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>The location of the <a href=\"https://github.com/rapid7/metasploit-framework/tree/master/lib/msf/core/modules/external/python\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">metasploit library</a> is automatically added to the <code class=\"language-text\">PYTHONPATH</code> environment variable before the Python module is executed.</p>\n<h2 id=\"describe-yourself\" style=\"position:relative;\"><a href=\"#describe-yourself\" aria-label=\"describe yourself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Describe Yourself</h2>\n<p>Metasploit modules include information about authors of the modules, references to other sources with information about the vulnerabilities, descriptions of the modules, options, etc.</p>\n<p>Python modules need to include this metadata information as well. The structure of the data is similar to modules written in Ruby. The following is an example template of metadata information:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;name>'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token triple-quoted-string string\">'''\n        &lt;description>\n    '''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'authors'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'&lt;author>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'&lt;author>'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'YYYY-MM-DD'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'license'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;license>'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'references'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;url>'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'YYYY-#'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'edb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'aka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;name>'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;module type>'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'options'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'&lt;name>'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;description>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token boolean\">True</span><span class=\"token operator\">/</span><span class=\"token boolean\">False</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'&lt;name>'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;description>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token boolean\">True</span><span class=\"token operator\">/</span><span class=\"token boolean\">False</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'&lt;name>'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;description>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token boolean\">True</span><span class=\"token operator\">/</span><span class=\"token boolean\">False</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"module-type\" style=\"position:relative;\"><a href=\"#module-type\" aria-label=\"module type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Module Type</h3>\n<p>As shown in the metadata template information, a <code class=\"language-text\">type</code> is also include for the module. The module type is used to select an ERB template, which generates a Ruby document for the module. The ERB templates can be found <a href=\"https://github.com/rapid7/metasploit-framework/tree/master/lib/msf/core/modules/external/templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. The following templates are currently available:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">remote_exploit_cmd_stager\ncapture_server\ndos\nsingle_scanner\nmulti_scanner</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The <code class=\"language-text\">remote_exploit_cmd_stager</code> module type is used when writing an exploit for command execution or code injection vulnerabilities and provides the command to inject into the vulnerable code based on the <a href=\"https://github.com/rapid7/metasploit-framework/wiki/How-to-use-command-stagers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">flavor</a> specified for the command stager.</p>\n<p>The <code class=\"language-text\">capture_server</code> module type is used when a module is designed to simulate a service to capture credentials for connecting clients.</p>\n<p>The <code class=\"language-text\">dos</code> module type is used when the module will send packets to a remote service that will crash the service or put it in an unusable state.</p>\n<p>The <code class=\"language-text\">single_scanner</code> module type is used when creating a module to scan hosts without batching.</p>\n<p>The <code class=\"language-text\">multi_scanner</code> module type is used for modules that are going to scan hosts in batches. The <code class=\"language-text\">batch_size</code> option is registered in the mutli_scanner ERB template with a default of 200.</p>\n<h3 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h3>\n<p>The <code class=\"language-text\">options</code> dictionary in the metadata are the options that will be available in msfconsole when the module is loaded. The options can be required (necessary for the module to run) or not (provide additional functionality).</p>\n<h3 id=\"communication\" style=\"position:relative;\"><a href=\"#communication\" aria-label=\"communication permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Communication</h3>\n<p>To pass the metadata information, as well as the starting function of your Python module, to msfconsole, use the <code class=\"language-text\">module.run()</code> function. The <code class=\"language-text\">module.run()</code> function takes two arguments, the first is the metadata and the second is the callback function to use when executing the module from msfconsole. The code snippet will look like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Your code here</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    module<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">,</span> run<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>When msfconsole sends a <code class=\"language-text\">describe</code> request to the Python module, the metadata information is returned. When msfconsole sends a <code class=\"language-text\">run</code> request to the module, the callback function, <code class=\"language-text\">run</code> in this example, will be called with the arguments provided to msfconsole.</p>\n<p>A <a href=\"https://github.com/rapid7/metasploit-framework/pull/9739\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LogHandler</a> can be setup and used to communicate status information back to framework during execution of the Python module. Here is code snippet that uses the LogHandler:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">from</span> metasploit <span class=\"token keyword\">import</span> module\n\nmodule<span class=\"token punctuation\">.</span>LogHandler<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span>msg_prefix<span class=\"token operator\">=</span><span class=\"token string\">'logging test: '</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">'warning'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The <code class=\"language-text\">module.LogHandler.setup()</code> function is used the create a Handler and Formatter that will call <code class=\"language-text\">module.log()</code> with the appropriate log level.</p>\n<h2 id=\"full-example\" style=\"position:relative;\"><a href=\"#full-example\" aria-label=\"full example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Full Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python3</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token comment\"># standard modules</span>\n<span class=\"token keyword\">import</span> logging\n\n<span class=\"token comment\"># extra modules</span>\ndependencies_missing <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">except</span> ImportError<span class=\"token punctuation\">:</span>\n    dependencies_missing <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token keyword\">from</span> metasploit <span class=\"token keyword\">import</span> module\n\n\nmetadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Python Module Example'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token triple-quoted-string string\">'''\n        Python communication with msfconsole.\n    '''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'authors'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'Jacob Robles'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2018-03-22'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'license'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'MSF_LICENSE'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'references'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://blog.rapid7.com/2017/12/28/regifting-python-in-metasploit/'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'aka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ref'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Coldstone'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'single_scanner'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'options'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'targeturi'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'The base path'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'rhost'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Target address'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'required'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    module<span class=\"token punctuation\">.</span>LogHandler<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span>msg_prefix<span class=\"token operator\">=</span><span class=\"token string\">'{} - '</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">'rhost'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> dependencies_missing<span class=\"token punctuation\">:</span>\n        logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'Module dependency (requests) is missing, cannot continue'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token comment\"># Your code here</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://{}/{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">'rhost'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'targeturi'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> verify<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> requests<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span>RequestException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    logging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'{}...'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    module<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">,</span> run<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The example sends a get request to the given <code class=\"language-text\">rhost</code> and <code class=\"language-text\">targeturi</code>, then calls <code class=\"language-text\">logging.info()</code> on the result to have the output displayed in msfconsole.</p>\n<h2 id=\"coding-with-style\" style=\"position:relative;\"><a href=\"#coding-with-style\" aria-label=\"coding with style permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coding with Style</h2>\n<p>All the Python code in Metasploit aims to be <a href=\"https://www.python.org/dev/peps/pep-0008/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PEP 8</a> compliant. The biggest differences coming from Metasploit's Ruby style:</p>\n<ul>\n<li>Two lines between functions (but not class methods)</li>\n<li>Two lines between different types of code (like imports and the metadata, see above)</li>\n<li>Four spaces for indenting</li>\n</ul>\n<p>Some coding choices to think about when writing your module:</p>\n<ul>\n<li>Prefer <code class=\"language-text\">&quot;foo {}&quot;.format(&#39;bar&#39;)</code> over interpolation with <code class=\"language-text\">%</code></li>\n<li>Keep your callback methods short and readable. If it gets cluttered, break out sub-tasks into well-named functions</li>\n<li>Variable names should be descriptive, readable, and short (<a href=\"http://journal.stuffwithstuff.com/2016/06/16/long-names-are-long\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">a guide</a>)</li>\n<li>If you really need Python3 features in your module, use <code class=\"language-text\">#!/usr/bin/env python3</code> for the shebang</li>\n<li>If you have a lot of legacy code in 2.7 or need a 2.7 library, use <code class=\"language-text\">#!/usr/bin/env python2.7</code> (macOS in particular does not ship with a <code class=\"language-text\">python2</code> executable by default)</li>\n<li>If possible, have your module compatible with both and use <code class=\"language-text\">#!/usr/bin/env python</code></li>\n</ul>\n<h2 id=\"potentially-common-questions\" style=\"position:relative;\"><a href=\"#potentially-common-questions\" aria-label=\"potentially common questions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(Potentially) Common Questions</h2>\n<h3 id=\"why-doesnt-the-module-appear-when-i-search-for-it-in-msfconsole\" style=\"position:relative;\"><a href=\"#why-doesnt-the-module-appear-when-i-search-for-it-in-msfconsole\" aria-label=\"why doesnt the module appear when i search for it in msfconsole permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why doesn't the module appear when I search for it in msfconsole?</h3>\n<p>The module may have errors and fail to load inside of msfconsole. Check the framework log file, <code class=\"language-text\">~/.msf4/logs/framework.log</code>, for error messages. Also, if the module is not marked as executable, then it will not show up when you search for it in msfconsole.</p>\n<h3 id=\"why-is-the-output-from-the-python-module-not-showing-up-in-msfconsole\" style=\"position:relative;\"><a href=\"#why-is-the-output-from-the-python-module-not-showing-up-in-msfconsole\" aria-label=\"why is the output from the python module not showing up in msfconsole permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why is the output from the Python module not showing up in msfconsole?</h3>\n<p>The external modules communicate with framework via JSON-RPC. If your Python module contains <code class=\"language-text\">print</code> statements, framework may not recognize those as JSON-RPC requests. Use the <code class=\"language-text\">LogHandler</code> or <code class=\"language-text\">module.log()</code> to send status information, which will be displayed in msfconsole.</p>\n<h2 id=\"additional-resources\" style=\"position:relative;\"><a href=\"#additional-resources\" aria-label=\"additional resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Additional Resources</h2>\n<p><a href=\"https://blog.rapid7.com/2017/12/28/regifting-python-in-metasploit/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rapid7 Blog: Regifting Python in Metasploit</a></p>\n<p><a href=\"https://blog.rapid7.com/2018/09/05/external-metasploit-modules-the-gift-that-keeps-on-slithering/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rapid7 Blog: External Metasploit Modules: The Gift That Keeps On Slithering</a></p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/modules/external/python/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Metasploit Python library</a></p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/tree/master/lib/msf/core/modules/external/templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ERB Templates</a></p>"}},"pageContext":{"id":"878d082f-729a-50e2-85a4-82b09f2ecc3d"}}}