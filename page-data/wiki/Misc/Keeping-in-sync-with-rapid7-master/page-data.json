{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Misc/Keeping-in-sync-with-rapid7-master","result":{"data":{"markdownRemark":{"id":"1c8944e4-5d9d-55ba-ae2c-877c00288a5f","frontmatter":{"title":"Keeping in sync with rapid7 master","root":null},"html":"<h1 id=\"some-terminology\" style=\"position:relative;\"><a href=\"#some-terminology\" aria-label=\"some terminology permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some Terminology</h1>\n<p>In this quick HOWTO, we'll be referring to the <code class=\"language-text\">rapid7</code> fork of <code class=\"language-text\">metasploit-framework</code> as <code class=\"language-text\">upstream</code>. It's a pretty common local configuration, advocated by the <a href=\"http://r-7.co/MSF-DEV\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">development environment setup</a>. Your fork of <code class=\"language-text\">metasploit-framework</code> will be referred to as <code class=\"language-text\">origin</code>.</p>\n<p>The term 'repo' is short for 'Repository.' Also known as 'fork' (as a noun).</p>\n<h2 id=\"the-easy-way\" style=\"position:relative;\"><a href=\"#the-easy-way\" aria-label=\"the easy way permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Easy Way</h2>\n<p>The easiest way to keep in sync with master is to trash your fork of <code class=\"language-text\">metasploit-framework</code>, and re-fork. This is a surprisingly common practice, since most people in the world don't work with Metasploit every day. If you're the sort to be struck by hackerish inspiration every few months, and couldn't give a whit about preserving branches, history, or pull requests, simply nuke your local fork.</p>\n<p>On your fork, in the GitHub UI, go to <strong>Settings</strong>, scroll down to the <strong>Danger Zone</strong>, and hit <strong>Delete this repository</strong>. Once you've re-authenticated, re-fork the <code class=\"language-text\">metasploit-framework</code> repository by going to the <a href=\"https://github.com/rapid7/metasploit-framework\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rapid7 repo</a> and hit <strong>Fork</strong> as hard as you possibly can.</p>\n<h2 id=\"the-hard-way\" style=\"position:relative;\"><a href=\"#the-hard-way\" aria-label=\"the hard way permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Hard Way</h2>\n<p>If you're contributing to the Metasploit Framework a lot, first off, THANK YOU. Metasploit is more than a framework, it's a collective and a community of people around the world who are driven to make the Internet -- and therefore, human civilization -- a better place.</p>\n<p>Gushing aside, if you want to keep in sync with upstream, the hard way (and therefore, best way), is to have a local clone of <code class=\"language-text\">origin/mestasploit-framework</code> on your local workstation. (Linux is preferred, but there are servicable solutions for OSX and Windows).</p>\n<p>And, with <em>that</em> said, the GitHub documentation is pretty excellent in explaining how to do this -- it's really not all that hard. Take a look at their <a href=\"https://help.github.com/articles/fork-a-repo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fork A Repo</a> docs, and do what it says.</p>\n<p>One thing I like to do is to keep separate branches for <code class=\"language-text\">master</code> (which tracks <code class=\"language-text\">origin/master</code>), and <code class=\"language-text\">upstream-master</code> (which tracks, unsurprisingly, <code class=\"language-text\">upstream/master</code>). If you just want to know how to add an <code class=\"language-text\">upstream</code> remote, <a href=\"https://help.github.com/articles/configuring-a-remote-for-a-fork/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">check it out</a>. Once you've done that, all you need to do is to pull one of these:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">git checkout -b upstream-master --track upstream/master\ngit checkout master\ngit merge --ff-only upstream-master\ngit commit\ngit push origin</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now, this only works well if you <strong>never commit to master</strong>. If you do, you're going to have a bad time, as you'll eventually hit a dreaded <a href=\"https://help.github.com/articles/resolving-merge-conflicts/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">merge conflict</a>.</p>\n<p>Any change you make, be it for local experimentation or public proposal, should be done in a branch <em>from</em> the <code class=\"language-text\">master</code> branch (or, if you're a habitual committer, a branch off the <code class=\"language-text\">upstream-master</code> branch).</p>\n<p>Ignore this advice at your own peril.</p>\n<h2 id=\"the-max-powers-way\" style=\"position:relative;\"><a href=\"#the-max-powers-way\" aria-label=\"the max powers way permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Max Powers Way</h2>\n<p><em>It's like the wrong way, but faster.</em>\n<em>- Max Powers</em></p>\n<p>If you are allergic to the command line, it <em>is possible</em> to sync with upstream/master via the GitHub web UI. This is a little messy, but it's handy if you have small changes that you don't care to sign (by the way, <a href=\"http://mikegerwitz.com/papers/git-horror-story\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">you should sign your commits</a>).</p>\n<p>First, go to the <a href=\"https://github.com/rapid7/metasploit-framework\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rapid7 branch</a>, and click the green, somewhat subtle mini-PR button. Then, click <strong>Compare across forks</strong>, and set <strong>base fork</strong> to your fork, while leaving the head fork pointing to Rapid7's fork. That'll take you to a URL like this: <a href=\"https://github.com/rapid7/metasploit-framework/compare/YOURGITHUBNAME:master...master\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/rapid7/metasploit-framework/compare/YOURGITHUBNAME:master...master</a></p>\n<p>Next, you'll hit the big green <strong>Create a Pull Request</strong> button, which will drop you to a new PR page, against your own fork. Fill it in, then immediately click the <strong>PRs</strong> icon on the left side, find your new PR, and merge it.</p>\n<p>This will keep your GitHub-hosted fork up-to-date, and if you prefer using the GitHub UI over a real development environment, you can jump in and start making changes there.</p>\n<p>This method is especially handy for light changes, like documentation or cosmetic changes to modules. However, using the GitHub UI means that you are necessarily not testing new modules or libraries, and you of course cannot sign your commits, which is <a href=\"http://mikegerwitz.com/papers/git-horror-story\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">horrifying</a>. It's also nice for people very new to GitHub as a collaborative platform.</p>"}},"pageContext":{"id":"1c8944e4-5d9d-55ba-ae2c-877c00288a5f"}}}