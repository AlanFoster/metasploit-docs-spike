{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/wiki/Contributing/Common-Metasploit-Module-Coding-Mistakes","result":{"data":{"markdownRemark":{"id":"546a5c80-0c6a-5e4f-8495-8c725429edf2","frontmatter":{"title":"Common Metasploit Module Coding Mistakes","root":null},"html":"<h1 id=\"deprecation-notice\" style=\"position:relative;\"><a href=\"#deprecation-notice\" aria-label=\"deprecation notice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deprecation notice!</h1>\n<p>Please see <a href=\"https://github.com/rapid7/metasploit-framework/blob/master/CONTRIBUTING.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CONTRIBUTING.md</a> for an authoritative coding guide. This document has fallen out of date. We don't write bad code any more! Hooray!</p>\n<p>This is a collection of all the bad code we often see in Metasploit modules.  You should avoid them, too.</p>\n<p>Note: Some of these examples use puts() for demo purposes, but you should always use print<em>status / print</em>error when writing a module.</p>\n<h3 id=\"bad-examples-you-should-not-follow\" style=\"position:relative;\"><a href=\"#bad-examples-you-should-not-follow\" aria-label=\"bad examples you should not follow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bad Examples You Should NOT Follow:</h3>\n<ol>\n<li>Not checking the return value of a Metasploit API</li>\n<li>Ruby 1.9.3 vs 1.8.7... gotcha!</li>\n<li>Not checking the return value when using match()</li>\n<li>Not checking nil before accessing a method</li>\n<li>Using exception handling to shut an error up</li>\n<li>Not taking advantage of the 'ensure' block</li>\n<li>Adding the 'VERBOSE' option</li>\n<li>Neglecting to use 'vars<em>post' for send</em>request_cgi() when crafting a POST request</li>\n<li>Bad variable naming style</li>\n<li>Using global variables</li>\n<li>Modifying the datastore during execution</li>\n</ol>\n<p><strong>1. Not checking the return value of a Metasploit API</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">res <span class=\"token operator\">=</span> send_request_cgi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'method'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'uri'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'/app/index.php'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># There's a bug here, because res can return nil (due to a timeout or other reasons)</span>\n<span class=\"token comment\"># If that happens, you will hit a \"undefined method `code' for nil:NilClass\" error.</span>\n<span class=\"token comment\"># The correct way should be: if res &amp;&amp; res.code == 200</span>\n<span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>code <span class=\"token operator\">==</span> <span class=\"token number\">200</span>\n  print_status<span class=\"token punctuation\">(</span><span class=\"token string\">\"Response looks good\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n  print_error<span class=\"token punctuation\">(</span><span class=\"token string\">\"Unexpected response\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>2. Ruby 1.9.3 vs 1.8.7... gotcha!</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">some_string <span class=\"token operator\">=</span> <span class=\"token string\">\"ABC\"</span>\n\n<span class=\"token comment\"># This can cause unexpected results to your module.</span>\n<span class=\"token comment\"># Better to always do: char = some_string[1, 1]</span>\nchar <span class=\"token operator\">=</span> some_string<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> char <span class=\"token operator\">==</span> <span class=\"token string\">'B'</span>\n  puts <span class=\"token string\">\"You will see this message in Ruby 1.9.3\"</span>\n<span class=\"token keyword\">elsif</span> char <span class=\"token operator\">==</span> <span class=\"token number\">66</span>\n  puts <span class=\"token string\">\"You will see this message in Ruby 1.8.7\"</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># 1.9 allows a comma after the last argument when calling</span>\n<span class=\"token comment\"># a method while 1.8 does not.  The most common place to</span>\n<span class=\"token comment\"># see this error is in the update_info() section in a</span>\n<span class=\"token comment\"># module's constructor.</span>\nsome_method<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"arg1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"arg2\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># &lt;-- This comma is a syntax error on 1.8.x</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>3. Not checking the return value when using match()</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">str <span class=\"token operator\">=</span> <span class=\"token string\">\"dragon! drag on! Not lizard, I don't do that tongue thing\"</span>\n\n<span class=\"token comment\"># This tries to print \"Not snake\", but it's not in the string,</span>\n<span class=\"token comment\"># so you'll get this error: \"undefined method `[]' for nil:NilClass\"</span>\nputs str<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token regex\">/(Not snake)/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># The above is better written as:</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str <span class=\"token operator\">=</span><span class=\"token operator\">~</span> <span class=\"token regex\">/(Not snake)/</span><span class=\"token punctuation\">)</span>\n  puts $<span class=\"token number\">1</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>4. Not checking nil first before accessing a method</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">str <span class=\"token operator\">=</span> <span class=\"token string\">\"These things are round and tasty, let's call them... tastycles!\"</span>\n\nfood <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">(</span><span class=\"token regex\">/donut holes/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># food is nil, and nil has no method called \"empty\".</span>\n<span class=\"token comment\"># This will throw an error: \"undefined method `empty?' for nil:NilClass\"</span>\n<span class=\"token keyword\">if</span> food<span class=\"token punctuation\">.</span>empty<span class=\"token operator\">?</span> <span class=\"token keyword\">or</span> food<span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span>\n  puts <span class=\"token string\">\"I don't know what it's called\"</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>5. Using exception handling to shut an error up</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token keyword\">begin</span>\n  <span class=\"token comment\"># This block has 2 issues:</span>\n  <span class=\"token comment\"># Issue #1: sample() is not a method in 1.8.7</span>\n  <span class=\"token comment\"># Issue #2: Divided by 0 (race condition)</span>\n  n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sample\n  <span class=\"token number\">1</span><span class=\"token operator\">/</span>n\n<span class=\"token keyword\">rescue</span>\n  <span class=\"token comment\"># If the user reports a bug saying this code isn't</span>\n  <span class=\"token comment\"># working, it can be hard to debug exactly what went</span>\n  <span class=\"token comment\"># wrong for the user without a backtrace.</span>\n  <span class=\"token comment\"># When you do this, the error also won't be logged in</span>\n  <span class=\"token comment\"># framework.log, either.</span>\n  <span class=\"token comment\"># Note that rescuing ::Exception is especially harmful</span>\n  <span class=\"token comment\"># because it can even hide syntax errors.</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>6. Not taking advantage of the 'ensure' block</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># You should use the ensure block to make sure x always has a value,</span>\n<span class=\"token comment\"># which also avoids repeating code</span>\n<span class=\"token keyword\">begin</span>\n  n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sample\n  x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>n\n<span class=\"token keyword\">rescue</span> <span class=\"token constant\">ZeroDivisionError</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> e\n  puts <span class=\"token string\">\"Are you smarter than a 5th grader? <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>e<span class=\"token punctuation\">.</span>message<span class=\"token delimiter tag\">}</span></span>\"</span>\n  x <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># Can put this in the ensure block</span>\n<span class=\"token keyword\">rescue</span> <span class=\"token constant\">NoMethodError</span>\n  puts <span class=\"token string\">\"You must be using an older Ruby\"</span>\n  x <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># Can put this in the ensure block</span>\n<span class=\"token keyword\">end</span>\n\nputs <span class=\"token string\">\"Value is <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>x<span class=\"token punctuation\">.</span>to_s<span class=\"token delimiter tag\">}</span></span>\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>7. Adding the 'VERBOSE' option</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">register_options<span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># You already have this. Just type 'show advanced' and you'll see it.</span>\n    <span class=\"token comment\"># So no need to register again</span>\n    <span class=\"token constant\">OptBool</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VERBOSE\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Enable detailed status messages'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>8. Neglecting to use send<em>request</em>cgi()'s vars<em>get or vars</em>get when crafting a POST/GET request</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\">data_post <span class=\"token operator\">=</span> <span class=\"token string\">'user=jsmith&amp;pass=hello123'</span>\n\n<span class=\"token comment\"># You should use the 'vars_post' key instead of 'data',</span>\n<span class=\"token comment\"># unless you're trying to avoid the API escaping your</span>\n<span class=\"token comment\"># parameter names</span>\nsend_request_cgi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'method'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'uri'</span>    <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'data'</span>   <span class=\"token operator\">=</span><span class=\"token operator\">></span> data_post\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>9. Bad variable naming style</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># What's this, Java?</span>\n<span class=\"token comment\"># The proper naming style in this case should be: my_string</span>\nmyString <span class=\"token operator\">=</span> <span class=\"token string\">\"hello, world\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><strong>10. Using global variables</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># $msg is a global variable that can be accessed anywhere within the program.</span>\n<span class=\"token comment\"># This can induce bugs to other modules or mixins that are hard to debug.</span>\n<span class=\"token comment\"># Use @instance variables instead.</span>\n<span class=\"token comment\"># This is also mentioned in your HACKING file :-)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Opinion</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span>\n    <span class=\"token comment\"># This variable shouldn't be shared with other classes</span>\n    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"It's called the Freedom of Information Act. The Hippies finally got something right.\"</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Metasploit3</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span>\n    puts <span class=\"token variable\">$msg</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token constant\">Opinion</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n<span class=\"token constant\">Metasploit3</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>11. Modifying the datastore during execution</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token comment\"># https://github.com/rapid7/metasploit-framework/issues/3853</span>\ndatastore<span class=\"token punctuation\">[</span><span class=\"token string\">'BAD'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'This is bad.'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>"}},"pageContext":{"id":"546a5c80-0c6a-5e4f-8495-8c725429edf2"}}}