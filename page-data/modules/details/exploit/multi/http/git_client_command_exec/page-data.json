{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/multi/http/git_client_command_exec","result":{"data":{"moduleMetadataJson":{"id":"56693331-a137-5e67-a77c-798abd01fca4","name":"Malicious Git and Mercurial HTTP Server For CVE-2014-9390","fullname":"exploit/multi/http/git_client_command_exec","description":"This module exploits CVE-2014-9390, which affects Git (versions less\n        than 1.8.5.6, 1.9.5, 2.0.5, 2.1.4 and 2.2.1) and Mercurial (versions\n        less than 3.2.3) and describes three vulnerabilities.\n\n        On operating systems which have case-insensitive file systems, like\n        Windows and OS X, Git clients can be convinced to retrieve and\n        overwrite sensitive configuration files in the .git\n        directory which can allow arbitrary code execution if a vulnerable\n        client can be convinced to perform certain actions (for example,\n        a checkout) against a malicious Git repository.\n\n        A second vulnerability with similar characteristics also exists in both\n        Git and Mercurial clients, on HFS+ file systems (Mac OS X) only, where\n        certain Unicode codepoints are ignorable.\n\n        The third vulnerability with similar characteristics only affects\n        Mercurial clients on Windows, where Windows \"short names\"\n        (MS-DOS-compatible 8.3 format) are supported.\n\n        Today this module only truly supports the first vulnerability (Git\n        clients on case-insensitive file systems) but has the functionality to\n        support the remaining two with a little work.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/git_client_command_exec","documentationSlug":"/modules/documentation/exploit/multi/http/git_client_command_exec","referencesSlug":"/modules/references/exploit/multi/http/git_client_command_exec"},"author":["Jon Hart <jon_hart@rapid7.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":true,"evasion":false,"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"advanced":true,"evasion":false,"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"advanced":true,"evasion":false,"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"advanced":false,"evasion":false,"name":"SRVHOST","required":true,"default":"0.0.0.0","description":"The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."},{"advanced":false,"evasion":false,"name":"SRVPORT","required":true,"default":"8080","description":"The local port to listen on."},{"advanced":true,"evasion":false,"name":"ListenerComm","required":false,"default":"","description":"The specific communication channel to use for this service"},{"advanced":false,"evasion":false,"name":"SSL","required":false,"default":"false","description":"Negotiate SSL for incoming connections"},{"advanced":false,"evasion":false,"name":"SSLCert","required":false,"default":"","description":"Path to a custom SSL certificate (default is randomly generated)"},{"advanced":true,"evasion":false,"name":"SSLCompression","required":false,"default":"false","description":"Enable SSL/TLS-level compression"},{"advanced":true,"evasion":false,"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"advanced":false,"evasion":true,"name":"TCP::max_send_size","required":false,"default":"0","description":"Maximum tcp segment size.  (0 = disable)"},{"advanced":false,"evasion":true,"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"},{"advanced":false,"evasion":false,"name":"URIPATH","required":false,"default":"","description":"The URI to use for this exploit (default is random)"},{"advanced":false,"evasion":true,"name":"HTTP::no_cache","required":false,"default":"false","description":"Disallow the browser to cache HTTP content"},{"advanced":false,"evasion":true,"name":"HTTP::chunked","required":false,"default":"false","description":"Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""},{"advanced":false,"evasion":true,"name":"HTTP::header_folding","required":false,"default":"false","description":"Enable folding of HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::junk_headers","required":false,"default":"false","description":"Enable insertion of random junk HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::compression","required":false,"default":"none","description":"Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"},{"advanced":false,"evasion":true,"name":"HTTP::server_name","required":true,"default":"Apache","description":"Configures the Server header of all outgoing replies"},{"advanced":true,"evasion":false,"name":"URIHOST","required":false,"default":"","description":"Host to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"URIPORT","required":false,"default":"","description":"Port to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"SendRobots","required":false,"default":"false","description":"Return a robots.txt file if asked for one"},{"advanced":true,"evasion":false,"name":"Powershell::persist","required":true,"default":"false","description":"Run the payload in a loop"},{"advanced":true,"evasion":false,"name":"Powershell::prepend_sleep","required":false,"default":"","description":"Prepend seconds of sleep"},{"advanced":true,"evasion":false,"name":"Powershell::prepend_protections_bypass","required":true,"default":"false","description":"Prepend AMSI/SBL bypass"},{"advanced":true,"evasion":false,"name":"Powershell::strip_comments","required":true,"default":"true","description":"Strip comments"},{"advanced":true,"evasion":false,"name":"Powershell::strip_whitespace","required":true,"default":"false","description":"Strip whitespace"},{"advanced":true,"evasion":false,"name":"Powershell::sub_vars","required":true,"default":"false","description":"Substitute variable names"},{"advanced":true,"evasion":false,"name":"Powershell::sub_funcs","required":true,"default":"false","description":"Substitute function names"},{"advanced":true,"evasion":false,"name":"Powershell::exec_in_place","required":true,"default":"false","description":"Produce PSH without executable wrapper"},{"advanced":true,"evasion":false,"name":"Powershell::exec_rc4","required":true,"default":"false","description":"Encrypt PSH with RC4"},{"advanced":true,"evasion":false,"name":"Powershell::remove_comspec","required":true,"default":"false","description":"Produce script calling powershell directly"},{"advanced":true,"evasion":false,"name":"Powershell::noninteractive","required":true,"default":"true","description":"Execute powershell without interaction"},{"advanced":true,"evasion":false,"name":"Powershell::encode_final_payload","required":true,"default":"false","description":"Encode final payload for -EncodedCommand"},{"advanced":true,"evasion":false,"name":"Powershell::encode_inner_payload","required":true,"default":"false","description":"Encode inner payload for -EncodedCommand"},{"advanced":true,"evasion":false,"name":"Powershell::wrap_double_quotes","required":true,"default":"true","description":"Wraps the -Command argument in single quotes"},{"advanced":true,"evasion":false,"name":"Powershell::no_equals","required":true,"default":"false","description":"Pad base64 until no \"=\" remains"},{"advanced":true,"evasion":false,"name":"Powershell::method","required":true,"default":"reflection","description":"Payload delivery method (Accepted: net, reflection, old, msil)"},{"advanced":false,"evasion":false,"name":"GIT","required":true,"default":"true","description":"Exploit Git clients"},{"advanced":true,"evasion":false,"name":"GIT_URI","required":false,"default":"","description":"The URI to use as the malicious Git instance (empty for random)"},{"advanced":true,"evasion":false,"name":"MERCURIAL_URI","required":false,"default":"","description":"The URI to use as the malicious Mercurial instance (empty for random)"},{"advanced":true,"evasion":false,"name":"GIT_HOOK","required":false,"default":"post-checkout","description":"The Git hook to use for exploitation"},{"advanced":true,"evasion":false,"name":"MERCURIAL_HOOK","required":false,"default":"update","description":"The Mercurial hook to use for exploitation"},{"advanced":true,"evasion":false,"name":"MERCURIAL","required":false,"default":"false","description":"Enable experimental Mercurial support"}]}},"pageContext":{"id":"56693331-a137-5e67-a77c-798abd01fca4"}}}