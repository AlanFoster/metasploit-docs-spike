{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/osx/local/libxpc_mitm_ssudo","result":{"data":{"moduleMetadataJson":{"id":"80cbb427-be74-5c23-8acf-737b03a06d3d","name":"Mac OS X libxpc MITM Privilege Escalation","fullname":"exploit/osx/local/libxpc_mitm_ssudo","description":"This module exploits a vulnerablity in libxpc on macOS <= 10.13.3\n        The task_set_special_port API allows callers to overwrite their bootstrap port,\n        which is used to communicate with launchd. This port is inherited across forks:\n        child processes will use the same bootstrap port as the parent.\n        By overwriting the bootstrap port and forking a child processes, we can now gain\n        a MitM position between our child and launchd.\n\n        To gain root we target the sudo binary and intercept its communication with\n        opendirectoryd, which is used by sudo to verify credentials. We modify the\n        replies from opendirectoryd to make it look like our password was valid.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/osx/local/libxpc_mitm_ssudo","documentationSlug":"/modules/documentation/exploit/osx/local/libxpc_mitm_ssudo"},"author":["saelo"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"name":"WfsDelay","required":false,"default":"0","description":"Additional delay when waiting for a session"},{"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"name":"SESSION","required":true,"default":"","description":"The session to run this module on."},{"name":"EXE::EICAR","required":false,"default":"false","description":"Generate an EICAR file instead of regular payload exe"},{"name":"EXE::Custom","required":false,"default":"","description":"Use custom exe instead of automatically generating a payload exe"},{"name":"EXE::Path","required":false,"default":"","description":"The directory in which to look for the executable template"},{"name":"EXE::Template","required":false,"default":"","description":"The executable template file name."},{"name":"EXE::Inject","required":false,"default":"false","description":"Set to preserve the original EXE function"},{"name":"EXE::OldMethod","required":false,"default":"false","description":"Set to use the substitution EXE generation method."},{"name":"EXE::FallBack","required":false,"default":"false","description":"Use the default template in case the specified one is missing"},{"name":"MSI::EICAR","required":false,"default":"false","description":"Generate an EICAR file instead of regular payload msi"},{"name":"MSI::Custom","required":false,"default":"","description":"Use custom msi instead of automatically generating a payload msi"},{"name":"MSI::Path","required":false,"default":"","description":"The directory in which to look for the msi template"},{"name":"MSI::Template","required":false,"default":"","description":"The msi template file name"},{"name":"MSI::UAC","required":false,"default":"false","description":"Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"},{"name":"FileDropperDelay","required":false,"default":"","description":"Delay in seconds before attempting cleanup"},{"name":"WritableDir","required":true,"default":"/tmp","description":"A directory where we can write files"}]}},"pageContext":{"id":"80cbb427-be74-5c23-8acf-737b03a06d3d"}}}