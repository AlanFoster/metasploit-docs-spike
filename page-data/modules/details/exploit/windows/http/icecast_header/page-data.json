{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/windows/http/icecast_header","result":{"data":{"moduleMetadataJson":{"id":"a7b10cf5-aaa5-5cd1-b21e-3bb7873d81ac","name":"Icecast Header Overwrite","fullname":"exploit/windows/http/icecast_header","description":"This module exploits a buffer overflow in the header parsing of icecast\n        versions 2.0.1 and earlier, discovered by Luigi Auriemma. Sending 32\n        HTTP headers will cause a write one past the end of a pointer array. On\n        win32 this happens to overwrite the saved instruction pointer, and on\n        linux (depending on compiler, etc) this seems to generally overwrite\n        nothing crucial (read not exploitable).\n\n        This exploit uses ExitThread(), this will leave icecast thinking the\n        thread is still in use, and the thread counter won't be decremented.\n        This means for each time your payload exits, the counter will be left\n        incremented, and eventually the threadpool limit will be maxed. So you\n        can multihit, but only till you fill the threadpool.","rank":500,"fields":{"detailsSlug":"/modules/details/exploit/windows/http/icecast_header","documentationSlug":"/modules/documentation/exploit/windows/http/icecast_header"},"author":["spoonm <spoonm@no$email.com>","Luigi Auriemma <aluigi@autistici.org>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"name":"WfsDelay","required":false,"default":"0","description":"Additional delay when waiting for a session"},{"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"name":"RHOSTS","required":true,"default":"","description":"The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"},{"name":"RPORT","required":true,"default":"8000","description":"The target port"},{"name":"SSL","required":false,"default":"false","description":"Negotiate SSL/TLS for outgoing connections"},{"name":"SSLVersion","required":true,"default":"Auto","description":"Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"},{"name":"SSLVerifyMode","required":false,"default":"PEER","description":"SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"},{"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"name":"Proxies","required":false,"default":"","description":"A proxy chain of format type:host:port[,type:host:port][...]"},{"name":"CPORT","required":false,"default":"","description":"The local client port"},{"name":"CHOST","required":false,"default":"","description":"The local client address"},{"name":"ConnectTimeout","required":true,"default":"10","description":"Maximum number of seconds to establish a TCP connection"},{"name":"TCP::max_send_size","required":false,"default":"0","description":"Maxiumum tcp segment size.  (0 = disable)"},{"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"}]}},"pageContext":{"id":"a7b10cf5-aaa5-5cd1-b21e-3bb7873d81ac"}}}