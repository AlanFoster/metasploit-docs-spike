{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/windows/browser/ms13_080_cdisplaypointer","result":{"data":{"moduleMetadataJson":{"id":"ca79719f-bf74-5942-a5a5-f68e2b38df99","name":"MS13-080 Microsoft Internet Explorer CDisplayPointer Use-After-Free","fullname":"exploit/windows/browser/ms13_080_cdisplaypointer","description":"This module exploits a vulnerability found in Microsoft Internet Explorer. It was originally\n        found being exploited in the wild targeting Japanese and Korean IE8 users on Windows XP,\n        around the same time frame as CVE-2013-3893, except this was kept out of the public eye by\n        multiple research companies and the vendor until the October patch release.\n\n        This issue is a use-after-free vulnerability in CDisplayPointer via the use of a\n        \"onpropertychange\" event handler. To set up the appropriate buggy conditions, we first craft\n        the DOM tree in a specific order, where a CBlockElement comes after the CTextArea element.\n        If we use a select() function for the CTextArea element, two important things will happen:\n        a CDisplayPointer object will be created for CTextArea, and it will also trigger another\n        event called \"onselect\". The \"onselect\" event will allow us to set up for the actual event\n        handler we want to abuse - the \"onpropertychange\" event. Since the CBlockElement is a child\n        of CTextArea, if we do a node swap of CBlockElement in \"onselect\", this will trigger\n        \"onpropertychange\".  During \"onpropertychange\" event handling, a free of the CDisplayPointer\n        object can be forced by using an \"Unselect\" (other approaches also apply), but a reference\n        of this freed memory will still be kept by CDoc::ScrollPointerIntoView, specifically after\n        the CDoc::GetLineInfo call, because it is still trying to use that to update\n        CDisplayPointer's position. When this invalid reference arrives in QIClassID, a crash\n        finally occurs due to accessing the freed memory. By controlling this freed memory, it is\n        possible to achieve arbitrary code execution under the context of the user.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/windows/browser/ms13_080_cdisplaypointer","documentationSlug":"/modules/documentation/exploit/windows/browser/ms13_080_cdisplaypointer","referencesSlug":"/modules/references/exploit/windows/browser/ms13_080_cdisplaypointer"},"author":["Unknown","sinn3r <sinn3r@metasploit.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":true,"evasion":false,"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"advanced":true,"evasion":false,"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"advanced":true,"evasion":false,"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"advanced":false,"evasion":false,"name":"SRVHOST","required":true,"default":"0.0.0.0","description":"The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."},{"advanced":false,"evasion":false,"name":"SRVPORT","required":true,"default":"8080","description":"The local port to listen on."},{"advanced":true,"evasion":false,"name":"ListenerComm","required":false,"default":"","description":"The specific communication channel to use for this service"},{"advanced":false,"evasion":false,"name":"SSL","required":false,"default":"false","description":"Negotiate SSL for incoming connections"},{"advanced":false,"evasion":false,"name":"SSLCert","required":false,"default":"","description":"Path to a custom SSL certificate (default is randomly generated)"},{"advanced":true,"evasion":false,"name":"SSLCompression","required":false,"default":"false","description":"Enable SSL/TLS-level compression"},{"advanced":true,"evasion":false,"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"advanced":false,"evasion":true,"name":"TCP::max_send_size","required":false,"default":"0","description":"Maximum tcp segment size.  (0 = disable)"},{"advanced":false,"evasion":true,"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"},{"advanced":false,"evasion":false,"name":"URIPATH","required":false,"default":"","description":"The URI to use for this exploit (default is random)"},{"advanced":false,"evasion":true,"name":"HTTP::no_cache","required":false,"default":"false","description":"Disallow the browser to cache HTTP content"},{"advanced":false,"evasion":true,"name":"HTTP::chunked","required":false,"default":"false","description":"Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""},{"advanced":false,"evasion":true,"name":"HTTP::header_folding","required":false,"default":"false","description":"Enable folding of HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::junk_headers","required":false,"default":"false","description":"Enable insertion of random junk HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::compression","required":false,"default":"none","description":"Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"},{"advanced":false,"evasion":true,"name":"HTTP::server_name","required":true,"default":"Apache","description":"Configures the Server header of all outgoing replies"},{"advanced":true,"evasion":false,"name":"URIHOST","required":false,"default":"","description":"Host to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"URIPORT","required":false,"default":"","description":"Port to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"SendRobots","required":false,"default":"false","description":"Return a robots.txt file if asked for one"},{"advanced":false,"evasion":true,"name":"HTML::unicode","required":false,"default":"none","description":"Enable HTTP obfuscation via unicode (Accepted: none, utf-16le, utf-16be, utf-16be-marker, utf-32le, utf-32be)"},{"advanced":false,"evasion":true,"name":"HTML::base64","required":false,"default":"none","description":"Enable HTML obfuscation via an embeded base64 html object (IE not supported) (Accepted: none, plain, single_pad, double_pad, random_space_injection)"},{"advanced":false,"evasion":true,"name":"HTML::javascript::escape","required":false,"default":"0","description":"Enable HTML obfuscation via HTML escaping (number of iterations)"}]}},"pageContext":{"id":"ca79719f-bf74-5942-a5a5-f68e2b38df99"}}}