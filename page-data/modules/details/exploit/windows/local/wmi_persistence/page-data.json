{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/windows/local/wmi_persistence","result":{"data":{"moduleMetadataJson":{"id":"848844c0-0e81-5cc0-b4e6-1ebb6efa5f85","name":"WMI Event Subscription Persistence","fullname":"exploit/windows/local/wmi_persistence","description":"This module will create a permanent WMI event subscription to achieve file-less persistence using one\n          of five methods. The EVENT method will create an event filter that will query the event log for an EVENT_ID_TRIGGER\n          (default: failed logon request id 4625) that also contains a specified USERNAME_TRIGGER (note: failed logon auditing\n          must be enabled on the target for this method to work, this can be enabled using \"auditpol.exe /set /subcategory:Logon\n          /failure:Enable\"). When these criteria are met a command line event consumer will trigger an encoded powershell payload.\n          The INTERVAL method will create an event filter that triggers the payload after the specified CALLBACK_INTERVAL. The LOGON\n          method will create an event filter that will trigger the payload after the system has an uptime of 4 minutes. The PROCESS\n          method will create an event filter that triggers the payload when the specified process is started. The WAITFOR method\n          creates an event filter that utilizes the Microsoft binary waitfor.exe to wait for a signal specified by WAITFOR_TRIGGER\n          before executing the payload. The signal can be sent from a windows host on a LAN utilizing the waitfor.exe command\n          (note: requires target to have port 445 open). Additionally a custom command can be specified to run once the trigger is\n          activated using the advanced option CUSTOM_PS_COMMAND. This module requires administrator level privileges as well as a\n          high integrity process. It is also recommended not to use stageless payloads due to powershell script length limitations.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/wmi_persistence","documentationSlug":"/modules/documentation/exploit/windows/local/wmi_persistence","referencesSlug":"/modules/references/exploit/windows/local/wmi_persistence"},"author":["Nick Tyrer <@NickTyrer>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":true,"evasion":false,"name":"WfsDelay","required":false,"default":"0","description":"Additional delay when waiting for a session"},{"advanced":true,"evasion":false,"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"advanced":true,"evasion":false,"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"advanced":true,"evasion":false,"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"advanced":false,"evasion":false,"name":"SESSION","required":true,"default":"","description":"The session to run this module on."},{"advanced":true,"evasion":false,"name":"Powershell::persist","required":true,"default":"false","description":"Run the payload in a loop"},{"advanced":true,"evasion":false,"name":"Powershell::prepend_sleep","required":false,"default":"","description":"Prepend seconds of sleep"},{"advanced":true,"evasion":false,"name":"Powershell::prepend_protections_bypass","required":true,"default":"false","description":"Prepend AMSI/SBL bypass"},{"advanced":true,"evasion":false,"name":"Powershell::strip_comments","required":true,"default":"true","description":"Strip comments"},{"advanced":true,"evasion":false,"name":"Powershell::strip_whitespace","required":true,"default":"false","description":"Strip whitespace"},{"advanced":true,"evasion":false,"name":"Powershell::sub_vars","required":true,"default":"false","description":"Substitute variable names"},{"advanced":true,"evasion":false,"name":"Powershell::sub_funcs","required":true,"default":"false","description":"Substitute function names"},{"advanced":true,"evasion":false,"name":"Powershell::exec_in_place","required":true,"default":"false","description":"Produce PSH without executable wrapper"},{"advanced":true,"evasion":false,"name":"Powershell::exec_rc4","required":true,"default":"false","description":"Encrypt PSH with RC4"},{"advanced":true,"evasion":false,"name":"Powershell::remove_comspec","required":true,"default":"false","description":"Produce script calling powershell directly"},{"advanced":true,"evasion":false,"name":"Powershell::noninteractive","required":true,"default":"true","description":"Execute powershell without interaction"},{"advanced":true,"evasion":false,"name":"Powershell::encode_final_payload","required":true,"default":"false","description":"Encode final payload for -EncodedCommand"},{"advanced":true,"evasion":false,"name":"Powershell::encode_inner_payload","required":true,"default":"false","description":"Encode inner payload for -EncodedCommand"},{"advanced":true,"evasion":false,"name":"Powershell::wrap_double_quotes","required":true,"default":"true","description":"Wraps the -Command argument in single quotes"},{"advanced":true,"evasion":false,"name":"Powershell::no_equals","required":true,"default":"false","description":"Pad base64 until no \"=\" remains"},{"advanced":true,"evasion":false,"name":"Powershell::method","required":true,"default":"reflection","description":"Payload delivery method (Accepted: net, reflection, old, msil)"},{"advanced":true,"evasion":false,"name":"Powershell::Post::timeout","required":true,"default":"15","description":"Powershell execution timeout, set < 0 to run async without termination"},{"advanced":true,"evasion":false,"name":"Powershell::Post::log_output","required":true,"default":"false","description":"Write output to log file"},{"advanced":true,"evasion":false,"name":"Powershell::Post::dry_run","required":true,"default":"false","description":"Return encoded output to caller"},{"advanced":true,"evasion":false,"name":"Powershell::Post::force_wow64","required":true,"default":"false","description":"Force WOW64 execution"},{"advanced":false,"evasion":false,"name":"PERSISTENCE_METHOD","required":true,"default":"EVENT","description":"Method to trigger the payload. (Accepted: EVENT, INTERVAL, LOGON, PROCESS, WAITFOR)"},{"advanced":false,"evasion":false,"name":"EVENT_ID_TRIGGER","required":true,"default":"4625","description":"Event ID to trigger the payload. (Default: 4625)"},{"advanced":false,"evasion":false,"name":"USERNAME_TRIGGER","required":true,"default":"BOB","description":"The username to trigger the payload. (Default: BOB)"},{"advanced":false,"evasion":false,"name":"PROCESS_TRIGGER","required":true,"default":"CALC.EXE","description":"The process name to trigger the payload. (Default: CALC.EXE)"},{"advanced":false,"evasion":false,"name":"WAITFOR_TRIGGER","required":true,"default":"CALL","description":"The word to trigger the payload. (Default: CALL)"},{"advanced":false,"evasion":false,"name":"CALLBACK_INTERVAL","required":true,"default":"1800000","description":"Time between callbacks (In milliseconds). (Default: 1800000)."},{"advanced":false,"evasion":false,"name":"CLASSNAME","required":true,"default":"UPDATER","description":"WMI event class name. (Default: UPDATER)"},{"advanced":true,"evasion":false,"name":"CUSTOM_PS_COMMAND","required":false,"default":"","description":"Custom powershell command to run once the trigger is activated. (Note: some commands will need to be encolsed in quotes)"}]}},"pageContext":{"id":"848844c0-0e81-5cc0-b4e6-1ebb6efa5f85"}}}