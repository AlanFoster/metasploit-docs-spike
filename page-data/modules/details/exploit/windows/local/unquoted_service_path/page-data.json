{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/exploit/windows/local/unquoted_service_path","result":{"data":{"moduleMetadataJson":{"id":"5be6a9d1-4452-5b07-9ec9-3878201c2b88","name":"Windows Unquoted Service Path Privilege Escalation","fullname":"exploit/windows/local/unquoted_service_path","description":"This module exploits a logic flaw due to how the lpApplicationName parameter\n        is handled.  When the lpApplicationName contains a space, the file name is\n        ambiguous.  Take this file path as example: C:\\program files\\hello.exe;\n        The Windows API will try to interpret this as two possible paths:\n        C:\\program.exe, and C:\\program files\\hello.exe, and then execute all of them.\n        To some software developers, this is an unexpected behavior, which becomes a\n        security problem if an attacker is able to place a malicious executable in one\n        of these unexpected paths, sometimes escalate privileges if run as SYSTEM.\n        Some software such as OpenVPN 2.1.1, OpenSSH Server 5, and others have the\n        same problem.\n\n        The offensive technique is also described in Writing Secure Code (2nd Edition),\n        Chapter 23, in the section \"Calling Processes Security\" on page 676.\n\n        This technique was previously called Trusted Service Path, but is more commonly\n        known as Unquoted Service Path.\n\n        The service exploited won't start until the payload written to disk is removed.\n        Manual cleanup is required.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/unquoted_service_path","documentationSlug":"/modules/documentation/exploit/windows/local/unquoted_service_path","referencesSlug":"/modules/references/exploit/windows/local/unquoted_service_path"},"author":["sinn3r <sinn3r@metasploit.com>","h00die"],"notes":{"SideEffects":["artifacts-on-disk","config-changes"],"Reliability":["repeatable-session"],"Stability":["crash-service-down"]},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":true,"evasion":false,"name":"WfsDelay","required":false,"default":"0","description":"Additional delay when waiting for a session"},{"advanced":true,"evasion":false,"name":"EnableContextEncoding","required":false,"default":"false","description":"Use transient context when encoding payloads"},{"advanced":true,"evasion":false,"name":"ContextInformationFile","required":false,"default":"","description":"The information file that contains context information"},{"advanced":true,"evasion":false,"name":"DisablePayloadHandler","required":false,"default":"false","description":"Disable the handler code for the selected payload"},{"advanced":false,"evasion":false,"name":"SESSION","required":true,"default":"","description":"The session to run this module on."},{"advanced":true,"evasion":false,"name":"FileDropperDelay","required":false,"default":"","description":"Delay in seconds before attempting cleanup"},{"advanced":true,"evasion":false,"name":"EXE::EICAR","required":false,"default":"false","description":"Generate an EICAR file instead of regular payload exe"},{"advanced":true,"evasion":false,"name":"EXE::Custom","required":false,"default":"","description":"Use custom exe instead of automatically generating a payload exe"},{"advanced":true,"evasion":false,"name":"EXE::Path","required":false,"default":"","description":"The directory in which to look for the executable template"},{"advanced":true,"evasion":false,"name":"EXE::Template","required":false,"default":"","description":"The executable template file name."},{"advanced":true,"evasion":false,"name":"EXE::Inject","required":false,"default":"false","description":"Set to preserve the original EXE function"},{"advanced":true,"evasion":false,"name":"EXE::OldMethod","required":false,"default":"false","description":"Set to use the substitution EXE generation method."},{"advanced":true,"evasion":false,"name":"EXE::FallBack","required":false,"default":"false","description":"Use the default template in case the specified one is missing"},{"advanced":true,"evasion":false,"name":"MSI::EICAR","required":false,"default":"false","description":"Generate an EICAR file instead of regular payload msi"},{"advanced":true,"evasion":false,"name":"MSI::Custom","required":false,"default":"","description":"Use custom msi instead of automatically generating a payload msi"},{"advanced":true,"evasion":false,"name":"MSI::Path","required":false,"default":"","description":"The directory in which to look for the msi template"},{"advanced":true,"evasion":false,"name":"MSI::Template","required":false,"default":"","description":"The msi template file name"},{"advanced":true,"evasion":false,"name":"MSI::UAC","required":false,"default":"false","description":"Create an MSI with a UAC prompt (elevation to SYSTEM if accepted)"},{"advanced":false,"evasion":false,"name":"QUICK","required":false,"default":"true","description":"Stop at first vulnerable service found"}]}},"pageContext":{"id":"5be6a9d1-4452-5b07-9ec9-3878201c2b88"}}}