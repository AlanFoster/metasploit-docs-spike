{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/auxiliary/scanner/scada/modbusclient","result":{"data":{"moduleMetadataJson":{"id":"497ffa6f-f428-5eb1-b398-146df614ba1e","name":"Modbus Client Utility","fullname":"auxiliary/scanner/scada/modbusclient","description":"This module allows reading and writing data to a PLC using the Modbus protocol.\n        This module is based on the 'modiconstop.rb' Basecamp module from DigitalBond,\n        as well as the mbtget perl script.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/scanner/scada/modbusclient","documentationSlug":"/modules/documentation/auxiliary/scanner/scada/modbusclient"},"author":["EsMnemon <esm@mnemonic.no>","Arnaud SOULLIE <arnaud.soullie@solucom.fr>","Alexandrine TORRENTS <alexandrine.torrents@eurecom.fr>","Mathieu CHEVALIER <mathieu.chevalier@eurecom.fr>","AZSG <AstroZombieSG@gmail.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"name":"RHOSTS","required":true,"default":"","description":"The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'"},{"name":"RPORT","required":true,"default":"502","description":"The target port"},{"name":"SSL","required":false,"default":"false","description":"Negotiate SSL/TLS for outgoing connections"},{"name":"SSLVersion","required":true,"default":"Auto","description":"Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS1, TLS1.1, TLS1.2)"},{"name":"SSLVerifyMode","required":false,"default":"PEER","description":"SSL verification method (Accepted: CLIENT_ONCE, FAIL_IF_NO_PEER_CERT, NONE, PEER)"},{"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"name":"Proxies","required":false,"default":"","description":"A proxy chain of format type:host:port[,type:host:port][...]"},{"name":"CPORT","required":false,"default":"","description":"The local client port"},{"name":"CHOST","required":false,"default":"","description":"The local client address"},{"name":"ConnectTimeout","required":true,"default":"10","description":"Maximum number of seconds to establish a TCP connection"},{"name":"TCP::max_send_size","required":false,"default":"0","description":"Maxiumum tcp segment size.  (0 = disable)"},{"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"},{"name":"DATA_ADDRESS","required":true,"default":"","description":"Modbus data address"},{"name":"NUMBER","required":false,"default":"1","description":"Number of coils/registers to read (READ_COILS, READ_DISCRETE_INPUTS, READ_HOLDING_REGISTERS, READ_INPUT_REGISTERS modes only)"},{"name":"DATA","required":false,"default":"","description":"Data to write (WRITE_COIL and WRITE_REGISTER modes only)"},{"name":"DATA_COILS","required":false,"default":"","description":"Data in binary to write (WRITE_COILS mode only) e.g. 0110"},{"name":"DATA_REGISTERS","required":false,"default":"","description":"Words to write to each register separated with a comma (WRITE_REGISTERS mode only) e.g. 1,2,3,4"},{"name":"UNIT_NUMBER","required":false,"default":"1","description":"Modbus unit number"}]}},"pageContext":{"id":"497ffa6f-f428-5eb1-b398-146df614ba1e"}}}