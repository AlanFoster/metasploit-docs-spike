{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/auxiliary/gather/android_browser_new_tab_cookie_theft","result":{"data":{"moduleMetadataJson":{"id":"ecf6356e-4e11-5938-bd2e-2aa2d0de0f00","name":"Android Browser \"Open in New Tab\" Cookie Theft","fullname":"auxiliary/gather/android_browser_new_tab_cookie_theft","description":"In Android's stock AOSP Browser application and WebView component, the\n        \"open in new tab\" functionality allows a file URL to be opened. On\n        versions of Android before 4.4, the path to the sqlite cookie\n        database could be specified. By saving a cookie containing a <script>\n        tag and then loading the sqlite database into the browser as an HTML file,\n        XSS can be achieved inside the cookie file, disclosing *all* cookies\n        (HttpOnly or not) to an attacker.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/gather/android_browser_new_tab_cookie_theft","documentationSlug":"/modules/documentation/auxiliary/gather/android_browser_new_tab_cookie_theft"},"author":["Rafay Baloch","joev <joev@metasploit.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"name":"SRVHOST","required":true,"default":"0.0.0.0","description":"The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."},{"name":"SRVPORT","required":true,"default":"8080","description":"The local port to listen on."},{"name":"ListenerComm","required":false,"default":"","description":"The specific communication channel to use for this service"},{"name":"SSL","required":false,"default":"false","description":"Negotiate SSL for incoming connections"},{"name":"SSLCert","required":false,"default":"","description":"Path to a custom SSL certificate (default is randomly generated)"},{"name":"SSLCompression","required":false,"default":"false","description":"Enable SSL/TLS-level compression"},{"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"name":"TCP::max_send_size","required":false,"default":"0","description":"Maximum tcp segment size.  (0 = disable)"},{"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"},{"name":"URIPATH","required":false,"default":"","description":"The URI to use for this exploit (default is random)"},{"name":"HTTP::no_cache","required":false,"default":"false","description":"Disallow the browser to cache HTTP content"},{"name":"HTTP::chunked","required":false,"default":"false","description":"Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""},{"name":"HTTP::header_folding","required":false,"default":"false","description":"Enable folding of HTTP headers"},{"name":"HTTP::junk_headers","required":false,"default":"false","description":"Enable insertion of random junk HTTP headers"},{"name":"HTTP::compression","required":false,"default":"none","description":"Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"},{"name":"HTTP::server_name","required":true,"default":"Apache","description":"Configures the Server header of all outgoing replies"},{"name":"URIHOST","required":false,"default":"","description":"Host to use in URI (useful for tunnels)"},{"name":"URIPORT","required":false,"default":"","description":"Port to use in URI (useful for tunnels)"},{"name":"SendRobots","required":false,"default":"false","description":"Return a robots.txt file if asked for one"},{"name":"HTML::unicode","required":false,"default":"none","description":"Enable HTTP obfuscation via unicode (Accepted: none, utf-16le, utf-16be, utf-16be-marker, utf-32le, utf-32be)"},{"name":"HTML::base64","required":false,"default":"none","description":"Enable HTML obfuscation via an embeded base64 html object (IE not supported) (Accepted: none, plain, single_pad, double_pad, random_space_injection)"},{"name":"HTML::javascript::escape","required":false,"default":"0","description":"Enable HTML obfuscation via HTML escaping (number of iterations)"},{"name":"JsObfuscate","required":false,"default":"0","description":"Number of times to obfuscate JavaScript"},{"name":"JsIdentifiers","required":false,"default":"","description":"Identifiers to preserve for JsObfu"},{"name":"COOKIE_FILE","required":true,"default":"webviewCookiesChromium.db","description":"The cookie file (on older 2.x devices this is \"webview.db\")"}]}},"pageContext":{"id":"ecf6356e-4e11-5938-bd2e-2aa2d0de0f00"}}}