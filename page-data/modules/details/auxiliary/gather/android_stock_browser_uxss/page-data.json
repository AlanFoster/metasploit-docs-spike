{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/auxiliary/gather/android_stock_browser_uxss","result":{"data":{"moduleMetadataJson":{"id":"b3d65db4-ec61-5ba6-a4d3-b40acaf103a6","name":"Android Open Source Platform (AOSP) Browser UXSS","fullname":"auxiliary/gather/android_stock_browser_uxss","description":"This module exploits a Universal Cross-Site Scripting (UXSS) vulnerability present in\n        all versions of Android's open source stock browser before 4.4, and Android apps running\n        on < 4.4 that embed the WebView component. If successful, an attacker can leverage this bug\n        to scrape both cookie data and page contents from a vulnerable browser window.\n\n        If your target URLs use X-Frame-Options, you can enable the \"BYPASS_XFO\" option,\n        which will cause a popup window to be used. This requires a click from the user\n        and is much less stealthy, but is generally harmless-looking.\n\n        By supplying a CUSTOM_JS parameter and ensuring CLOSE_POPUP is set to false, this\n        module also allows running aribtrary javascript in the context of the targeted URL.\n        Some sample UXSS scripts are provided in data/exploits/uxss.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/gather/android_stock_browser_uxss","documentationSlug":"/modules/documentation/auxiliary/gather/android_stock_browser_uxss","referencesSlug":"/modules/references/auxiliary/gather/android_stock_browser_uxss"},"author":["Rafay Baloch","joev <joev@metasploit.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":false,"evasion":false,"name":"SRVHOST","required":true,"default":"0.0.0.0","description":"The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses."},{"advanced":false,"evasion":false,"name":"SRVPORT","required":true,"default":"8080","description":"The local port to listen on."},{"advanced":true,"evasion":false,"name":"ListenerComm","required":false,"default":"","description":"The specific communication channel to use for this service"},{"advanced":false,"evasion":false,"name":"SSL","required":false,"default":"false","description":"Negotiate SSL for incoming connections"},{"advanced":false,"evasion":false,"name":"SSLCert","required":false,"default":"","description":"Path to a custom SSL certificate (default is randomly generated)"},{"advanced":true,"evasion":false,"name":"SSLCompression","required":false,"default":"false","description":"Enable SSL/TLS-level compression"},{"advanced":true,"evasion":false,"name":"SSLCipher","required":false,"default":"","description":"String for SSL cipher spec - \"DHE-RSA-AES256-SHA\" or \"ADH\""},{"advanced":false,"evasion":true,"name":"TCP::max_send_size","required":false,"default":"0","description":"Maximum tcp segment size.  (0 = disable)"},{"advanced":false,"evasion":true,"name":"TCP::send_delay","required":false,"default":"0","description":"Delays inserted before every send.  (0 = disable)"},{"advanced":false,"evasion":false,"name":"URIPATH","required":false,"default":"","description":"The URI to use for this exploit (default is random)"},{"advanced":false,"evasion":true,"name":"HTTP::no_cache","required":false,"default":"false","description":"Disallow the browser to cache HTTP content"},{"advanced":false,"evasion":true,"name":"HTTP::chunked","required":false,"default":"false","description":"Enable chunking of HTTP responses via \"Transfer-Encoding: chunked\""},{"advanced":false,"evasion":true,"name":"HTTP::header_folding","required":false,"default":"false","description":"Enable folding of HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::junk_headers","required":false,"default":"false","description":"Enable insertion of random junk HTTP headers"},{"advanced":false,"evasion":true,"name":"HTTP::compression","required":false,"default":"none","description":"Enable compression of HTTP responses via content encoding (Accepted: none, gzip, deflate)"},{"advanced":false,"evasion":true,"name":"HTTP::server_name","required":true,"default":"Apache","description":"Configures the Server header of all outgoing replies"},{"advanced":true,"evasion":false,"name":"URIHOST","required":false,"default":"","description":"Host to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"URIPORT","required":false,"default":"","description":"Port to use in URI (useful for tunnels)"},{"advanced":true,"evasion":false,"name":"SendRobots","required":false,"default":"false","description":"Return a robots.txt file if asked for one"},{"advanced":false,"evasion":true,"name":"HTML::unicode","required":false,"default":"none","description":"Enable HTTP obfuscation via unicode (Accepted: none, utf-16le, utf-16be, utf-16be-marker, utf-32le, utf-32be)"},{"advanced":false,"evasion":true,"name":"HTML::base64","required":false,"default":"none","description":"Enable HTML obfuscation via an embeded base64 html object (IE not supported) (Accepted: none, plain, single_pad, double_pad, random_space_injection)"},{"advanced":false,"evasion":true,"name":"HTML::javascript::escape","required":false,"default":"0","description":"Enable HTML obfuscation via HTML escaping (number of iterations)"},{"advanced":false,"evasion":false,"name":"TARGET_URLS","required":true,"default":"http://example.com","description":"The comma-separated list of URLs to steal."},{"advanced":false,"evasion":false,"name":"CUSTOM_JS","required":false,"default":"","description":"A string of javascript to execute in the context of the target URLs."},{"advanced":false,"evasion":false,"name":"REMOTE_JS","required":false,"default":"","description":"A URL to inject into a script tag in the context of the target URLs."},{"advanced":false,"evasion":false,"name":"BYPASS_XFO","required":false,"default":"false","description":"Bypass URLs that have X-Frame-Options by using a one-click popup exploit."},{"advanced":false,"evasion":false,"name":"CLOSE_POPUP","required":false,"default":"true","description":"When BYPASS_XFO is enabled, this closes the popup window after exfiltration."}]}},"pageContext":{"id":"b3d65db4-ec61-5ba6-a4d3-b40acaf103a6"}}}