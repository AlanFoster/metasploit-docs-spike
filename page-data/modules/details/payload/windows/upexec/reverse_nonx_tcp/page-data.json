{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/payload/windows/upexec/reverse_nonx_tcp","result":{"data":{"moduleMetadataJson":{"id":"f326ac2a-23f3-5785-95d8-946acb56eb35","name":"Windows Upload/Execute, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/upexec/reverse_nonx_tcp","description":"Uploads an executable and runs it (staged). Connect back to the attacker (No NX)","rank":300,"fields":{"detailsSlug":"/modules/details/payload/windows/upexec/reverse_nonx_tcp","documentationSlug":"/modules/documentation/payload/windows/upexec/reverse_nonx_tcp","referencesSlug":"/modules/references/payload/windows/upexec/reverse_nonx_tcp"},"author":["vlad902 <vlad902@gmail.com>","sf <stephen_fewer@harmonysecurity.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":false,"evasion":false,"name":"LHOST","required":true,"default":"","description":"The listen address (an interface may be specified)"},{"advanced":false,"evasion":false,"name":"LPORT","required":true,"default":"4444","description":"The listen port"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindPort","required":false,"default":"","description":"The port to bind to on the local system if different from LPORT"},{"advanced":true,"evasion":false,"name":"ReverseAllowProxy","required":true,"default":"false","description":"Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST"},{"advanced":true,"evasion":false,"name":"ReverseListenerComm","required":false,"default":"","description":"The specific communication channel to use for this listener"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindAddress","required":false,"default":"","description":"The specific IP address to bind to on the local system"},{"advanced":true,"evasion":false,"name":"ReverseListenerThreaded","required":true,"default":"false","description":"Handle every connection in a new thread (experimental)"},{"advanced":true,"evasion":false,"name":"StagerRetryCount","required":false,"default":"10","description":"The number of times the stager should retry if the first connect fails"},{"advanced":true,"evasion":false,"name":"StagerRetryWait","required":false,"default":"5","description":"Number of seconds to wait for the stager between reconnect attempts"},{"advanced":true,"evasion":false,"name":"PingbackRetries","required":true,"default":"0","description":"How many additional successful pingbacks"},{"advanced":true,"evasion":false,"name":"PingbackSleep","required":true,"default":"30","description":"Time (in seconds) to sleep between pingbacks"},{"advanced":true,"evasion":false,"name":"PayloadUUIDSeed","required":false,"default":"","description":"A string to use when generating the payload UUID (deterministic)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDRaw","required":false,"default":"","description":"A hex string representing the raw 8-byte PUID value for the UUID"},{"advanced":true,"evasion":false,"name":"PayloadUUIDName","required":false,"default":"","description":"A human-friendly name to reference this unique payload (requires tracking)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDTracking","required":true,"default":"false","description":"Whether or not to automatically register generated UUIDs"},{"advanced":true,"evasion":false,"name":"EnableStageEncoding","required":false,"default":"false","description":"Encode the second stage payload"},{"advanced":true,"evasion":false,"name":"StageEncoder","required":false,"default":"","description":"Encoder to use if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncoderSaveRegisters","required":false,"default":"","description":"Additional registers to preserve in the staged payload if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncodingFallback","required":false,"default":"true","description":"Fallback to no encoding if the selected StageEncoder is not compatible"},{"advanced":true,"evasion":false,"name":"PrependMigrate","required":true,"default":"false","description":"Spawns and runs shellcode in new process"},{"advanced":true,"evasion":false,"name":"PrependMigrateProc","required":false,"default":"","description":"Process to spawn and run shellcode in"},{"advanced":false,"evasion":false,"name":"EXITFUNC","required":true,"default":"process","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"advanced":true,"evasion":false,"name":"CreateSession","required":false,"default":"true","description":"Create a new session for every successful login"},{"advanced":true,"evasion":false,"name":"InitialAutoRunScript","required":false,"default":"","description":"An initial script to run on session creation (before AutoRunScript)"},{"advanced":true,"evasion":false,"name":"AutoRunScript","required":false,"default":"","description":"A script to run automatically on session creation."},{"advanced":true,"evasion":false,"name":"CommandShellCleanupCommand","required":false,"default":"","description":"A command to run before the session is closed"},{"advanced":false,"evasion":false,"name":"PEXEC","required":true,"default":"","description":"Full path to the file to upload and execute"}]}},"pageContext":{"id":"f326ac2a-23f3-5785-95d8-946acb56eb35"}}}