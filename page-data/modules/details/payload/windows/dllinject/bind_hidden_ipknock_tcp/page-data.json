{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/payload/windows/dllinject/bind_hidden_ipknock_tcp","result":{"data":{"moduleMetadataJson":{"id":"f871b7d1-aa41-52e2-b026-69b2693f5b80","name":"Reflective DLL Injection, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/dllinject/bind_hidden_ipknock_tcp","description":"Inject a DLL via a reflective loader. Listen for a connection. First, the port will need to be knocked from\n                          the IP defined in KHOST. This IP will work as an authentication method\n                          (you can spoof it with tools like hping). After that you could get your\n                          shellcode from any IP. The socket will appear as \"closed,\" thus helping to\n                          hide the shellcode","rank":300,"fields":{"detailsSlug":"/modules/details/payload/windows/dllinject/bind_hidden_ipknock_tcp","documentationSlug":"/modules/documentation/payload/windows/dllinject/bind_hidden_ipknock_tcp","referencesSlug":"/modules/references/payload/windows/dllinject/bind_hidden_ipknock_tcp"},"author":["sf <stephen_fewer@harmonysecurity.com>","hdm <x@hdm.io>","skape <mmiller@hick.org>","Borja Merino <bmerinofe@gmail.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":false,"evasion":false,"name":"LPORT","required":true,"default":"4444","description":"The listen port"},{"advanced":false,"evasion":false,"name":"RHOST","required":false,"default":"","description":"The target address"},{"advanced":true,"evasion":false,"name":"PingbackRetries","required":true,"default":"0","description":"How many additional successful pingbacks"},{"advanced":true,"evasion":false,"name":"PingbackSleep","required":true,"default":"30","description":"Time (in seconds) to sleep between pingbacks"},{"advanced":true,"evasion":false,"name":"PayloadUUIDSeed","required":false,"default":"","description":"A string to use when generating the payload UUID (deterministic)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDRaw","required":false,"default":"","description":"A hex string representing the raw 8-byte PUID value for the UUID"},{"advanced":true,"evasion":false,"name":"PayloadUUIDName","required":false,"default":"","description":"A human-friendly name to reference this unique payload (requires tracking)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDTracking","required":true,"default":"false","description":"Whether or not to automatically register generated UUIDs"},{"advanced":true,"evasion":false,"name":"EnableStageEncoding","required":false,"default":"false","description":"Encode the second stage payload"},{"advanced":true,"evasion":false,"name":"StageEncoder","required":false,"default":"","description":"Encoder to use if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncoderSaveRegisters","required":false,"default":"","description":"Additional registers to preserve in the staged payload if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncodingFallback","required":false,"default":"true","description":"Fallback to no encoding if the selected StageEncoder is not compatible"},{"advanced":true,"evasion":false,"name":"PrependMigrate","required":true,"default":"false","description":"Spawns and runs shellcode in new process"},{"advanced":true,"evasion":false,"name":"PrependMigrateProc","required":false,"default":"","description":"Process to spawn and run shellcode in"},{"advanced":false,"evasion":false,"name":"EXITFUNC","required":true,"default":"process","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"advanced":false,"evasion":false,"name":"KHOST","required":true,"default":"","description":"IP address allowed"},{"advanced":false,"evasion":false,"name":"DLL","required":true,"default":"","description":"The local path to the Reflective DLL to upload"}]}},"pageContext":{"id":"f871b7d1-aa41-52e2-b026-69b2693f5b80"}}}