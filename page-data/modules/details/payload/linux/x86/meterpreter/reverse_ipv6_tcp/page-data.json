{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/payload/linux/x86/meterpreter/reverse_ipv6_tcp","result":{"data":{"moduleMetadataJson":{"id":"07b56d23-8bcb-503e-affa-72adf9668654","name":"Linux Mettle x86, Reverse TCP Stager (IPv6)","fullname":"payload/linux/x86/meterpreter/reverse_ipv6_tcp","description":"Inject the mettle server payload (staged). Connect back to attacker over IPv6","rank":300,"fields":{"detailsSlug":"/modules/details/payload/linux/x86/meterpreter/reverse_ipv6_tcp","documentationSlug":"/modules/documentation/payload/linux/x86/meterpreter/reverse_ipv6_tcp","referencesSlug":"/modules/references/payload/linux/x86/meterpreter/reverse_ipv6_tcp"},"author":["William Webb <william_webb@rapid7.com>","kris katterjohn <katterjohn@gmail.com>"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":false,"evasion":false,"name":"LHOST","required":true,"default":"","description":"The listen address (an interface may be specified)"},{"advanced":false,"evasion":false,"name":"LPORT","required":true,"default":"4444","description":"The listen port"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindPort","required":false,"default":"","description":"The port to bind to on the local system if different from LPORT"},{"advanced":true,"evasion":false,"name":"ReverseAllowProxy","required":true,"default":"false","description":"Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST"},{"advanced":true,"evasion":false,"name":"ReverseListenerComm","required":false,"default":"","description":"The specific communication channel to use for this listener"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindAddress","required":false,"default":"","description":"The specific IP address to bind to on the local system"},{"advanced":true,"evasion":false,"name":"ReverseListenerThreaded","required":true,"default":"false","description":"Handle every connection in a new thread (experimental)"},{"advanced":true,"evasion":false,"name":"StagerRetryCount","required":false,"default":"10","description":"The number of times the stager should retry if the first connect fails"},{"advanced":true,"evasion":false,"name":"StagerRetryWait","required":false,"default":"5","description":"Number of seconds to wait for the stager between reconnect attempts"},{"advanced":true,"evasion":false,"name":"AutoLoadStdapi","required":true,"default":"true","description":"Automatically load the Stdapi extension"},{"advanced":true,"evasion":false,"name":"AutoVerifySession","required":true,"default":"true","description":"Automatically verify and drop invalid sessions"},{"advanced":true,"evasion":false,"name":"AutoVerifySessionTimeout","required":false,"default":"30","description":"Timeout period to wait for session validation to occur, in seconds"},{"advanced":true,"evasion":false,"name":"InitialAutoRunScript","required":false,"default":"","description":"An initial script to run on session creation (before AutoRunScript)"},{"advanced":true,"evasion":false,"name":"AutoRunScript","required":false,"default":"","description":"A script to run automatically on session creation."},{"advanced":true,"evasion":false,"name":"AutoSystemInfo","required":true,"default":"true","description":"Automatically capture system information on initialization."},{"advanced":true,"evasion":false,"name":"EnableUnicodeEncoding","required":true,"default":"false","description":"Automatically encode UTF-8 strings as hexadecimal"},{"advanced":true,"evasion":false,"name":"HandlerSSLCert","required":false,"default":"","description":"Path to a SSL certificate in unified PEM format, ignored for HTTP transports"},{"advanced":true,"evasion":false,"name":"SessionRetryTotal","required":false,"default":"3600","description":"Number of seconds try reconnecting for on network failure"},{"advanced":true,"evasion":false,"name":"SessionRetryWait","required":false,"default":"10","description":"Number of seconds to wait between reconnect attempts"},{"advanced":true,"evasion":false,"name":"SessionExpirationTimeout","required":false,"default":"604800","description":"The number of seconds before this session should be forcibly shut down"},{"advanced":true,"evasion":false,"name":"SessionCommunicationTimeout","required":false,"default":"300","description":"The number of seconds of no activity before this session should be killed"},{"advanced":true,"evasion":false,"name":"PayloadProcessCommandLine","required":false,"default":"","description":"The displayed command line that will be used by the payload"},{"advanced":true,"evasion":false,"name":"AutoUnhookProcess","required":true,"default":"false","description":"Automatically load the unhook extension and unhook the process"},{"advanced":true,"evasion":false,"name":"PingbackRetries","required":true,"default":"0","description":"How many additional successful pingbacks"},{"advanced":true,"evasion":false,"name":"PingbackSleep","required":true,"default":"30","description":"Time (in seconds) to sleep between pingbacks"},{"advanced":true,"evasion":false,"name":"PayloadUUIDSeed","required":false,"default":"","description":"A string to use when generating the payload UUID (deterministic)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDRaw","required":false,"default":"","description":"A hex string representing the raw 8-byte PUID value for the UUID"},{"advanced":true,"evasion":false,"name":"PayloadUUIDName","required":false,"default":"","description":"A human-friendly name to reference this unique payload (requires tracking)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDTracking","required":true,"default":"false","description":"Whether or not to automatically register generated UUIDs"},{"advanced":true,"evasion":false,"name":"EnableStageEncoding","required":false,"default":"false","description":"Encode the second stage payload"},{"advanced":true,"evasion":false,"name":"StageEncoder","required":false,"default":"","description":"Encoder to use if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncoderSaveRegisters","required":false,"default":"","description":"Additional registers to preserve in the staged payload if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncodingFallback","required":false,"default":"true","description":"Fallback to no encoding if the selected StageEncoder is not compatible"},{"advanced":true,"evasion":false,"name":"PrependFork","required":false,"default":"false","description":"Prepend a stub that executes: if (fork()) { exit(0); }"},{"advanced":true,"evasion":false,"name":"PrependSetresuid","required":false,"default":"false","description":"Prepend a stub that executes the setresuid(0, 0, 0) system call"},{"advanced":true,"evasion":false,"name":"PrependSetreuid","required":false,"default":"false","description":"Prepend a stub that executes the setreuid(0, 0) system call"},{"advanced":true,"evasion":false,"name":"PrependSetuid","required":false,"default":"false","description":"Prepend a stub that executes the setuid(0) system call"},{"advanced":true,"evasion":false,"name":"PrependSetresgid","required":false,"default":"false","description":"Prepend a stub that executes the setresgid(0, 0, 0) system call"},{"advanced":true,"evasion":false,"name":"PrependSetregid","required":false,"default":"false","description":"Prepend a stub that executes the setregid(0, 0) system call"},{"advanced":true,"evasion":false,"name":"PrependSetgid","required":false,"default":"false","description":"Prepend a stub that executes the setgid(0) system call"},{"advanced":true,"evasion":false,"name":"PrependChrootBreak","required":false,"default":"false","description":"Prepend a stub that will break out of a chroot (includes setreuid to root)"},{"advanced":true,"evasion":false,"name":"AppendExit","required":false,"default":"false","description":"Append a stub that executes the exit(0) system call"},{"advanced":true,"evasion":false,"name":"MeterpreterDebugLevel","required":true,"default":"0","description":"Set debug level for meterpreter 0-3 (Default output is strerr)"},{"advanced":true,"evasion":false,"name":"RemoteMeterpreterDebugFile","required":false,"default":"","description":"Redirect Debug Info to a Log File"},{"advanced":false,"evasion":false,"name":"SCOPEID","required":false,"default":"0","description":"IPv6 scope ID, for link-local addresses"}]}},"pageContext":{"id":"07b56d23-8bcb-503e-affa-72adf9668654"}}}