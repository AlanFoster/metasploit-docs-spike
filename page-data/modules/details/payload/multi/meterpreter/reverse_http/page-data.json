{"componentChunkName":"component---src-templates-module-details-template-tsx","path":"/modules/details/payload/multi/meterpreter/reverse_http","result":{"data":{"moduleMetadataJson":{"id":"2af18713-e987-51ca-8f77-6aa3b56bd7c0","name":"Architecture-Independent Meterpreter Stage, Reverse HTTP Stager (Mulitple Architectures)","fullname":"payload/multi/meterpreter/reverse_http","description":"Handle Meterpreter sessions regardless of the target arch/platform. Tunnel communication over HTTP","rank":300,"fields":{"detailsSlug":"/modules/details/payload/multi/meterpreter/reverse_http","documentationSlug":"/modules/documentation/payload/multi/meterpreter/reverse_http","referencesSlug":"/modules/references/payload/multi/meterpreter/reverse_http"},"author":["OJ Reeves"],"notes":{"SideEffects":null,"Reliability":null,"Stability":null},"options":[{"advanced":true,"evasion":false,"name":"WORKSPACE","required":false,"default":"","description":"Specify the workspace for this module"},{"advanced":true,"evasion":false,"name":"VERBOSE","required":false,"default":"false","description":"Enable detailed status messages"},{"advanced":false,"evasion":false,"name":"LHOST","required":true,"default":"","description":"The local listener hostname"},{"advanced":false,"evasion":false,"name":"LPORT","required":true,"default":"8080","description":"The local listener port"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindPort","required":false,"default":"","description":"The port to bind to on the local system if different from LPORT"},{"advanced":true,"evasion":false,"name":"ReverseAllowProxy","required":true,"default":"false","description":"Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST"},{"advanced":true,"evasion":false,"name":"PingbackRetries","required":true,"default":"0","description":"How many additional successful pingbacks"},{"advanced":true,"evasion":false,"name":"PingbackSleep","required":true,"default":"30","description":"Time (in seconds) to sleep between pingbacks"},{"advanced":false,"evasion":false,"name":"LURI","required":false,"default":"","description":"The HTTP Path"},{"advanced":true,"evasion":false,"name":"ReverseListenerBindAddress","required":false,"default":"","description":"The specific IP address to bind to on the local system"},{"advanced":true,"evasion":false,"name":"OverrideRequestHost","required":true,"default":"false","description":"Forces a specific host and port instead of using what the client requests, defaults to LHOST:LPORT"},{"advanced":true,"evasion":false,"name":"OverrideLHOST","required":false,"default":"","description":"When OverrideRequestHost is set, use this value as the host name for secondary requests"},{"advanced":true,"evasion":false,"name":"OverrideLPORT","required":false,"default":"","description":"When OverrideRequestHost is set, use this value as the port number for secondary requests"},{"advanced":true,"evasion":false,"name":"OverrideScheme","required":false,"default":"","description":"When OverrideRequestHost is set, use this value as the scheme for secondary requests, e.g http or https"},{"advanced":true,"evasion":false,"name":"HttpUserAgent","required":false,"default":"Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko","description":"The user-agent that the payload should use for communication Max parameter length: 255 characters"},{"advanced":true,"evasion":false,"name":"HttpServerName","required":false,"default":"Apache","description":"The server header that the handler will send in response to requests"},{"advanced":true,"evasion":false,"name":"HttpUnknownRequestResponse","required":false,"default":"<html><body><h1>It works!</h1></body></html>","description":"The returned HTML response body when the handler receives a request that is not from a payload"},{"advanced":true,"evasion":false,"name":"IgnoreUnknownPayloads","required":true,"default":"false","description":"Whether to drop connections from payloads using unknown UUIDs"},{"advanced":true,"evasion":false,"name":"PayloadUUIDSeed","required":false,"default":"","description":"A string to use when generating the payload UUID (deterministic)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDRaw","required":false,"default":"","description":"A hex string representing the raw 8-byte PUID value for the UUID"},{"advanced":true,"evasion":false,"name":"PayloadUUIDName","required":false,"default":"","description":"A human-friendly name to reference this unique payload (requires tracking)"},{"advanced":true,"evasion":false,"name":"PayloadUUIDTracking","required":true,"default":"false","description":"Whether or not to automatically register generated UUIDs"},{"advanced":true,"evasion":false,"name":"EnableStageEncoding","required":false,"default":"false","description":"Encode the second stage payload"},{"advanced":true,"evasion":false,"name":"StageEncoder","required":false,"default":"","description":"Encoder to use if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncoderSaveRegisters","required":false,"default":"","description":"Additional registers to preserve in the staged payload if EnableStageEncoding is set"},{"advanced":true,"evasion":false,"name":"StageEncodingFallback","required":false,"default":"true","description":"Fallback to no encoding if the selected StageEncoder is not compatible"},{"advanced":true,"evasion":false,"name":"StagerURILength","required":false,"default":"","description":"The URI length for the stager (at least 5 bytes)"},{"advanced":true,"evasion":false,"name":"StagerRetryCount","required":false,"default":"10","description":"The number of times the stager should retry if the first connect fails"},{"advanced":true,"evasion":false,"name":"StagerRetryWait","required":false,"default":"5","description":"Number of seconds to wait for the stager between reconnect attempts"},{"advanced":true,"evasion":false,"name":"HttpHostHeader","required":false,"default":"","description":"An optional value to use for the Host HTTP header"},{"advanced":true,"evasion":false,"name":"HttpCookie","required":false,"default":"","description":"An optional value to use for the Cookie HTTP header"},{"advanced":true,"evasion":false,"name":"HttpReferer","required":false,"default":"","description":"An optional value to use for the Referer HTTP header"},{"advanced":true,"evasion":false,"name":"HttpProxyHost","required":false,"default":"","description":"An optional proxy server IP address or hostname"},{"advanced":true,"evasion":false,"name":"HttpProxyPort","required":false,"default":"","description":"An optional proxy server port"},{"advanced":true,"evasion":false,"name":"HttpProxyUser","required":false,"default":"","description":"An optional proxy server username Max parameter length: 63 characters"},{"advanced":true,"evasion":false,"name":"HttpProxyPass","required":false,"default":"","description":"An optional proxy server password Max parameter length: 63 characters"},{"advanced":true,"evasion":false,"name":"HttpProxyType","required":true,"default":"HTTP","description":"The type of HTTP proxy (Accepted: HTTP, SOCKS)"},{"advanced":true,"evasion":false,"name":"AutoLoadStdapi","required":true,"default":"true","description":"Automatically load the Stdapi extension"},{"advanced":true,"evasion":false,"name":"AutoVerifySession","required":true,"default":"true","description":"Automatically verify and drop invalid sessions"},{"advanced":true,"evasion":false,"name":"AutoVerifySessionTimeout","required":false,"default":"30","description":"Timeout period to wait for session validation to occur, in seconds"},{"advanced":true,"evasion":false,"name":"InitialAutoRunScript","required":false,"default":"","description":"An initial script to run on session creation (before AutoRunScript)"},{"advanced":true,"evasion":false,"name":"AutoRunScript","required":false,"default":"","description":"A script to run automatically on session creation."},{"advanced":true,"evasion":false,"name":"AutoSystemInfo","required":true,"default":"true","description":"Automatically capture system information on initialization."},{"advanced":true,"evasion":false,"name":"EnableUnicodeEncoding","required":true,"default":"false","description":"Automatically encode UTF-8 strings as hexadecimal"},{"advanced":true,"evasion":false,"name":"HandlerSSLCert","required":false,"default":"","description":"Path to a SSL certificate in unified PEM format, ignored for HTTP transports"},{"advanced":true,"evasion":false,"name":"SessionRetryTotal","required":false,"default":"3600","description":"Number of seconds try reconnecting for on network failure"},{"advanced":true,"evasion":false,"name":"SessionRetryWait","required":false,"default":"10","description":"Number of seconds to wait between reconnect attempts"},{"advanced":true,"evasion":false,"name":"SessionExpirationTimeout","required":false,"default":"604800","description":"The number of seconds before this session should be forcibly shut down"},{"advanced":true,"evasion":false,"name":"SessionCommunicationTimeout","required":false,"default":"300","description":"The number of seconds of no activity before this session should be killed"},{"advanced":true,"evasion":false,"name":"PayloadProcessCommandLine","required":false,"default":"","description":"The displayed command line that will be used by the payload"},{"advanced":true,"evasion":false,"name":"AutoUnhookProcess","required":true,"default":"false","description":"Automatically load the unhook extension and unhook the process"}]}},"pageContext":{"id":"2af18713-e987-51ca-8f77-6aa3b56bd7c0"}}}