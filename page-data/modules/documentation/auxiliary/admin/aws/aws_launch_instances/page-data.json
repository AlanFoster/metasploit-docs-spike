{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/auxiliary/admin/aws/aws_launch_instances","result":{"data":{"moduleMetadataJson":{"id":"404d9f01-7688-55f4-b9ca-fba839dddf33","name":"Launches Hosts in AWS","fullname":"auxiliary/admin/aws/aws_launch_instances","description":"This module will attempt to launch an AWS instances (hosts) in EC2.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/admin/aws/aws_launch_instances","documentationSlug":"/modules/documentation/auxiliary/admin/aws/aws_launch_instances"},"documentation":{"html":"<h1 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>The Launch Instances module (<code class=\"language-text\">aws_launch_instances</code>) can be used to launch a\nCloud host running metasploit-aggregator (a proxy for Meterpreter sessions).</p>\n<h2 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLDR</h2>\n<p>Shell #1:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt; use auxiliary/admin/aws/aws_launch_instances\n&gt; set AccessKeyId ...\n&gt; set SecretAccessKey ...\n&gt; set SSH_PUB_KEY ssh-rsa ABCDEDG123...\n&gt; set SEC_GROUP_CIDR &lt;MY IP ADDRESS&gt;/32\n&gt; run\n[*] Created security group: sg-abcdefg\n[*] Launching instance(s) in us-west-2, AMI: ami-1e299d7e, key pair name: admin, security group: sg-abcdefg, subnet ID: subnet-hijklmn\n[*] Launched instance i-12345678 in us-west-2 account 012345678900\n[*] instance i-12345678 status: initializing\n...\n[*] instance i-12345678 status: ok\n[*] Instance i-12345678 has IP adrress 35.12.4.1\n[*] Auxiliary module execution completed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Shell #2:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">ssh ec2-user@35.12.4.1 -L 2447:127.0.0.1:2447</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Shell #1 again:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt; load aggregator\n&gt; aggregator_connect 127.0.0.1:2447</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>For more information on metasploit-aggregator, see\n<a href=\"https://github.com/rapid7/metasploit-aggregator\">https://github.com/rapid7/metasploit-aggregator</a></p>\n<h1 id=\"background\" style=\"position:relative;\"><a href=\"#background\" aria-label=\"background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Background</h1>\n<h2 id=\"aws-api-access-keys\" style=\"position:relative;\"><a href=\"#aws-api-access-keys\" aria-label=\"aws api access keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS API Access Keys</h2>\n<p>API access keys can be used to make calls against the AWS API, to say\nretrieve deployment packages from S3.</p>\n<h2 id=\"vpc\" style=\"position:relative;\"><a href=\"#vpc\" aria-label=\"vpc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC</h2>\n<p>The VPC or Virtual Private Cloud, an isolated local area network. Network access\ncan be made available by assigning an Internet routable IP address to a host or\nrouting traffic to it through an ELB (Elastic Load Balancer). In either case\nsecurity-groups are used to open access to network ranges and specific TPC/UDP\nports. Security-groups provide much of the functionality of traditional firewalls\nand can be configured by specifyig a protocol, a CIDR and a port. </p>\n<h2 id=\"how-it-works\" style=\"position:relative;\"><a href=\"#how-it-works\" aria-label=\"how it works permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How it Works</h2>\n<p>Although hosts can be launched using the\nWeb console or the CLI, launching a host in the Cloud requires a fair\namount of configuration; this module does its best to abstract configuration\nrequirements away from the user by auto detecting the VPC, subnets, creating\nsecurity groups, etc. It performs several tasks to launch a host with\na public IP address, these are as follow: 1) select a VPC, 2) select a subnet, 3)\ncreate/select a security group, 4) create/select a key-pair, and 5) launch\na host.</p>\n<p>The module will attempt to launch the host in the first VPC it finds in the\ngiven region (<code class=\"language-text\">Region</code> option). Most of the time there is only one VPC per\naccount per region, however one might find multiple VPCs within the same region.\nIn this case, one may use the <code class=\"language-text\">VPC_ID</code> advanced option to specify the VPC to\nuse. Selecting a subnet is a bit more complicated. To have traffic routed\nbetween us and the Cloud host, a public subnet (a subnet that is routable to an\nInternet gateway) must be selected and the Cloud host must be associated with\nan Internet routable IP address. The module dynamically finds which subnet to\nlaunch the host in. It will use the first subnet it finds having the\n<code class=\"language-text\">Auto-assign Public IP</code> option set, if no such subnet exists, then it will\nselect the first subnet having an Internet gateway. To circumvent this process,\nthe <code class=\"language-text\">SUBNET_ID</code> advanced option can be set. </p>\n<p>When launching a Cloud host at least one security group is required. There are\nseveral advanced options for creating/selecting a security group. The\n<code class=\"language-text\">SEC_GROUP_ID</code> option works much in the same way the <code class=\"language-text\">VPC_ID</code> option does.\nThat is, the module will create a security group unless the <code class=\"language-text\">SEC_GROUP_ID</code>\noptions is set. If the <code class=\"language-text\">SEC_GROUP_ID</code> option is not set, the module will attempt\nto create a security group using the values specified in the <code class=\"language-text\">SEC_GROUP_CIDR</code>,\n<code class=\"language-text\">SEC_GROUP_NAME</code>, and <code class=\"language-text\">SEC_GROUP_PORT</code> options as configuration. </p>\n<p>The <code class=\"language-text\">KEY_NAME</code> and <code class=\"language-text\">SSH_PUB_KEY</code> options are used in conjunction to select or\ncreate a key-pair (a named SSH public key). Key-pairs are used to authenticate\nto the host once it is running. The <code class=\"language-text\">KEY_NAME</code> defaults to admin while\n<code class=\"language-text\">SSH_PUB_KEY</code> is optional. If the <code class=\"language-text\">SSH_PUB_KEY</code> is left unset, then the module\nwill not attempt to create a key-pair and will simply attempt to launch the\ninstance using an existing key-pair denoted by <code class=\"language-text\">KEY_NAME</code>. To set the\n<code class=\"language-text\">SSH_PUB_KEY</code> option, a public SSH key must be provided as can be generated by\n<code class=\"language-text\">ssh-keygen -y -f &lt;private key filename&gt;</code>. Once a key-pair is created/selected,\nthe module launches the host via the AWS API specifying that it should\nassociate a public IP address.</p>\n<p>As part of launching the host it passes user-data (shell script) that installs\nmetasploit-aggregator and runs it in a screen session.</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>The Launch Instances module is an auxiliary module that can be loaded using the\nuse command. To run the module, only the <code class=\"language-text\">AccessKeyId</code>, <code class=\"language-text\">SecretAccessKey</code>, and\n<code class=\"language-text\">KEY_NAME</code> options are required.</p>\n<p>Basic Options:</p>\n<ul>\n<li><code class=\"language-text\">AMI_ID</code>: The Amazon Machine Image (AMI) ID (region dependent)</li>\n<li><code class=\"language-text\">RHOST</code>: the AWS EC2 Endpoint (ec2.us-west-2.amazonaws.com), may change this to something closer to you</li>\n<li><code class=\"language-text\">Region</code>: The default region (us-west-2), must match endpoint</li>\n<li><code class=\"language-text\">AccessKeyId</code>: AWS API access key</li>\n<li><code class=\"language-text\">SecretAccessKey</code>: AWS API secret access key</li>\n<li><code class=\"language-text\">Token</code>: AWS API session token, optional</li>\n<li><code class=\"language-text\">KEY_NAME</code>: The SSH key to be used for ec2-user</li>\n<li><code class=\"language-text\">SSH_PUB_KEY</code>: The public SSH key to be used for ec2-user, e.g., \"ssh-rsa ABCDE...\"</li>\n<li><code class=\"language-text\">USERDATA_FILE</code>: The script that will be executed on start</li>\n</ul>\n<p>Advanced Options:</p>\n<ul>\n<li><code class=\"language-text\">INSTANCE_TYPE</code>: The instance type</li>\n<li><code class=\"language-text\">MaxCount</code>: Maximum number of instances to launch</li>\n<li><code class=\"language-text\">MinCount</code>: Minumum number of instances to launch</li>\n<li><code class=\"language-text\">ROLE_NAME</code>: The instance profile/role name</li>\n<li><code class=\"language-text\">RPORT:</code> AWS EC2 Endpoint TCP Port</li>\n<li><code class=\"language-text\">SEC_GROUP_ID</code>: the EC2 security group to use</li>\n<li><code class=\"language-text\">SEC_GROUP_CIDR</code>: the EC2 security group network access CIDR, defaults to 0.0.0.0/0</li>\n<li><code class=\"language-text\">SEC_GROUP_NAME</code>: the EC2 security group name</li>\n<li><code class=\"language-text\">SEC_GROUP_PORT</code>: the EC2 security group network access port, defaults to tcp:22</li>\n<li><code class=\"language-text\">SUBNET_ID</code>: The public subnet to use</li>\n<li><code class=\"language-text\">UserAgent</code>: The User-Agent header to use for all requests</li>\n<li><code class=\"language-text\">VPC_ID</code>: The EC2 VPC ID</li>\n</ul>\n<h1 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h1>\n<p>The Launch Instances module is an auxiliary module that can be loaded using the\nuse command. To run the module, only the <code class=\"language-text\">AccessKeyId</code>, <code class=\"language-text\">SecretAccessKey</code>, and\n<code class=\"language-text\">KEY_NAME</code> options are required.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use auxiliary/admin/aws/aws_launch_instances\nmsf auxiliary(aws_launch_instances) &gt; show options\n\nModule options (auxiliary/admin/aws/aws_launch_instances):\n\n   Name             Current Setting              Required  Description\n   ----             ---------------              --------  -----------\n   AMI_ID           ami-1e299d7e                 yes       The Amazon Machine Image (AMI) ID\n   AccessKeyId                                   yes       AWS access key\n   KEY_NAME         admin                        yes       The SSH key to be used for ec2-user\n   Proxies                                       no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOST            ec2.us-west-2.amazonaws.com  yes       AWS region specific EC2 endpoint\n   Region           us-west-2                    yes       The default region\n   SSH_PUB_KEY                                   no        The public SSH key to be used for ec2-user, e.g., &quot;ssh-rsa ABCDE...&quot;\n   SecretAccessKey                               yes       AWS secret key\n   Token                                         no        AWS session token\n   USERDATA_FILE                                 no        The script that will be executed on start\n\nmsf auxiliary(aws_launch_instances) &gt; set SecretAccessKey asdfasd+asdfasdfasd...\nSecretAccessKey =&gt; asdfasd+asdfasdfasd...\nmsf auxiliary(aws_launch_instances) &gt; set AccessKeyId AKIAAKIAAKIAAKIAAKIAA\nAccessKeyId =&gt; AKIAJH47PFECK3EVTBKA\nmsf auxiliary(aws_launch_instances) &gt; set KEY_NAME ec2-user-key\nKEY_NAME =&gt; ec2-user-key\nmsf auxiliary(aws_launch_instances) &gt; set SSH_PUB_KEY ssh-rsa ABCDEDG123...\nSSH_PUB_KEY =&gt; ssh-rsa ABCDEDG123...\nmsf auxiliary(aws_launch_instances) &gt; run\n\n[*] Created ec2-user-key (ab:cd:ef:12:34:56:78:90:ab:ac:ad:ab:a1:23:45:67)\n[*] Created security group: sg-12345678\n[*] Launching instance(s) in us-west-2, AMI: ami-1e299d7e, key pair name: ec2-user, security group: sg-12345678, subnet ID: subnet-abcdefgh\n[*] Launched instance i-12345678 in us-west-2 account 123456789012\n[*] instance i-12345678 status: initializing\n[*] instance i-12345678 status: initializing\n...\n[*] instance i-12345678 status: ok\n[*] Instance i-12345678 has IP address 54.186.158.6\n[*] Auxiliary module execution completed </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>When the host has passed its primary system checks, the IP address will be\ndisplayed. We can use this IP address to SSH to the host. Please note that\nmost users will want to set the <code class=\"language-text\">SEC_GROUP_CIDR</code> option to restrict access to\nour new Cloud host.</p>\n<p>To SSH into the host, you must specify the SSH key, and ec2-user username, e.g.,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ ssh -i ec2-user-key ec2-user@54.186.158.6 -L 2447:127.0.0.1:2447\nThe authenticity of host &#39;54.186.158.6 (54.186.158.6)&#39; can&#39;t be established.\nECDSA key fingerprint is SHA256:ePj6WtCeK...\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added &#39;54.186.158.6&#39; (ECDSA) to the list of known hosts.\n       __|  __|_  )\n       _|  (     /   Amazon Linux AMI\n      ___|\\___|___|\nhttps://aws.amazon.com/amazon-linux-ami/2016.09-release-notes/\n5 package(s) needed for security, out of 9 available\nRun &quot;sudo yum update&quot; to apply all updates.\n[ec2-user@ip-172-31-8-176 ~]$</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Back in the Metasploit console you can now connect via aggregator:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf auxiliary(aws_launch_instances) &gt; load aggregator\nmsf auxiliary(aws_launch_instances) &gt; aggregator_connect 127.0.0.1:2447\n[*] Connecting to Aggregator instance at 127.0.0.1:2447...\nmsf auxiliary(aws_launch_instances) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"404d9f01-7688-55f4-b9ca-fba839dddf33"}}}