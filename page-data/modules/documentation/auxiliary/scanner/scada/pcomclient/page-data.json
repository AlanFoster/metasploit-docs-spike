{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/auxiliary/scanner/scada/pcomclient","result":{"data":{"moduleMetadataJson":{"id":"6b874232-d33b-51e8-a6a6-3d63bbe593a4","name":"Unitronics PCOM Client","fullname":"auxiliary/scanner/scada/pcomclient","description":"Unitronics Vision PLCs allow unauthenticated PCOM commands\n        to query PLC registers.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/scanner/scada/pcomclient","documentationSlug":"/modules/documentation/auxiliary/scanner/scada/pcomclient","referencesSlug":"/modules/references/auxiliary/scanner/scada/pcomclient"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  Unitronics Vision PLCs using PCOM protocol</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Do: <code class=\"language-text\">use scanner/scada/pcomclient</code></li>\n<li>Do: <code class=\"language-text\">set RHOST=IP</code> where IP is the IP address of the target</li>\n<li>Do: <code class=\"language-text\">run</code> to send PCOM command</li>\n</ol>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use scanner/scada/pcomclient\nmsf auxiliary(scanner/scada/pcomclient) &gt; show options\n\nModule options (auxiliary/scanner/scada/pcomclient):\n\nName     Current Setting  Required  Description\n----     ---------------  --------  -----------\nADDRESS  0                yes       PCOM memory address (0 - 65535)\nLENGTH   3                yes       Number of values to read (1 - 255) (read only)\nOPERAND  MI               yes       Operand type (Accepted: Input, Output, SB, MB, MI, SI, ML, SL)\nRHOST                     yes       The target address\nRPORT    20256            yes       The target port (TCP)\nUNITID   0                no        Unit ID (0 - 127)\nVALUES                    no        Values to write (0 - 65535 each) (comma separated) (write only)\n\n\nAuxiliary action:\n\nName  Description\n----  -----------\nREAD  Read values from PLC memory\n\n\nmsf auxiliary(scanner/scada/pcomclient) &gt; set RHOST 192.168.1.1\nRHOST =&gt; 192.168.1.1\nmsf auxiliary(scanner/scada/pcomclient) &gt; run\n\n[*] 192.168.1.1:20256 - Reading 03 values (MI) starting from 0000 address\n[+] 192.168.1.1:20256 - [00000] : 0\n[+] 192.168.1.1:20256 - [00001] : 1\n[+] 192.168.1.1:20256 - [00002] : 0\n[*] Auxiliary module execution completed\nmsf auxiliary(scanner/scada/pcomclient) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"6b874232-d33b-51e8-a6a6-3d63bbe593a4"}}}