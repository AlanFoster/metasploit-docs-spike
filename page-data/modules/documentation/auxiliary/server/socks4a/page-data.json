{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/auxiliary/server/socks4a","result":{"data":{"moduleMetadataJson":{"id":"7c4e291a-4974-5ede-8a58-3d1bf615ac8c","name":"Socks4a Proxy Server","fullname":"auxiliary/server/socks4a","description":"This module provides a socks4a proxy server that uses the builtin Metasploit routing to relay connections.","rank":300,"fields":{"detailsSlug":"/modules/details/auxiliary/server/socks4a","documentationSlug":"/modules/documentation/auxiliary/server/socks4a","referencesSlug":"/modules/references/auxiliary/server/socks4a"},"documentation":{"html":"<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start <code class=\"language-text\">msfconsole</code></li>\n<li>Do: <code class=\"language-text\">use auxiliary/server/socks4a</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>Do: <code class=\"language-text\">curl --proxy socks4a://localhost:1080 https://github.com</code></li>\n<li>You should see the source for the Github homepage</li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>SRVHOST</strong></p>\n<p>  The local IP address to bind the proxy to. The default value of <code class=\"language-text\">0.0.0.0</code> will expose the proxy to everything on the attacker's network.</p>\n<p>  <strong>SRVPORT</strong></p>\n<p>  The local port to bind the proxy to. The default value is <code class=\"language-text\">1080</code>, the standard port for a socks4a proxy.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>  This module is great when pivoting across a network. Suppose we have two machines:</p>\n<ol>\n<li>Attacker's machine, on the <code class=\"language-text\">192.168.1.0/24</code> subnet.</li>\n<li>Victim machine with two network interfaces, one attached to the <code class=\"language-text\">192.168.1.0/24</code> subnet and the other attached to the non-routable <code class=\"language-text\">10.0.0.0/24</code> subnet.</li>\n</ol>\n<p>  We'll begin by starting the socks4a proxy:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use auxiliary/server/socks4a\nmsf auxiliary(socks4a) &gt; run\n[*] Auxiliary module execution completed\n[*] Starting the socks4a proxy server\nmsf auxiliary(socks4a) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Preparing to pivot across a network requires us to first establish a Meterpreter session on the victim machine. From there, we can use the <code class=\"language-text\">autoroute</code> script to enable access to the non-routable subnet:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">meterpreter &gt; run autoroute -s 10.0.0.0/24</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>  The <code class=\"language-text\">autoroute</code> module will enable our local socks4a proxy to direct all traffic to the <code class=\"language-text\">10.0.0.0/24</code> subnet through our Meterpreter session, causing it to emerge from the victim's machine and thus giving us access to the non-routable subnet. We can now use <code class=\"language-text\">curl</code> to connect to a machine on the non-routable subnet via the socks4a proxy:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">curl --proxy socks4a://localhost:1080 http://10.0.0.15:8080/robots.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>  We can take this a step further and use proxychains to enable other tools that don't have built-in support for proxies to access the non-routable subnet. The short-and-sweet guide to installing and configuring proxychains looks something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"># apt-get install proxychains\n# cp /etc/proxychains.conf /etc/proxychains.conf.backup\n# echo &quot;socks4 127.0.0.1 8080&quot; &gt; /etc/proxychains.conf</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>  From there, we can use our other tools by simply prefixing them with <code class=\"language-text\">proxychains</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"># proxychains curl http://10.0.0.15:8080/robots.txt\n# proxychains nmap -sT -Pn -n -p 22 10.0.0.15\n# proxychains firefox</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"7c4e291a-4974-5ede-8a58-3d1bf615ac8c"}}}