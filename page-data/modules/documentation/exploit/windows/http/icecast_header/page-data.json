{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/http/icecast_header","result":{"data":{"moduleMetadataJson":{"id":"4025c978-d5d5-53cf-94be-b40511c8e5d8","name":"Icecast Header Overwrite","fullname":"exploit/windows/http/icecast_header","description":"This module exploits a buffer overflow in the header parsing of icecast\n        versions 2.0.1 and earlier, discovered by Luigi Auriemma. Sending 32\n        HTTP headers will cause a write one past the end of a pointer array. On\n        win32 this happens to overwrite the saved instruction pointer, and on\n        linux (depending on compiler, etc) this seems to generally overwrite\n        nothing crucial (read not exploitable).\n\n        This exploit uses ExitThread(), this will leave icecast thinking the\n        thread is still in use, and the thread counter won't be decremented.\n        This means for each time your payload exits, the counter will be left\n        incremented, and eventually the threadpool limit will be maxed. So you\n        can multihit, but only till you fill the threadpool.","rank":500,"fields":{"detailsSlug":"/modules/details/exploit/windows/http/icecast_header","documentationSlug":"/modules/documentation/exploit/windows/http/icecast_header","referencesSlug":"/modules/references/exploit/windows/http/icecast_header"},"documentation":null}},"pageContext":{"id":"4025c978-d5d5-53cf-94be-b40511c8e5d8"}}}