{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/browser/ms13_055_canchor","result":{"data":{"moduleMetadataJson":{"id":"2c687068-af2d-5c9a-a26a-821f26143910","name":"MS13-055 Microsoft Internet Explorer CAnchorElement Use-After-Free","fullname":"exploit/windows/browser/ms13_055_canchor","description":"In IE8 standards mode, it's possible to cause a use-after-free condition by first\n        creating an illogical table tree, where a CPhraseElement comes after CTableRow,\n        with the final node being a sub table element. When the CPhraseElement's outer\n        content is reset by using either outerText or outerHTML through an event handler,\n        this triggers a free of its child element (in this case, a CAnchorElement, but\n        some other objects apply too), but a reference is still kept in function\n        SRunPointer::SpanQualifier. This function will then pass on the invalid reference\n        to the next functions, eventually used in mshtml!CElement::Doc when it's trying to\n        make a call to the object's SecurityContext virtual function at offset +0x70, which\n        results a crash. An attacker can take advantage of this by first creating an\n        CAnchorElement object, let it free, and then replace the freed memory with another\n        fake object. Successfully doing so may allow arbitrary code execution under the\n        context of the user.\n\n        This bug is specific to Internet Explorer 8 only. It was originally discovered by\n        Jose Antonio Vazquez Gonzalez and reported to iDefense, but was discovered again\n        by Orange Tsai at Hitcon 2013.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/windows/browser/ms13_055_canchor","documentationSlug":"/modules/documentation/exploit/windows/browser/ms13_055_canchor"},"documentation":null}},"pageContext":{"id":"2c687068-af2d-5c9a-a26a-821f26143910"}}}