{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/http/struts_dmi_exec","result":{"data":{"moduleMetadataJson":{"id":"103222ac-9df2-573f-bee6-b653caf55f59","name":"Apache Struts Dynamic Method Invocation Remote Code Execution","fullname":"exploit/multi/http/struts_dmi_exec","description":"This module exploits a remote command execution vulnerability in Apache Struts\n        version between 2.3.20 and 2.3.28 (except 2.3.20.2 and 2.3.24.2). Remote Code\n        Execution can be performed via method: prefix when Dynamic Method Invocation\n        is enabled.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/struts_dmi_exec","documentationSlug":"/modules/documentation/exploit/multi/http/struts_dmi_exec","referencesSlug":"/modules/references/exploit/multi/http/struts_dmi_exec"},"documentation":{"html":"<p>struts<em>dmi</em>exec is a module that exploits Apache Struts 2's Dynamic Method Invocation,\nand it supports Windows and Linux platforms.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>Apache Struts versions between 2.3.20 and 2.3.28 are vulnerable, except 2.3.20.2 and 2.3.24.2.\nThe application's struts.xml also needs set <code class=\"language-text\">struts.enable.DynamicMethodInvocation</code> to true,\nand <code class=\"language-text\">struts.devMode</code> to false.</p>\n<p>For testing purposes, here is how you would set up the vulnerable machine:</p>\n<ol>\n<li>Download Apache Tomcat</li>\n<li>Download Java. <a href=\"http://tomcat.apache.org/whichversion.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Choose an appropriate version</a> based on the Apache Tomcat version you downloaded.</li>\n<li>Download the vulnerable <a href=\"https://github.com/rapid7/metasploit-framework/files/241784/struts2-blank.tar.gz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apache Struts application</a>.</li>\n<li>Install Java first. Make sure you have the JAVA_HOME environment variable.</li>\n<li>Extract Apache Tomcat.</li>\n<li>In conf directory of Apache Tomcat, open the tomcat-users.xml file with a text editor.</li>\n<li>In tomcat-users.xml, add the <code class=\"language-text\">manager-gui</code> role</li>\n<li>In tomcat-users.xml, add the <code class=\"language-text\">manager-gui</code> role to a user.</li>\n<li>Remove other users.</li>\n<li>In a terminal or command prompt, <code class=\"language-text\">cd</code> to the bin directory, and run: <code class=\"language-text\">catalina.bat run</code> (or catalina.sh). You should have Apache Tomcat running on port 8080.</li>\n<li>Extract the vulnerable struts app: <code class=\"language-text\">tar -xf struts2-blank.tar.gz</code></li>\n<li>Navigate to the Apache Tomcat server with a browser on port 8080.</li>\n<li>Click on Manager App</li>\n<li>In the WAR file to deploy section, deploy struts2-blank.war</li>\n<li>Stop struts2-blank in the manager app.</li>\n<li>On the server, <code class=\"language-text\">cd</code> to <code class=\"language-text\">apache-tomcat-[version]/webapps/struts2-blank/WEB-INF/classes</code>, open struts.xml with a text editor.</li>\n<li>In the XML file, update <code class=\"language-text\">struts.enable.DynamicMethodInvocation</code> to true</li>\n<li>In the XML file, update <code class=\"language-text\">struts.devMode</code> to false.</li>\n<li>Back to Apache Tomcat's manager app. Start the struts2-blank again.</li>\n</ol>\n<p>And now you have a vulnerable server.</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p><strong>TMPPATH</strong></p>\n<p>By default, the struts<em>dmi</em>exec exploit should be ready to go without much configuration. However,\nin case you need to change where the payload should be uploaded to, make sure to set the correct\ntarget, and then change the TMPPATH datastore option.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>struts<em>dmi</em>exec supports three platforms: Windows, Linux, and Java. By default, it uses Java, so\nyou don't need to worry about configuring this. Running the module can be as simple as the usage\nexplained in the Overview section.</p>\n<p>However, native payload do have their benefits (for example: Windows Meterpreter has better\nsupport than Java), so if you decide to switch to a different platform, here is what you do:</p>\n<ol>\n<li>Do <code class=\"language-text\">show targets</code>, and see which one you should be using</li>\n<li>Do <code class=\"language-text\">set target [id]</code></li>\n<li>Do <code class=\"language-text\">show payloads</code>, which shows you a list of compatible payloads for that target.</li>\n<li>Do: <code class=\"language-text\">set payload [payload name]</code></li>\n<li>Do: <code class=\"language-text\">exploit</code></li>\n</ol>"}}},"pageContext":{"id":"103222ac-9df2-573f-bee6-b653caf55f59"}}}