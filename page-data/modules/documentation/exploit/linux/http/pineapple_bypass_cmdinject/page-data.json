{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/http/pineapple_bypass_cmdinject","result":{"data":{"moduleMetadataJson":{"id":"1c77ca7f-2ad4-5a5f-8c57-39a3d517e427","name":"Hak5 WiFi Pineapple Preconfiguration Command Injection","fullname":"exploit/linux/http/pineapple_bypass_cmdinject","description":"This module exploits a login/csrf check bypass vulnerability on WiFi Pineapples version 2.0 <= pineapple < 2.4.\n      These devices may typically be identified by their SSID beacons of 'Pineapple5_....';\n      Provided as part of the TospoVirus workshop at DEFCON23.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/linux/http/pineapple_bypass_cmdinject","documentationSlug":"/modules/documentation/exploit/linux/http/pineapple_bypass_cmdinject","referencesSlug":"/modules/references/exploit/linux/http/pineapple_bypass_cmdinject"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>The 'pineapple<em>bypass</em>cmdinject' exploit attacks a weak check for\npre-authorized CSS files, which allows the attacker to bypass\nauthentication. The exploit then relies on the anti-CSRF vulnerability\n(CVE-2015-4624) to obtain command injection.</p>\n<p>This exploit uses a utility function in\n/components/system/configuration/functions.php to execute commands once\nauthorization has been bypassed.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>This exploit requires a \"fresh\" pineapple, flashed with version 2.0-2.3. The\ndefault options are generally effective due to having a set state after being\nflashed. You will need to be connected to the WiFi pineapple network (e.g. via\nWiFi or ethernet).</p>\n<p>Assuming the above 2.3 firmware is installed, this exploit should always work.\nIf it does not, try it again. It should always work as long as the pineapple is\nin its default configuration.</p>"}}},"pageContext":{"id":"1c77ca7f-2ad4-5a5f-8c57-39a3d517e427"}}}