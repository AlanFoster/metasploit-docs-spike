{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/osx/browser/safari_file_policy","result":{"data":{"moduleMetadataJson":{"id":"9545acf6-cb99-59c7-a52f-368e5874b7f6","name":"Apple Safari file:// Arbitrary Code Execution","fullname":"exploit/osx/browser/safari_file_policy","description":"This module exploits a vulnerability found in Apple Safari on OS X platform.\n        A policy issue in the handling of file:// URLs may allow arbitrary remote code\n        execution under the context of the user.\n\n          In order to trigger arbitrary remote code execution, the best way seems to\n        be opening a share on the victim machine first (this can be SMB/WebDav/FTP, or\n        a file format that OS X might automount), and then execute it in /Volumes/[share].\n        If there's some kind of bug that leaks the victim machine's current username,\n        then it's also possible to execute the payload in /Users/[username]/Downloads/,\n        or else bruteforce your way to getting that information.\n\n          Please note that non-java payloads (*.sh extension) might get launched by\n        Xcode instead of executing it, in that case please try the Java ones instead.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/osx/browser/safari_file_policy","documentationSlug":"/modules/documentation/exploit/osx/browser/safari_file_policy"},"documentation":null}},"pageContext":{"id":"9545acf6-cb99-59c7-a52f-368e5874b7f6"}}}