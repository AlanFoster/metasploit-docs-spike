{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/android/browser/stagefright_mp4_tx3g_64bit","result":{"data":{"moduleMetadataJson":{"id":"77cbd078-fffb-5565-a8d2-ff42cdcbd983","name":"Android Stagefright MP4 tx3g Integer Overflow","fullname":"exploit/android/browser/stagefright_mp4_tx3g_64bit","description":"This module exploits an integer overflow vulnerability in the Stagefright\n        Library (libstagefright.so). The vulnerability occurs when parsing specially\n        crafted MP4 files. While a wide variety of remote attack vectors exist, this\n        particular exploit is designed to work within an HTML5 compliant browser.\n\n          Exploitation is done by supplying a specially crafted MP4 file with two\n        tx3g atoms that, when their sizes are summed, cause an integer overflow when\n        processing the second atom. As a result, a temporary buffer is allocated\n        with insufficient size and a memcpy call leads to a heap overflow.\n\n          This version of the exploit uses a two-stage information leak based on\n        corrupting the MetaData that the browser reads from mediaserver. This method\n        is based on a technique published in NorthBit's Metaphor paper. First,\n        we use a variant of their technique to read the address of a heap buffer\n        located adjacent to a SampleIterator object as the video HTML element's\n        videoHeight. Next, we read the vtable pointer from an empty Vector within\n        the SampleIterator object using the video element's duration. This gives\n        us a code address that we can use to determine the base address of\n        libstagefright and construct a ROP chain dynamically.\n\n        NOTE: the mediaserver process on many Android devices (Nexus, for example) is\n        constrained by SELinux and thus cannot use the execve system call. To avoid\n        this problem, the original exploit uses a kernel exploit payload that disables\n        SELinux and spawns a shell as root. Work is underway to make the framework\n        more amenable to these types of situations. Until that work is complete, this\n        exploit will only yield a shell on devices without SELinux or with SELinux in\n        permissive mode.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/android/browser/stagefright_mp4_tx3g_64bit","documentationSlug":"/modules/documentation/exploit/android/browser/stagefright_mp4_tx3g_64bit","referencesSlug":"/modules/references/exploit/android/browser/stagefright_mp4_tx3g_64bit"},"documentation":null}},"pageContext":{"id":"77cbd078-fffb-5565-a8d2-ff42cdcbd983"}}}