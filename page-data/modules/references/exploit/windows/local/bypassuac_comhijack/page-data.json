{"componentChunkName":"component---src-templates-module-references-template-tsx","path":"/modules/references/exploit/windows/local/bypassuac_comhijack","result":{"data":{"moduleMetadataJson":{"id":"13e7571c-4234-504f-8159-2a807325eb55","name":"Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)","fullname":"exploit/windows/local/bypassuac_comhijack","description":"This module will bypass Windows UAC by creating COM handler registry entries in the\n        HKCU hive. When certain high integrity processes are loaded, these registry entries\n        are referenced resulting in the process loading user-controlled DLLs. These DLLs\n        contain the payloads that result in elevated sessions. Registry key modifications\n        are cleaned up after payload invocation.\n\n        This module requires the architecture of the payload to match the OS, but the\n        current low-privilege Meterpreter session architecture can be different. If\n        specifying EXE::Custom your DLL should call ExitProcess() after starting your\n        payload in a separate process.\n\n        This module invokes the target binary via cmd.exe on the target. Therefore if\n        cmd.exe access is restricted, this module will not run correctly.","rank":600,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/bypassuac_comhijack","documentationSlug":"/modules/documentation/exploit/windows/local/bypassuac_comhijack","referencesSlug":"/modules/references/exploit/windows/local/bypassuac_comhijack"},"references":["https://wikileaks.org/ciav7p1/cms/page_13763373.html","https://github.com/FuzzySecurity/Defcon25/Defcon25_UAC-0day-All-Day_v1.2.pdf"]}},"pageContext":{"id":"13e7571c-4234-504f-8159-2a807325eb55"}}}