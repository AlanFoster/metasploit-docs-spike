{"componentChunkName":"component---src-templates-module-references-template-tsx","path":"/modules/references/exploit/windows/local/appxsvc_hard_link_privesc","result":{"data":{"moduleMetadataJson":{"id":"9323d40d-d4d0-5a21-8f45-1bfe0f7f2170","name":"AppXSvc Hard Link Privilege Escalation","fullname":"exploit/windows/local/appxsvc_hard_link_privesc","description":"There exists a privilege escalation vulnerability for\n        Windows 10 builds prior to build 17763. Due to the AppXSvc's\n        improper handling of hard links, a user can gain full\n        privileges over a SYSTEM-owned file. The user can then utilize\n        the new file to execute code as SYSTEM.\n\n        This module employs a technique using the Diagnostics Hub Standard\n        Collector Service (DiagHub) which was discovered by James Forshaw to\n        load and execute a DLL as SYSTEM.","rank":300,"fields":{"detailsSlug":"/modules/details/exploit/windows/local/appxsvc_hard_link_privesc","documentationSlug":"/modules/documentation/exploit/windows/local/appxsvc_hard_link_privesc","referencesSlug":"/modules/references/exploit/windows/local/appxsvc_hard_link_privesc"},"references":["https://cvedetails.com/cve/CVE-2019-0841/","https://krbtgt.pw/dacl-permissions-overwrite-privilege-escalation-cve-2019-0841/","https://googleprojectzero.blogspot.com/2015/12/between-rock-and-hard-link.html","https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html","https://0x00-0x00.github.io/research/2019/05/30/Coding-a-reliable-CVE-2019-0841-Bypass.html"]}},"pageContext":{"id":"9323d40d-d4d0-5a21-8f45-1bfe0f7f2170"}}}