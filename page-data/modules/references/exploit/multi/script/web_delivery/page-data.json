{"componentChunkName":"component---src-templates-module-references-template-tsx","path":"/modules/references/exploit/multi/script/web_delivery","result":{"data":{"moduleMetadataJson":{"id":"e5036875-2eb2-5dcf-905f-189539c1529e","name":"Script Web Delivery","fullname":"exploit/multi/script/web_delivery","description":"This module quickly fires up a web server that serves a payload.\n        The provided command which will allow for a payload to download and execute.\n        It will do it either specified scripting language interpreter or \"squiblydoo\" via regsvr32.exe\n        for bypassing application whitelisting. The main purpose of this module is to quickly establish\n        a session on a target machine when the attacker has to manually type in the command:\n        e.g. Command Injection, RDP Session, Local Access or maybe Remote Command Execution.\n        This attack vector does not write to disk so it is less likely to trigger AV solutions and will allow privilege\n        escalations supplied by Meterpreter.\n\n        When using either of the PSH targets, ensure the payload architecture matches the target computer\n        or use SYSWOW64 powershell.exe to execute x86 payloads on x64 machines.\n\n        Regsvr32 uses \"squiblydoo\" technique for bypassing application whitelisting.\n        The signed Microsoft binary file, Regsvr32, is able to request an .sct file\n        and then execute the included PowerShell command inside of it.\n\n        Similarly, the pubprn target uses the pubprn.vbs script to request and\n        execute a .sct file.\n\n        Both web requests (i.e., the .sct file and PowerShell download/execute)\n        can occur on the same port.\n\n        \"PSH (Binary)\" will write a file to the disk, allowing for custom binaries\n        to be served up to be downloaded and executed.","rank":0,"fields":{"detailsSlug":"/modules/details/exploit/multi/script/web_delivery","documentationSlug":"/modules/documentation/exploit/multi/script/web_delivery","referencesSlug":"/modules/references/exploit/multi/script/web_delivery"},"references":["https://securitypadawan.blogspot.com/2014/02/php-meterpreter-web-delivery.html","https://www.pentestgeek.com/2013/07/19/invoke-shellcode/","http://www.powershellmagazine.com/2013/04/19/pstip-powershell-command-line-switches-shortcuts/","https://www.darkoperator.com/blog/2013/3/21/powershell-basics-execution-policy-and-code-signing-part-2.html","https://subt0x10.blogspot.com/2017/04/bypass-application-whitelisting-script.html","https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/","https://iwantmore.pizza/posts/amsi.html"]}},"pageContext":{"id":"e5036875-2eb2-5dcf-905f-189539c1529e"}}}